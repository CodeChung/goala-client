{"version":3,"sources":["routes/MissingPage/MissingPage.js","components/Spinner/Spinner.js","components/Card/Date/Date.js","components/Card/Card.js","components/CardList/CardList.js","components/SearchBar/SearchBar.js","config.js","services/token-service.js","services/entries-service.js","services/goals-service.js","components/EntryBar/EntryStamp/EntryStamp.js","services/reminders-service.js","components/EntryBar/EntryBar.js","services/blocks-service.js","components/ToolBox/Blocks/Weekly/Weekly.js","services/logs-service.js","components/ToolBox/Blocks/CheckList/CheckList.js","components/ToolBox/Blocks/Clock/Clock.js","components/ToolBox/Blocks/Count/Count.js","components/ToolBox/Blocks/CountDown/CountDown.js","components/ToolBox/Blocks/Date/Date.js","components/ToolBox/Blocks/Notes/Notes.js","components/ToolBox/Blocks/Text/Text.js","components/ToolBox/Blocks/Trash/Trash.js","components/ToolBox/Blocks/Title/Title.js","components/ToolBox/Blocks/YesNo/YesNo.js","components/ToolBox/Blocks/BaseBlock/BlockMap.js","components/Tile/Tile.js","components/ToolBox/Blocks/BaseBlock/BaseBlock.js","routes/LogView/LogView.js","routes/EntryPage/EntryPage.js","routes/HomePage/HomePage.js","routes/SearchPage/SearchPage.js","components/SideBar/SideBar.js","routes/SavedPage/SavedPage.js","components/Calendar/CalendarHeader/CalendarHeader.js","components/Calendar/CalendarCell/CalendarCell.js","components/Calendar/CalendarDays/CalendarDays.js","components/Calendar/CalendarView/CalendarView.js","components/Calendar/Calendar.js","routes/CalendarPage/CalendarPage.js","components/Reminder/Reminder.js","components/ToolBox/ReminderTools/Task.js","components/ToolBox/ReminderTools/Column.js","components/ToolBox/ReminderTools/TrashColumn.js","components/ToolBox/ReminderTools/ReminderTools.js","components/ReminderForm/ReminderForm.js","routes/BlocksPage/Sequence.js","routes/BlocksPage/BlocksPage.js","routes/RemindersPage/RemindersPage.js","services/actions-service.js","components/Goal/Goal.js","components/GoalForm/GoalForm.js","routes/ActionsPage/ActionsPage.js","views/User/User.js","routes/LandingPage/LandingPage.js","services/auth-api-service.js","components/LoginForm/LoginForm.js","routes/LoginPage/LoginPage.js","components/RegistrationForm/RegistrationForm.js","routes/RegistrationPage/RegistrationPage.js","views/NonUser/NonUser.js","services/chat-service.js","context/GoalContext.js","App.js","index.js"],"names":["MissingPage","message","this","props","className","alt","src","React","Component","override","css","Spinner","state","loading","sizeUnit","size","color","Date","date","moment","toDate","getDate","toLocaleString","weekday","month","getFullYear","Card","saved","text","title","highlight","replace","setState","onClick","upDate","innerRef","ContentEditable","html","disabled","icon","faBookmark","CardList","cardsList","cards","map","card","key","id","actions","reminders","keyword","defaultProps","SearchBar","event","preventDefault","search","onSubmit","e","submitSearch","faSearch","placeholder","onChange","updateKeyword","target","value","config","API_ENDPOINT","TOKEN_KEY","process","REACT_APP_API_KEY","TokenService","saveAuthToken","token","window","sessionStorage","setItem","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","EntriesService","createNewEntry","fetch","method","headers","body","JSON","stringify","format","blocks","then","res","ok","json","Promise","reject","getEntryByDate","getEntriesById","getEntriesByKeyword","getEntriesByMonth","monthString","updateEntryText","updateEntryTitle","GoalsService","createGoal","action_id","getGoalsByDay","day","getGoalByGoalId","goalId","getGoals","postGoal","goal","getGoalById","deleteGoal","EntryStamp","tile","type","reminder","addTile","RemindersService","createReminder","deleteReminder","reminderId","getReminders","getRemindersByDate","getRemindersByDay","getReminderByReminderId","EntryBar","goals","dateFormatted","currentReminders","goalsTiles","remindersTiles","BlocksService","getBlocksByIds","ids","console","log","updateBlockSequence","sequence","block_sequence","Weekly","Su","M","Tu","W","Th","F","Sa","original","days","Object","keys","forEach","includes","val","toggleDay","propTypes","exact","bool","LogsService","getLogByIdDate","logId","createLog","updateLogValue","blockId","values","getWeeklyRatings","getDailyRatings","getGoalStats","CheckList","checked","updateText","k2y","log_id","toggleCheck","object","Clock","hour","minute","meridiem","error","Math","floor","time","Boolean","number","startsWith","updateHour","updateMinute","toggleMeridiem","Count","num","den","units","CountDown","count","year","handleDay","handleMonth","handleYear","Notes","content","propContent","updateContent","contentEditable","Text","handleChange","Item","styled","div","isDragging","Notice","Handle","List","isDraggingOver","Container","Trash","provided","snapshot","list","ref","faTrashAlt","length","item","index","draggableId","draggableProps","style","dragHandleProps","width","height","viewBox","fill","d","Title","updateTitle","YesNo","yes","toggleButton","BlockMap","Tile","user_id","logDate","last_logged","BaseBlock","dimension","block","Block","LogView","originalBlocks","redirect","logdate","match","params","split","goal_id","reminder_id","catch","logs","to","EntryPage","saveButton","originalText","data","logView","handleTitle","handleText","originalTitle","newLog","push","activateLog","resetDate","faArrowAltCircleLeft","saveChanges","HomePage","page","itemCount","entries","searchActive","searchEntries","addNewEntries","reverse","element","scrollHeight","scrollTop","clientHeight","find","entry","searchJournal","onScroll","handleScroll","SideBar","currentView","setCurrentNav","undefined","faHome","faCalendar","faCheckSquare","faBell","logout","faSignOutAlt","rotation","exampleCards","months","CalendarHeader","prevMonth","faChevronLeft","currentMonth","nextMonth","faChevronRight","CalendarCell","openData","CalendarDays","activeDays","refresh","offset","renderCells","prevProps","array","Number","isInteger","monthOffset","startOf","monthLength","daysInMonth","cells","i","addCell","CalendarView","resetData","Calendar","getMonth","selectedDate","newMonth","CalendarPage","Reminder","modal","activateReminder","toggleForm","Task","task","TaskList","Column","column","droppableId","droppableProps","tasks","TrashColumn","initialData","columns","taskIds","columnOrder","toolboxSequence","ReminderForm","deleteReminderId","reminderTitle","updateDeleteReminder","updateReminderTitle","options","returnPage","Sequence","Content","Kiosk","Button","button","ButtonText","SIDEBAR_ITEMS","uuid","reorder","startIndex","endIndex","result","Array","from","splice","removed","copy","source","destination","droppableSource","droppableDestination","sourceClone","destClone","move","BlocksPage","trash","originalSequence","onDragEnd","filter","addList","blockSeq","err","updatedBlocks","activeBlocks","trashBar","isDropDisabled","RemindersPage","activeReminder","unscheduledReminders","upcomingReminders","recurringReminders","formActive","settingsActive","schedule","blockSequence","recurringReminderComponents","activateForm","upcomingReminderComponents","unscheduledReminderComponents","toggleSettings","faTools","ActionsService","deleteAction","actionId","getActions","createAction","Goal","GoalForm","updateActionTitle","actionTitle","updateDeleteAction","deleteActionTitle","updateGoalTitle","goalTitle","updateDeleteGoal","deleteGoalTitle","success","reload","action","goalOptions","addGoal","ActionsPage","activeGoal","newGoal","actionList","goalList","User","view","updateView","path","component","render","LandingPage","AuthApiService","postLogin","username","password","postUser","user","LoginForm","authToken","onLoginSuccess","autoComplete","handleSubmit","role","htmlFor","required","name","LoginPage","login","handleLoginSuccess","location","history","RegistrationForm","onRegistrationSuccess","RegistrationPage","handleRegistrationSuccess","NonUser","ChatService","postMessage","msg","getChat","nullGoals","goal_0","motivations","duration","nullChats","GoalContext","createContext","chats","setError","clearError","setGoal","setChat","updateChatClient","updateChatServer","GoalProvider","chat","Provider","children","App","contextType","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ab79b9a9.chunk.js","sourcesContent":["import React from 'react';\nimport './MissingPage.css';\n\nclass MissingPage extends React.Component {\n    render() {\n        const { message } = this.props\n        return (\n            <div className='missing-page'>\n                <img \n                    alt='missing koala'\n                    src='https://images.unsplash.com/photo-1556811431-ec33c663aa89?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80' />\n                <h2>Sorry bud, I'm missing</h2>\n                { message }\n            </div>\n        )\n    }\n}\n\nexport default MissingPage;","import React from 'react';\nimport { css } from '@emotion/core';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './Spinner.css';\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n \nclass Spinner extends React.Component {\n    constructor(props) {\n        super(props);\n            this.state = {\n                loading: true\n        }\n    }\n    render() {\n    return (\n        <div className='sweet-loading'>\n            <ClipLoader\n                css={override}\n                sizeUnit={\"px\"}\n                size={150}\n                color={'#123abc'}\n                loading={this.state.loading}\n            />\n        </div> \n    )\n    }\n}\n\nexport default Spinner","import React from 'react';\nimport moment from 'moment'\nimport './Date.css';\n\nclass Date extends React.Component {\n    render() {\n        let { date } = this.props\n        date = moment(date).toDate()\n        return (\n            <div className='entry-date'>\n                <div className='entry-date-number'>\n                    {date.getDate()}\n                </div>\n                <div className='entry-date-block'>\n                    <div className='entry-date-day'>\n                        {date.toLocaleString('default', { weekday: 'long' })}\n                    </div>  \n                    <div className='entry-date-month'>\n                        {date.toLocaleString('default', { month: 'long' })} {date.getFullYear()}\n                    </div> \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Date;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookmark } from '@fortawesome/free-solid-svg-icons';\nimport './Card.css';\nimport Date from './Date/Date';\nimport ContentEditable from 'react-contenteditable';\n\nclass Card extends React.Component {\n    state = {\n        date: null, \n        saved: null, \n        text: '', \n        title: null,\n        highlight: null,\n    }\n    componentDidMount() {\n        let { date, highlight, saved, text, title, } = this.props\n        text = text || ''\n        date = date || new Date()\n\n        if (highlight) {\n            text = text.replace(highlight, `<span class='highlight-baby'>${highlight}</span>`)\n        }\n        this.setState({ date, highlight, saved, text, title })\n    }\n    render() {\n        let { date, saved, text, title } = this.state\n        return (\n            <div\n                onClick={() => this.props.upDate(date)}\n                className='entry-card'>\n                <div className='entry-card-header'>\n                    {date && <Date date={date}/>}\n                    <h3>\n                        {title}\n                    </h3>\n                </div>\n                <div className='entry-card-body'>\n                    <ContentEditable\n                        innerRef={this.ContentEditable}\n                        html={text}\n                        disabled={true}\n                        />\n                </div>\n                \n                <div \n                    // onClick={ saved = !saved }\n                    className={ saved ? 'entry-bookmark' : 'entry-bookmark active-mark' }>\n                    <FontAwesomeIcon icon={faBookmark} />\n                </div>\n            </div>\n        )\n    }\n}\n\nCard.propTypes = {\n    id: PropTypes.number,\n    date: PropTypes.object,\n    saved: PropTypes.bool,\n    actions: PropTypes.array,\n    reminders: PropTypes.array,\n    upDate: PropTypes.func,\n}\n\nexport default Card;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../Card/Card';\nimport './CardList.css';\n\nclass CardList extends React.Component {\n    // we're going to pass down props (card data) conditional on view:\n    // home feed -> fetch all cards\n    // saved feed -> fetch saved cards\n    // search feed -> fetch queried cards\n    static defaultProps = {\n        cards: []\n    }\n    render() {\n        const cardsList = this.props.cards.map(card => \n            <Card \n                upDate={(date) => this.props.upDate(date)}\n                key={card.id}\n                id={card.id}\n                date={card.date}\n                saved={card.saved}\n                actions={card.actions}\n                reminders={card.reminders}\n                text={card.text}\n                title={card.title}\n                keyword={this.props.keyword}\n                />\n        )\n        return (\n            <div className='card-list'>\n                {cardsList}\n            </div>\n        )\n    }\n}\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.number,\n        date: PropTypes.instanceOf(Date),\n        saved: PropTypes.bool,\n        actions: PropTypes.array,\n        reminders: PropTypes.array,\n        text: PropTypes.string,\n    }))\n}\n\nexport default CardList;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n    submitSearch(event) {\n        event.preventDefault()\n        this.props.search()\n    }\n    render() {\n        return (\n            <div className='searchbar'>\n                <form\n                    onSubmit={ (e) => this.submitSearch(e) }\n                    >\n                    <button >\n                        <FontAwesomeIcon icon={faSearch} />\n                    </button>\n                    <input\n                        placeholder='Search through past entries'\n                        onChange={ (e) => this.props.updateKeyword(e.target.value) }\n                        />\n                </form>\n            </div>\n        )\n    }\n}\n\n\n\nexport default SearchBar","const config = {\n    // API_ENDPOINT: 'https://floating-dawn-57438.herokuapp.com/api',\n    API_ENDPOINT: 'http://localhost:8000/api',\n    TOKEN_KEY: process.env.REACT_APP_API_KEY || 'goala-client-auth-token',\n}\n\nexport default config","import config from '../config'\n\nconst TokenService = {\n    saveAuthToken(token) {\n        window.sessionStorage.setItem(config.TOKEN_KEY, token)\n    },\n    getAuthToken() {\n        return window.sessionStorage.getItem(config.TOKEN_KEY)\n    },\n    clearAuthToken() {\n        window.sessionStorage.removeItem(config.TOKEN_KEY)\n    },\n    hasAuthToken() {\n        return !!TokenService.getAuthToken()\n    },\n}\n\nexport default TokenService","import config from '../config'\nimport TokenService from './token-service';\nimport moment from 'moment';\n\nconst EntriesService = {\n    createNewEntry() {\n        return fetch(`${config.API_ENDPOINT}/entries/`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({\n                title: 'New Title',\n                date: moment(new Date()).format('YYYY-MM-DD'),\n                text: 'Start your entry for today...',\n                blocks: null,\n                saved: false,\n            })\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getEntryByDate(date) {\n        return fetch(`${config.API_ENDPOINT}/entries/date/${date}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getEntriesById() {\n        return fetch(`${config.API_ENDPOINT}/entries/`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n    getEntriesByKeyword(keyword) {\n        return fetch(`${config.API_ENDPOINT}/entries/search/${keyword}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n    getEntriesByMonth(month) {\n        const monthString = moment(month + 1, 'MM').format('YYYY-MM-DD')\n        return fetch(`${config.API_ENDPOINT}/entries/month/${monthString}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n    updateEntryText(id, text) {\n        return fetch(`${config.API_ENDPOINT}/entries/text/${id}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify({text: text})\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n    updateEntryTitle(id, title) {\n        return fetch(`${config.API_ENDPOINT}/entries/title/${id}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({title})\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n\n    // postGoal(goal) {\n    //     return fetch(`${config.API_ENDPOINT}/goals`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //         body: JSON.stringify(goal)\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // getGoalById(id) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // deleteGoal(goalId) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         }\n    //     })\n    //     .then(res =>\n    //         (!res.ok)\n    //             ? res.json().then(e => Promise.reject(e))\n    //             : res.json()\n    //     )\n    // }\n}\n\nexport default EntriesService","import config from '../config'\nimport TokenService from './token-service';\n\nconst GoalsService = {\n    createGoal(title, action_id) {\n        return fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ title, action_id })\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalsByDay(day) {\n        return fetch(`${config.API_ENDPOINT}/goals/day/${day}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalByGoalId(goalId) {\n        return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoals() {\n        return fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n\n    postGoal(goal) {\n        return fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(goal)\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalById(id) {\n        return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    deleteGoal(goalId) {\n        return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n}\n\nexport default GoalsService","import React from 'react';\nimport './EntryStamp.css';\n\nclass EntryStamp extends React.Component {\n    state = {\n        tile: {type: null}\n    }\n    componentDidMount() {\n        const { goal, reminder } = this.props\n\n        if (goal) {\n            this.setState({ \n                tile: { ...goal, type: 'goal' },\n            })\n        }\n\n        if (reminder) {\n            this.setState({ \n                tile: { ...reminder, type: 'reminder' },\n            })\n        }\n    }\n    render() {\n        const { title } = this.props\n    \n        return (\n            <div\n                onClick={() => this.props.addTile(this.state.tile)} \n                className='entry-stamp'>\n                {title}\n            </div>\n        )\n    }\n}\n\nexport default EntryStamp;","import config from '../config'\nimport TokenService from './token-service';\nimport moment from 'moment';\n\nconst RemindersService = {\n    createReminder(title) {\n        return fetch(`${config.API_ENDPOINT}/reminders/`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ date: moment(new Date()).format('YYYY-MM-DD'), title })\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n    deleteReminder(reminderId) {\n        return fetch(`${config.API_ENDPOINT}/reminders/${reminderId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n    getReminders() {\n        return fetch(`${config.API_ENDPOINT}/reminders`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getRemindersByDate(date) {\n        return fetch(`${config.API_ENDPOINT}/reminders/date/${date}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getRemindersByDay(day) {\n        return fetch(`${config.API_ENDPOINT}/reminders/day/${day}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getReminderByReminderId(reminderId) {\n        return fetch(`${config.API_ENDPOINT}/reminders/${reminderId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    }\n\n    // postGoal(goal) {\n    //     return fetch(`${config.API_ENDPOINT}/goals`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //         body: JSON.stringify(goal)\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // getGoalById(id) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // }\n}\n\nexport default RemindersService","import React from 'react';\nimport './EntryBar.css';\nimport GoalsService from '../../services/goals-service';\nimport moment from 'moment';\nimport EntryStamp from './EntryStamp/EntryStamp';\nimport RemindersService from '../../services/reminders-service';\n\nclass EntryBar extends React.Component {\n    state = {\n        goals: [],\n        reminders: []\n    }\n    componentDidMount() {\n        const weekdays = ['Su', 'M', 'Tu', 'W', 'Th', 'F', 'Sa']\n        const { date } = this.props\n        if (date) {\n            const day = weekdays[moment(date).day()]\n            const dateFormatted = moment(date).format('MMM-DD-YYYY')\n            GoalsService.getGoalsByDay(day)\n                .then(goals => this.setState({ goals }))\n\n            RemindersService.getRemindersByDate(dateFormatted)\n                .then(reminders => this.setState({ reminders }))\n            \n            RemindersService.getRemindersByDay(day)\n                .then(reminders => {\n                    const currentReminders = [...this.state.reminders, ...reminders]\n                    this.setState({ reminders: currentReminders })\n                })\n        }\n    }\n    render() {\n        const { date } = this.props\n        const { goals, reminders } =  this.state\n        const goalsTiles = goals.map((goal) => \n            <EntryStamp \n                date={date}\n                key={`goal-${goal.id}`}\n                addTile={(goal) => this.props.addTile(goal, date)} \n                title={goal.title} \n                goal={goal} />)\n        const remindersTiles = reminders.map((reminder) => \n            <EntryStamp \n                date={date}\n                key={`reminder-${reminder.id}`} \n                addTile={(reminder) => this.props.addTile(reminder, date)} \n                title={reminder.title}\n                reminder={reminder} />\n        )\n        return (\n            <div className='entry-bar'>\n                <div className='entry-bar-section entry-bar-goals'>\n                    <h4>Goals</h4>\n                    <div className='entry-tiles'>\n                        {goalsTiles}\n                    </div>\n                </div>\n                <span className='entry-bar-split' />\n                <div className='entry-bar-section entry-bar-reminders'>\n                    <h4>Reminders</h4>\n                    <div className='entry-tiles'>\n                        {remindersTiles}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EntryBar;","import config from '../config'\nimport TokenService from './token-service';\n\nconst BlocksService = {\n    getBlocksByIds(ids) {\n        console.log(ids, 'Thine ids')\n        return fetch(`${config.API_ENDPOINT}/blocks`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(ids)\n        })\n            .then(res =>{\n                return (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n                })\n    },\n    updateBlockSequence(sequence, type, id) {\n        console.log(`Type, type, reading all about it ${ type }`)\n        return fetch(`${config.API_ENDPOINT}/blocks/${type}/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ block_sequence: sequence })\n        })\n            .then(res => {\n                return (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n                })\n    }\n\n    // getActions() {\n    //     return fetch(`${config.API_ENDPOINT}/actions`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n\n    // postGoal(goal) {\n    //     return fetch(`${config.API_ENDPOINT}/goals`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //         body: JSON.stringify(goal)\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // getGoalById(id) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // deleteGoal(goalId) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         }\n    //     })\n    //     .then(res =>\n    //         (!res.ok)\n    //             ? res.json().then(e => Promise.reject(e))\n    //             : res.json()\n    //     )\n    // }\n}\n\nexport default BlocksService","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Weekly.css';\n\nclass Weekly extends React.Component {\n    state = {\n        Su: false,\n        M: false,\n        Tu: false,\n        W: false,\n        Th: false,\n        F: false,\n        Sa: false,\n        original: {}\n    }\n    componentDidMount() {\n        if (this.props.value.days) {\n            const days = this.props.value.days\n            const state = {}\n            const original = {}\n            Object.keys(this.state).forEach(key => {\n                console.log(key, days)\n                if (days.includes(key)) {\n                    state[key] = true\n                    original[key] = true\n                }\n            })\n\n            this.setState(state)\n        }\n    }\n    componentWillUnmount() {\n        const { original } = this.state;\n        \n    }\n    toggleDay(day) {\n        const val = this.state[day]\n        this.setState({ [day]: !val })\n    }\n    render() {\n        return (\n            <div className='block block-weekly'>\n                <h3>Weekly Schedule</h3>\n                <div className='weekly-board'>\n                    <div className={'weekly-day weekly-day-left ' + (this.state.Su && 'day-active')}\n                        onClick={() => this.toggleDay('Su')}\n                        >\n                        Su\n                    </div>\n                    <div className={'weekly-day ' + (this.state.M && 'day-active')}\n                        onClick={() => this.toggleDay('M')}\n                        >\n                        M\n                    </div>\n                    <div className={'weekly-day ' + (this.state.Tu && 'day-active')}\n                        onClick={() => this.toggleDay('Tu')}\n                        >\n                        Tu\n                    </div>\n                    <div className={'weekly-day ' + (this.state.W && 'day-active')}\n                        onClick={() => this.toggleDay('W')}\n                        >\n                        W\n                    </div>\n                    <div className={'weekly-day ' + (this.state.Th && 'day-active')}\n                        onClick={() => this.toggleDay('Th')}\n                        >\n                        Th\n                    </div>\n                    <div className={'weekly-day ' + (this.state.F && 'day-active')}\n                        onClick={() => this.toggleDay('F')}\n                        >\n                        F\n                    </div>\n                    <div className={'weekly-day weekly-day-right ' + (this.state.Sa && 'day-active')}\n                        onClick={() => this.toggleDay('Sa')}\n                        >\n                        Sa\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nWeekly.defaultProps = {\n    value: propTypes.exact({\n        Su: propTypes.bool,\n        M: propTypes.bool,\n        Tu: propTypes.bool,\n        W: propTypes.bool,\n        Th: propTypes.bool,\n        F: propTypes.bool,\n        Sa: propTypes.bool,\n    })\n}\n\nexport default Weekly;","import config from '../config';\nimport TokenService from './token-service';\nimport moment from 'moment';\n\nconst LogsService = {\n    getLogByIdDate(logId, date) {\n        return fetch(`${config.API_ENDPOINT}/logs/log/${logId}/${date}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    createLog(logId, date) {\n        return fetch(`${config.API_ENDPOINT}/logs/log/${logId}/${date}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    updateLogValue(blockId, date, logId, value) {\n        let dateFormatted = moment(date).format('MM-DD-YYYY')\n        return fetch(`${config.API_ENDPOINT}/logs/log/${logId}/${dateFormatted}`, {\n            method: 'PUT',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ values: { [blockId]: value } })\n\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n\n\n    getWeeklyRatings(goalId) {\n        return fetch(`${config.API_ENDPOINT}/logs/weekly/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getDailyRatings(goalId) {\n        return fetch(`${config.API_ENDPOINT}/logs/daily/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalStats(goalId) {\n        return fetch(`${config.API_ENDPOINT}/logs/stats/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    }\n}\n\nexport default LogsService","import React from 'react';\nimport propTypes from 'prop-types';\nimport './CheckList.css';\nimport LogsService from '../../../../services/logs-service';\n\nclass CheckList extends React.Component {\n    //TODO probably should sanitize this later\n    state = {\n        text: 'checklist',\n        checked: false,\n    }\n    componentDidMount() {\n        const { log, value } = this.props\n        debugger\n        if (log && log.value) {\n            Object.keys(log.value).forEach(key => {\n                Object.keys(log.value[key]).forEach(k2y => {\n                    this.setState({ [`${k2y}`]: log.value[key][k2y] })\n                })\n            })\n        }\n        else if (value) {\n            let checked = value.checked\n            let text = value.text\n            this.setState({ checked, text })\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.log && JSON.stringify(this.props.value) !== JSON.stringify(this.state)) {\n            LogsService.updateLogValue(this.props.log.blockId, this.props.log.date, this.props.log.log_id, this.state)\n        }\n    }\n    updateText = event => {\n        this.setState({ text: event.target.value})\n    }\n    toggleCheck() {\n        const { checked } = this.state\n        this.setState({ checked: !checked })\n    }\n    render() {\n        const { text, checked } = this.state\n        return (\n            <div className='block block-checklist'>\n                <input\n                    onChange={this.updateText}\n                    value={this.props.value.value || text}\n                    />\n                <input\n                    onChange={() => this.toggleCheck()}\n                    checked={checked}\n                    type='checkbox'\n                    />\n            </div>\n        )\n    }\n}\n\nCheckList.defaultProps = {\n    value: propTypes.object\n}\n\nexport default CheckList;","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Clock.css';\n\nclass Clock extends React.Component {\n    state = {\n        hour: 0,\n        minute: 0,\n        meridiem: true,\n        error: ''\n    }\n    componentDidMount() {\n        let hour, minute, meridiem\n        const { value } = this.props\n        hour = Math.floor(value.time / 100) % 12\n        minute = value.time % 100\n        meridiem = Boolean(Math.floor(value.time / 100) < 12)\n\n        this.setState({ hour, minute, meridiem })\n    }\n    toggleMeridiem() {\n        const { meridiem } = this.state\n        this.setState({ meridiem: !meridiem })\n    }\n    updateHour(event) {\n        event.preventDefault()\n        let error = ''\n        const number = event.target.value\n        if (number < 0) {\n            error = 'value must be greater than or equal to 0'\n        } else if (number > 12) {\n            error = 'value must be less than or equal to 12'\n        } else if ((number + 'a').startsWith('-')) {\n            error = 'value cant start with negative'\n        }\n        if (error) {\n            this.setState({ error })\n        } else {\n            this.setState({ hour: number })\n        }\n    }\n    updateMinute(event) {\n        event.preventDefault()\n        let error = ''\n        const number = event.target.value\n        if (number < 0) {\n            error = 'value must be greater than or equal to 0'\n        } else if (number > 59) {\n            error = 'value must be less than or equal to 59'\n        } else if ((number + 'a').startsWith('-')) {\n            error = 'value cant start with negative'\n        }\n        if (error) {\n            this.setState({ error })\n        } else {\n            this.setState({ minute: number })\n        }\n    }\n    render() {\n        const { meridiem, hour, minute, error } = this.state\n        return (\n            <div className='block block-clock'>\n                <h2>Clock</h2>\n                <div className='clock-block block-main'>\n                    <input onChange={(e) => this.updateHour(e)} type='number' value={hour || 0} />\n                    :\n                    <input onChange={(e) => this.updateMinute(e)} type='number' value={minute || 0}/>\n                    <div className='meridiem' onClick={() => this.toggleMeridiem()}>\n                        {meridiem ? 'am' : 'pm'}\n                    </div>\n                </div>\n                {error}\n            </div>\n        )\n    }\n}\n\nClock.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Clock;","import React from 'react';\nimport './Count.css';\nimport LogsService from '../../../../services/logs-service';\n\nclass Count extends React.Component {\n    state = {\n        num: '',\n        den: '',\n        units: 'units'\n    }\n    componentDidMount() {\n        if (this.props.value) {\n            const { num, den, units } = this.props.value\n            this.setState({ num, den, units})\n        }\n\n    }\n    onChange(type, event) {\n        event.preventDefault()\n        this.setState({ [type]: event.target.value })\n    }\n    componentWillUnmount() {\n        if (this.props.log && JSON.stringify(this.props.value) !== JSON.stringify(this.state)) {\n            LogsService.updateLogValue(this.props.log.blockId, this.props.log.date, this.props.log.log_id, this.state)\n        }\n    }\n    render() {\n        const { num, den, units } = this.state\n        return (\n            <div className='block block-count'>\n                <h2>Count</h2>\n                <div className='block-count-input'>\n                    <input\n                        className='number'\n                        type='number'\n                        placeholder='#'\n                        onChange={(e) => this.onChange('num', e)}\n                        value={num}\n                        />\n                    /\n                    <input\n                        type='number'\n                        placeholder='count'\n                        onChange={(e) => this.onChange('den', e)}\n                        value={den}\n                        />\n                    <input\n                        className='units'\n                        placeholder='units'\n                        onChange={(e) => this.onChange('units', e)}\n                        value={units}\n                        />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Count;","import React from 'react';\nimport propTypes from 'prop-types';\nimport './CountDown.css';\n\nclass CountDown extends React.Component {\n    state = {\n        count: 99\n    }\n    componentDidMount() {\n        const { value } = this.props\n        if (value.count) {\n            this.setState({ count: value.count })\n        }\n    }\n    onChange = event => {\n        this.setState({ count: event.target.value })\n    }\n    render() {\n        const { count } = this.state\n        return (\n            <div className='block block-countdown'>\n                <h2>Countdown</h2>\n                <input\n                    onChange={this.onChange}\n                    type='number'\n                    value={count}\n                    />\n                days\n            </div>\n        )\n    }\n}\n\nCountDown.defaultProps = {\n    value: propTypes.object\n}\n\nexport default CountDown;","import React from 'react';\nimport moment from 'moment';\nimport propTypes from 'prop-types';\nimport './Date.css';\n\nclass Date extends React.Component {\n    state = {\n        date: null,\n        day: 1,\n        month: 1,\n        year: 1,\n    }\n    componentDidMount() {\n        const { value } = this.props\n        const date = value.date || new Date()\n        const day = moment(date).format('DD')\n        const month = moment(date).format('MMMM')\n        const year = moment(date).format('YYYY')\n\n        this.setState({ date, day, month, year })\n    }\n    handleDay = event => {\n        this.setState({ day: event.target.value })\n    }\n    handleMonth = event => {\n        this.setState({ month: event.target.value })\n    }\n    handleYear = event => {\n        this.setState({ year: event.target.value })\n    }\n    render() {\n        const { day, month, year } = this.state\n        return (\n            <div className='block block-date'>\n                <input\n                    onChange={this.handleMonth}\n                    className='block-date-month'\n                    value={month}\n                    />\n                <input\n                    onChange={this.handleMonth}\n                    className='block-date-day'\n                    value={day}\n                    />\n                <input\n                    onChange={this.handleMonth}\n                    className='block-date-year'\n                    value={year}\n                    />\n            </div>\n        )\n    }\n}\n\nDate.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Date;","import React from 'react';\nimport './Notes.css';\n\nclass Notes extends React.Component {\n    state = {\n        content: 'Sticky Note'\n    }\n    componentDidMount() {\n        const { value } = this.props;\n        if (value) {\n            this.setState({ content: value.content })\n        }\n    }\n    updateContent(event) {\n        event.preventDefault()\n        this.setState({ content: event.target.value })\n    }\n    render() {\n        const { content } = this.state\n        const propContent = this.props.value ? this.props.value.text : null\n        return (\n            <div className='block block-notes'>\n                <div\n                    onChange={(e) => this.updateContent(e)}\n                    className='block block-notepad'\n                    contentEditable='true'>\n                    { propContent || content}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Notes","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport propTypes from 'prop-types';\nimport './Text.css';\n\nclass Text extends React.Component {\n    state = {\n        text: 'Text'\n    }\n    handleChange = event => {\n        this.setState({ text: event.target.value })\n    }\n    render() {\n        const text = this.props.value.text ? this.props.value.text : this.state.text\n        return (\n            <div className='block block-text'>\n                <ContentEditable\n                    innerRef={this.ContentEditable}\n                    html={text}\n                    disabled={false}\n                    onChange={this.handleChange}\n                    />\n            </div>\n        )\n    }\n}\n\nText.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Text;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, } from '@fortawesome/free-solid-svg-icons';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Trash.css';\n\nconst sequence = []\n\nconst Item = styled.div`\n    display: flex;\n    user-select: none;\n    padding: 0.5rem;\n    margin: 0 0 0.5rem 0;\n    align-items: flex-start;\n    align-content: flex-start;\n    line-height: 1.5;\n    border-radius: 3px;\n    background: #fff;\n    border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\n`;\n\nconst Notice = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0 0.5rem 0.5rem;\n    border: 1px solid transparent;\n    line-height: 1.5;\n    color: #aaa;\n`;\n\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n\nconst List = styled.div`\n    border: 1px\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\n\nconst Container = styled(List)`\n    margin: 0.5rem 0.5rem 1.5rem;\n`;\n\nclass Trash extends React.Component {\n    state = {\n        sequence: []\n    }\n    componentDidMount() {\n        // fetch sequence and store in state\n        this.setState({ sequence })\n    }\n    render() {\n        const { provided, snapshot, list } = this.props\n        return (\n            <Container\n                className='block-trash'\n                ref={provided.innerRef}\n                isDraggingOver={snapshot.isDraggingOver}>\n                <FontAwesomeIcon icon={faTrashAlt} />\n                {list.length\n                    ? list.map(\n                        (item, index) => (\n                            <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}>\n                                {(provided, snapshot) => (\n                                    <Item\n                                        className='block-container-saved'\n                                        ref={\n                                            provided.innerRef\n                                        }\n                                        {...provided.draggableProps}\n                                        isDragging={\n                                            snapshot.isDragging\n                                        }\n                                        style={\n                                            provided\n                                                .draggableProps\n                                                .style\n                                        }>\n                                        <Handle\n                                            {...provided.dragHandleProps}>\n                                            <svg\n                                                width=\"24\"\n                                                height=\"24\"\n                                                viewBox=\"0 0 24 24\">\n                                                <path\n                                                    fill=\"currentColor\"\n                                                    d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                />\n                                            </svg>\n                                        </Handle>\n                                        {item.content}\n                                    </Item>\n                                )}\n                            </Draggable>\n                        )\n                    )\n                    : !provided.placeholder && (\n                        <Notice>Drop items here</Notice>\n                    )}\n                {provided.placeholder}\n            </Container>\n        )\n    }\n}\n\nTrash.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Trash;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Title.css';\n\nclass Title extends React.Component {\n    state = {\n        title: 'Subtitle'\n    }\n    componentDidMount() {\n        const { value } = this.props\n        if (value && value.title) {\n            this.setState({ title: value.title})\n        }\n    }\n    updateTitle(event) {\n        event.preventDefault()\n        this.setState({ title: event.target.value })\n    }\n    render() {\n        const { title } = this.state \n        return (\n            <div className='block block-title'>\n                <input\n                    onChange={(e) => this.updateTitle(e)}\n                    value={title}\n                    />\n            </div>\n        )\n    }\n}\n\nTitle.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Title;","import React from 'react';\nimport './YesNo.css';\nimport LogsService from '../../../../services/logs-service';\n\nclass YesNo extends React.Component {\n    state = {\n        yes: null,\n    }\n    componentDidMount() {\n        const yes = this.props.value ? this.props.value.yes : false\n        this.setState({ yes })\n    }\n    componentWillUnmount() {\n        if (this.props.log && JSON.stringify(this.props.value) !== JSON.stringify(this.state)) {\n            LogsService.updateLogValue(this.props.log.blockId, this.props.log.date, this.props.log.log_id, this.state)\n        }\n    }\n    toggleButton() {\n        const { yes } = this.state\n        this.setState({ yes: !yes })\n    }\n    render() {\n        const { yes } = this.state\n        return (\n            <div className='yes-no'>\n                <div \n                    onClick={() => this.toggleButton()}\n                    className={'block-bool ' + (yes && 'bool-active')}>\n                    Yes\n                </div>\n                <div \n                    onClick={() => this.toggleButton()}\n                    className={'block-bool ' + (!yes && 'bool-active')}>\n                    No\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default YesNo;","import React from 'react';\nimport Weekly from \"../Weekly/Weekly\";\nimport CheckList from '../CheckList/CheckList';\nimport Clock from '../Clock/Clock';\nimport Count from '../Count/Count';\nimport CountDown from '../CountDown/CountDown';\nimport Date from '../Date/Date';\nimport Notes from '../Notes/Notes';\nimport Text from '../Text/Text';\nimport Trash from '../Trash/Trash';\nimport Title from '../Title/Title';\nimport YesNo from '../YesNo/YesNo';\n// key: block-type, value: block component\n\nfunction BlockMap(type, value, log) {\n    switch(type) {\n        case 'checklist':\n            return <CheckList value={value} log={log} />\n        case 'clock':\n            return <Clock value={value} log={log} />\n        case 'count':\n            return <Count value={value} log={log} />\n        case 'countdown':\n            return <CountDown value={value} log={log} />\n        case 'date':\n            return <Date value={value} log={log} />\n        case 'notes':\n            return <Notes value={value} log={log} />\n        case 'text':\n            return <Text value={value} log={log} />\n        case 'title':\n            return <Title value={value} log={log} />\n        case 'trash':\n                return <Trash value={value} log={log} />\n        case 'weekly':\n            return <Weekly value={value} log={log} />\n        case 'yesno':\n            return <YesNo value={value} log={log} />\n        default:\n            return null\n    }\n}\n\nexport default BlockMap","import React from 'react';\nimport './Tile.css';\nimport { Link } from 'react-router-dom'\nimport BlocksService from '../../services/blocks-service';\nimport BlockMap from '../ToolBox/Blocks/BaseBlock/BlockMap';\nimport moment from 'moment';\n\nfunction Tile(tile, date) {\n    const { type, id, user_id, action_id, title, last_logged, block_sequence } = tile;\n\n    // STORING the blocks with type and value for BLOCKMAP\n    // tileBlocks returns an array of objects that contain goal_id/reminder_id possibly null\n    // the type and value !important\n    // \n    // let tileBlocks\n    // BlocksService.getBlocksByIds(block_sequence)\n    //             .then(blocks => {\n    //                 tileBlocks = blocks\n    //             })\n    //             .catch()\n    let logId\n    let logDate = moment(date).format('MM-DD-YYYY')\n\n    if (type === 'goal') {\n        logId = `g-${id}=${logDate}`\n    } else if (type === 'reminder') {\n        logId = `r-${id}=${logDate}`\n    }\n\n    return `<a href='/logs/${logId}' contentEditable='false' class='text-stamp-container'> <button class='entry-text-stamp'> ${title} </button><div class='stamp-hidden'>Hide me</div> </a>`\n}\n\nexport default Tile;","import React from 'react';\nimport propTypes from 'prop-types';\nimport './BaseBlock.css';\nimport BlockMap from './BlockMap';\n\n// Prototype for different Blocks\n// also where we figure out size (TODO)\nclass BaseBlock extends React.Component {\n    state = {\n        size: null,\n    }\n    componentDidMount() {\n        const { dimension } = this.props\n        this.setState({ size: dimension })\n    }\n    render() {\n        const { block } = this.props\n        const Block = BlockMap(block.type, block.value)\n        return (\n            <div className='Base-Block'>\n                {Block}\n            </div>\n        )\n    }\n}\n\nBaseBlock.defaultProps = {\n    value: propTypes.object\n}\n\nexport default BaseBlock;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './LogView.css';\nimport BaseBlock from '../../components/ToolBox/Blocks/BaseBlock/BaseBlock';\nimport MissingPage from '../MissingPage/MissingPage';\nimport Spinner from '../../components/Spinner/Spinner';\nimport LogsService from '../../services/logs-service';\nimport GoalsService from '../../services/goals-service';\nimport RemindersService from '../../services/reminders-service';\nimport BlocksService from '../../services/blocks-service';\nimport BlockMap from '../../components/ToolBox/Blocks/BaseBlock/BlockMap';\nimport EntryPage from '../EntryPage/EntryPage';\n\nclass LogView extends React.Component {\n    state = {\n        blocks: null,\n        error: null,\n        loading: true,\n        log: null,\n        originalBlocks: null,\n        reminder: null,\n        goal: null,\n        block_sequence: null,\n        redirect: false, \n        values: {},\n    }\n    componentDidMount() {\n        let logdate = this.props.match ? this.props.match.params.logdate : null;\n        \n        if (logdate) {\n            const logId = logdate.split('=')[0]\n        const date = logdate.split('=')[1]\n\n        if (!logId) {\n            this.setState({ error: 'log id is missing'})\n        }\n        if (!date) {\n            this.setState({ error: 'date is missing'})\n        }\n\n        LogsService.getLogByIdDate(logId, date)\n            .then(log => {\n                // if no log, create. else set log.\n                if (!log.length) {\n                    LogsService.createLog(logId, date)\n                        .then(log => {\n                            this.setState({ log:log[0] })\n                        })\n                }\n                this.setState({ log: log[0] })\n\n                // find if reminder or goal and get value\n                const { goal_id, reminder_id } = log[0]\n                if (goal_id) {\n                    GoalsService.getGoalByGoalId(goal_id)\n                        .then(goal => {\n                            this.setState({ goal: goal[0], sequence: goal[0].block_sequence })\n                            BlocksService.getBlocksByIds(goal[0].block_sequence)\n                                .then(blocks => this.setState({ blocks, originalBlocks: blocks }))\n                        })\n                }\n                if (reminder_id) {\n                    RemindersService.getReminderByReminderId(reminder_id)\n                        .then(reminder => {\n                            this.setState({ reminder: reminder[0], sequence: reminder[0].block_sequence })\n                            BlocksService.getBlocksByIds(reminder[0].block_sequence)\n                                .then(blocks => this.setState({ blocks, originalBlocks: blocks }))\n                        })\n                }\n\n                const { value } = log[0]\n                this.setState({ values: value })\n            })\n            .catch(res => this.setState({ error: res.error }))\n        }\n        this.setState({ loading: false })\n    }\n    componentWillUnmount() {\n        \n    }\n    resetDate(){\n        const { log } = this.state\n        log.date = null\n        this.setState({ log })\n    }\n    render() {\n        const { blocks, values, loading, log, error, redirect } = this.state\n        let logs = blocks && blocks.map(block => {\n            let { type, value } = block\n\n            if (value && values && values[block.id]) {\n                value = values[block.id]\n            }\n            return <div key={block.id} className='log-block'>{BlockMap(type, value, {...log, blockId: block.id})}</div>\n        })\n\n        if ( loading ) {\n            return <Spinner />\n        }\n        if ( error ) {\n            return <MissingPage message={error} />\n        }\n        if (redirect) {\n            return <Redirect to='/' />\n            // return <EntryPage resetDate={() => this.resetDate()} date={log.date} />\n        }\n        return (\n            <section className='log-view'>\n                <button onClick={() => this.setState({ redirect: true })}>Take Me Back</button>\n                <div className='logs-list'>\n                    {logs}\n                </div>\n            </section>\n        )\n        // const { blocks } = this.state\n        // const { logs } = this.props\n        // return (\n        //     <div className='log-view'>\n        //         {logs.title}\n        //         {blocks}\n        //     </div>\n        // )\n    }\n}\n\nexport default LogView","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookmark, faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport Date from '../../components/Card/Date/Date';\nimport './EntryPage.css';\nimport ContentEditable from 'react-contenteditable';\nimport moment from 'moment';\nimport EntriesService from '../../services/entries-service';\nimport EntryBar from '../../components/EntryBar/EntryBar';\nimport Tile from '../../components/Tile/Tile';\nimport LogView from '../LogView/LogView';\n\nclass EntryPage extends React.Component {\n    state = {\n        saveButton: true,\n        saved: false,\n        date: new Date(), \n        id: null, \n        originalText: 'Original Text for Comparison',\n        text: 'Text', \n        title: 'Title',\n        loading: true,\n        logs: [],\n        data: null,\n        logView: false,\n        error: null\n    }\n    componentDidMount() {\n        let { date, data } = this.props\n\n        if (date) {\n            EntriesService.getEntryByDate(date)\n                .then(res => {\n                    const {id, text, title, saved} = res\n                    date = moment(date).format('YYYY-MM-DD')\n                    this.setState({ id, text, title, saved, date, originalText: text, originalTitle: title })\n                })\n                .catch(res => this.setState({ error: res.error }))\n        }\n\n        if (data) {\n            date = moment(data.date).format('YYYY-MM-DD')\n            const id = data.id\n            const text = data.text\n            const title = data.title\n            const saved = data.saved\n            this.setState({ date, id, text, title, saved, originalText: text, originalTitle: title })\n        }\n        this.setState({ loading: false })\n    }\n    componentWillUnmount() {\n        const { id, originalText, originalTitle, text, title } = this.state\n        if (originalText !== text) {\n            EntriesService.updateEntryText(id, text)\n                .then(res => res)\n                .catch(res => this.setState({ error: res.error }))\n        }\n        if (originalTitle !== title) {\n            EntriesService.updateEntryTitle(id, title)\n                .then(res => res)\n                .catch(res => this.setState({ error: res.error }))\n        }\n    }\n    handleTitle = event => {\n        this.setState({ title: event.target.value })\n    }\n    handleText = event => {\n        this.setState({ text: event.target.value })\n    }\n    addTile = (tile, date) => {\n        let { text } = this.state\n        text += Tile(tile, date)\n        console.log('tiled')\n        this.setState({ text })\n    }\n    updateLog(newLog) {\n        const { logs } = this.state\n        logs.push(newLog)\n        this.setState({ logs })\n    }\n    activateLog() {\n        this.setState({ activateLog: true })\n    }\n    saveChanges() {\n        const { id, originalText, originalTitle, text, title } = this.state\n        if (originalText !== text) {\n            EntriesService.updateEntryText(id, text)\n                .then(res => this.setState({ originalText: text }))\n                .catch(res => this.setState({ error: res.error }))\n        }\n        if (originalTitle !== title) {\n            EntriesService.updateEntryTitle(id, title)\n                .then(res => this.setState({ originalTitle: title }))\n                .catch(res => this.setState({ error: res.error }))\n        }\n        this.setState({saveButton: false})\n    }\n    render() {\n        const { originalText, originalTitle, loading, error, date, logs, saved, text, title, logView, saveButton } = this.state\n        \n        if (loading) {\n            return (\n                <section className='entry-page'>\n                    Loading \n                </section>\n            )\n        }\n\n        if (logs.length && logView) {\n            return (\n                <LogView logs={logs} />\n            )\n        }\n\n        return (\n            <section className='entry-page'>\n                {error}\n                <div \t                \n                    className={ saved ? 'entry-page-bookmark active-mark' : 'entry-page-bookmark' }>\n                    <FontAwesomeIcon icon={faBookmark} />\t\n                </div>\n                <FontAwesomeIcon \n                        className='entry-back-arrow' \n                        onClick={() => this.props.resetDate()} \n                        icon={faArrowAltCircleLeft} />\n                <div className='entry-body'>\n                    <div className='entry-header'>\n                        <Date date={date} />\n                        <input\n                            className='entry-title'\n                            onChange={this.handleTitle}\n                            value={title} />\n                        {((originalText !== text || originalTitle !== title) && saveButton) && <button onClick={() => this.saveChanges()}>Save Changes</button>}\n                    </div>\n                    <ContentEditable\n                        className='entry-text'\n                        innerRef={this.ContentEditable}\n                        html={text}\n                        disabled={false}\n                        onChange={this.handleText}\n                        />\n                </div>   \n                <EntryBar addTile={(tile) => this.addTile(tile, date)} date={date} /> \n            </section>\n        )\n    }\n}\n\nexport default EntryPage;","import React from 'react';\nimport './HomePage.css';\nimport Spinner from '../../components/Spinner/Spinner';\nimport CardList from '../../components/CardList/CardList';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport EntryPage from '../EntryPage/EntryPage';\nimport EntriesService from '../../services/entries-service';\nimport moment from 'moment';\n\nclass HomePage extends React.Component {\n    state = {\n        page: 0,\n        itemCount: 5,\n        entries: [],\n        error: null,\n        loading: true,\n        keyword: '',\n        date: null,\n        searchActive: false,\n        searchEntries: [],\n    }\n    componentDidMount() {\n        this.addNewEntries()\n            .then(entries => {\n                // check if today's entry exists and creates\n                if (entries && !entries.length || entries && entries.length && moment(entries[0].date).format('MM-DD-YYYY') !== moment(new Date()).format('MM-DD-YYYY')) {\n                    EntriesService.createNewEntry()\n                        .then(entries => this.setState({ entries }))\n                        .catch(res => this.setState({ error: res.message }))\n                } \n            })\n        \n    }\n    addNewEntries() {\n        let { entries, page, itemCount } = this.state\n\n        return EntriesService.getEntriesById()\n            .then(res => {\n                entries = [...entries, ...res]\n                entries = entries.reverse()\n                this.setState({\n                    entries,\n                    loading: false,\n                    page: page + 1\n                })\n                return entries\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    handleScroll(e) {\n        const element = e.target\n        if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n            console.log('reached')\n        }\n    }\n    resetDate() {\n        this.setState({ date: null })\n    }\n    upDate(date) {\n        this.setState({ date })\n    }\n    updateKeyword(keyword) {\n        this.setState({ keyword })\n    }\n    searchJournal() {\n        // here we'll get request /entries/:keyword\n        // saved returned cards in state\n        const { keyword } = this.state\n        if (!keyword) {\n            this.setState({ searchActive: false })\n        } else {\n            EntriesService.getEntriesByKeyword(keyword)\n                .then(searchEntries => {\n                    console.log(searchEntries)\n                    this.setState({\n                        searchEntries,\n                        searchActive: true,\n                    })\n                })\n                .catch(res => this.setState({ error: res.error }))\n            this.setState({ searchActive: true })\n        }\n    }\n    render() {\n        const { error, entries, date, keyword, searchActive, searchEntries, } = this.state\n        if (date) {\n            const data = entries.find(entry => entry.date === date)\n            return (\n                <section className='home-page'>\n                    <EntryPage data={data} resetDate={() => this.resetDate()} />\n                </section>\n            )\n        }\n        if (searchActive) {\n            return (\n                <section className='home-page'>\n                    <SearchBar \n                    updateKeyword={ (keyword) => this.updateKeyword(keyword) }\n                    search={() => this.searchJournal() }\n                    />\n                    Hello Active \n                    <div className='journal-feed'>\n                        <CardList upDate={(date) => this.upDate(date)} cards={searchEntries} highlight={keyword} />\n                    </div>\n                </section>\n            )\n        }\n        return (\n            <section className='home-page'>\n                <SearchBar \n                    updateKeyword={ (keyword) => this.updateKeyword(keyword) }\n                    search={() => this.searchJournal() }\n                    />\n                { error }\n                <div className='journal-feed'\n                    onScroll={(e) => this.handleScroll(e)}\n                    >\n                    <CardList upDate={(date) => this.upDate(date)} cards={entries} />\n                </div>\n                {this.state.loading && <Spinner />}\n            </section>\n        )\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport CardList from '../../components/CardList/CardList';\nimport './SearchPage.css';\n\nclass SearchPage extends React.Component {\n    state = {\n        cards: [],\n        keyword: '',\n    }\n    updateKeyword(keyword) {\n        this.setState({ keyword })\n    }\n    searchJournal() {\n        // here we'll get request /entries/:keyword\n        // saved returned cards in state\n        const { keyword } = this.state\n        console.log(keyword)\n    }\n    render() {\n        const { cards } = this.state\n        return (\n            <section className='search-page'>\n                <SearchBar \n                    updateKeyword={ (keyword) => this.updateKeyword(keyword) }\n                    search={() => this.searchJournal() }\n                    />\n                <CardList cards={cards} />\n            </section>\n        )\n    }\n}\n\nexport default SearchPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './SideBar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCalendar, faCheckSquare, faStar, faBell, faSearch, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass SideBar extends React.Component {\n    state = {\n        currentView: 'home'\n    }\n    setCurrentNav(currentView) {\n        this.setState({ currentView })\n    }\n    render() {\n        const { currentView } = this.state\n        return (\n            <nav className='sidebar'>\n                <Link to='/'\n                    onClick={() => this.setCurrentNav('home')}\n                    className='nav-logo'>\n                    <span className='logo'>\n                    <img src='https://image.flaticon.com/icons/svg/141/141742.svg' alt='logo Icon made by Freepik from www.flaticon.com' />\n                        Goala\n                    </span>\n                </Link>\n                <Link to='/'\n                    onClick={() => this.setCurrentNav('home')}\n                    className={ currentView === 'home' ? 'nav-active' : undefined }>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faHome} /> \n                    </div>\n                    Home\n                </Link>\n                <Link to='/calendar'\n                    onClick={() => this.setCurrentNav('calendar')}\n                    className={ currentView === 'calendar' ? 'nav-active' : undefined }>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faCalendar} /> \n                    </div>\n                    Calendar\n                </Link>\n                <Link to='/actions'\n                    onClick={() => this.setCurrentNav('actions')}\n                    className={ currentView === 'actions' ? 'nav-active' : undefined }>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faCheckSquare} /> \n                    </div>\n                    Actions\n                </Link>\n                <Link to='/reminders'\n                    onClick={() => this.setCurrentNav('reminders')}\n                    className={ currentView === 'reminders' ? 'nav-active' : undefined }>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faBell} /> \n                    </div>\n                    Reminders\n                </Link>\n                <Link to='/login' \n                    className='nav-end'\n                    onClick={() => this.props.logout()}>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faSignOutAlt} rotation={180} />\n                    </div>\n                    Logout\n                </Link>\n            </nav>\n        )\n    }\n}\n\nexport default SideBar","import React from 'react';\nimport './SavedPage.css';\nimport CardList from '../../components/CardList/CardList';\n\nconst exampleCards = [\n    {\n        id: 1,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n    {\n        id: 2,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n    {\n        id: 3,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n    {\n        id: 3,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n    {\n        id: 3,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n    {\n        id: 3,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n    {\n        id: 3,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n    {\n        id: 3,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n    {\n        id: 3,\n        date: new Date(),\n        saved: true,\n        actions: [],\n        reminders: [],\n        text: 'Today was a great day. This will probably be html'\n    },\n]\n\nclass SavedPage extends React.Component {\n    state = {\n        cards: exampleCards\n    }\n    componentDidMount() {\n        // fetch saved entries from api\n    }\n    render() {\n        return (\n            <section className='saved-page'>\n                <h2>Saved</h2>\n                <CardList cards={this.state.cards}/>\n            </section>\n        )\n    }\n}\n\nexport default SavedPage;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport './CalendarHeader.css';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nclass CalendarHeader extends React.Component {\n    render() {\n        return (\n            <div className='calendar-header'>\n                <div className=\"\">\n                    <div className=\"calendar-icon icon-left\" onClick={this.props.prevMonth}>\n                        <FontAwesomeIcon icon={faChevronLeft} />\n                    </div>\n                </div>\n                <div className=\"current-month\">\n                    <span className='current-month'>\n                    {months[this.props.currentMonth]}\n                    </span>\n                </div>\n                <div className=\"\" onClick={this.props.nextMonth}>\n                    <div className=\"calendar-icon icon-right\">\n                        <FontAwesomeIcon icon={faChevronRight} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CalendarHeader;","import React from 'react';\nimport './CalendarCell.css';\nimport PropTypes from 'prop-types';\nimport ContentEditable from 'react-contenteditable';\n\nclass CalendarCell extends React.Component {\n    state = {\n\n    }\n    componentDidMount() {\n\n    }\n    render() {\n        return (\n            <div \n                onClick={() => {\n                    const { data } = this.props\n                    this.props.openData(data)\n                }}\n                className={'calendar-cell ' + this.props.type}\n                to='/'>\n                <div className='cell-date'>\n                    {this.props.number || ''}\n                </div>\n                <div className='cell-text'>\n                    {this.props.data && <ContentEditable\n                    innerRef={this.ContentEditable}\n                    html={this.props.data.text}\n                    disabled={true}\n                    />}\n                </div>\n            </div>\n        )\n    }\n}\n\nCalendarCell.propTypes = {\n    moment: PropTypes.object\n}\n\nexport default CalendarCell","import React from 'react';\nimport moment from 'moment';\nimport './CalendarDays.css';\nimport CalendarCell from '../CalendarCell/CalendarCell';\nimport EntriesService from '../../../services/entries-service';\n\nclass CalendarDays extends React.Component {\n    state = {\n        activeDays: {},\n        days: [],\n        entries: [],\n        refresh: false,\n        offset: 0,\n    }\n    componentDidMount() {\n        const { currentMonth } = this.props\n\n        EntriesService.getEntriesByMonth(currentMonth)\n            .then(entries => {\n                let activeDays = {}\n                entries.forEach((entry, index) => {\n                    const day = moment(entry.date).format('DD')\n                    activeDays[day] = index\n                })\n\n                const days = this.renderCells(currentMonth, activeDays, entries)\n\n                this.setState({ entries, activeDays, days })\n            })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.currentMonth !== prevProps.currentMonth) {\n            EntriesService.getEntriesByMonth(this.props.currentMonth)\n                .then(entries => {\n                    let activeDays = {}\n                    entries.forEach((entry, index) => {\n                        const day = moment(entry.date).format('DD')\n                        activeDays[day] = index\n                    })\n                    const days = this.renderCells(this.props.currentMonth, activeDays, entries)\n                    this.setState({ entries, activeDays, days })\n                })\n        }\n    }\n    addCell(activeDays, entries, array, number) {\n        if (array.length) {\n        let type = array.length % 7 ? '' : 'left-cell'\n        type += this.state.days.length > 34 ? ' calendar-cell-long' : ''\n        let date = number > 9 ? '' + number : '0' + number\n        let index = number && activeDays[date]\n        let cell = ( number && Number.isInteger(index) ) \n            ? <CalendarCell \n                data={entries[index]} \n                openData={(data) => this.props.openData(data)} \n                key={array.length} \n                number={number} \n                type={type} \n                /> \n            : <CalendarCell \n                openData={(data) => this.props.openData(data)} \n                key={array.length} \n                number={number} \n                type={type} />\n        return cell }\n    }\n    renderCells(currentMonth, activeDays, entries) {\n        const monthOffset = moment().month(currentMonth).startOf('month').day()\n        const monthLength = moment().month(currentMonth).daysInMonth()\n        let cells = []\n        // add in irrelevant month blocks\n        for (let i = 0; i < monthOffset; i++) {\n            cells.push(this.addCell(activeDays, entries, cells))\n        }\n        // we'll have a fetch request to query all entries with same month, then sort by date\n        // map each day data with calendarcell component\n        // fetch()\n        //     .then(monthData => monthData.forEach(day => days.push(<CalendarCell key={} date={day.date})))\n        for (let i = 1; i <= monthLength; i++) {\n            cells.push(this.addCell(activeDays, entries, cells, i))\n        }\n\n        if (cells.length % 7 !== 0) {\n            const length = cells.length\n            for (let i = 0; i < 7 - length % 7; i++) {\n                cells.push(this.addCell(activeDays, entries, cells))\n            }\n        }\n\n        return cells\n    }\n    render() {\n        let { days } = this.state\n        // if (days.length > 34) {\n        //     days = days.map(day => {\n        //         let type = day.length % 7 ? '' : 'left-cell'\n        //         let date = day.length > 9 ? '' + day.length : '0' + number\n        //         let index = day.length && activeDays[date]\n        //         let cell = day.length && Number.isInteger(index)\n        //             ? <CalendarCell \n        //                 data={entries[index]} \n        //                 openData={(data) => this.props.openData(data)} \n        //                 key={array.length} \n        //                 number={number} \n        //                 type={type} \n        //                 /> \n        //             : <CalendarCell \n        //                 openData={(data) => this.props.openData(data)} \n        //                 key={array.length} \n        //                 number={number} \n        //                 type={type} />\n        //         return cell\n        //     })\n        // }\n\n        return (\n            <div className='calendar-days'>\n                {days}\n            </div>\n        )\n    }\n}\n\nexport default CalendarDays;","import React from 'react';\nimport './CalendarView.css';\nimport EntryPage from '../../../routes/EntryPage/EntryPage';\n\nclass CalendarView extends React.Component {\n    render() {\n        return (\n            <div className='calendar-view'>\n                <EntryPage data={this.props.data} date={this.props.date} resetDate={() => this.props.resetData()} />\n            </div>\n        )\n    }\n}\n\nexport default CalendarView","import React from 'react';\nimport './Calendar.css';\nimport CalendarHeader from './CalendarHeader/CalendarHeader';\nimport CalendarDays from './CalendarDays/CalendarDays';\nimport CalendarView from './CalendarView/CalendarView';\n\nclass Calendar extends React.Component {\n    state = {\n        currentMonth: new Date().getMonth(),\n        selectedDate: new Date(),\n        data: null,\n        date: null,\n        entries: [],\n    }\n    nextMonth() {\n        const { currentMonth } = this.state\n        const newMonth = currentMonth >= 11 ? 0 : currentMonth + 1\n        this.setState({\n            currentMonth: newMonth,\n        })\n    }\n    prevMonth() {\n        const { currentMonth } = this.state\n        const newMonth = currentMonth <= 0 ? 11 : currentMonth - 1\n        this.setState({\n            currentMonth: newMonth,\n        })\n    }\n    resetData() {\n        console.log('reset')\n        this.setState({ data: null })\n    }\n    openData(data) {\n        this.setState({ data })\n    }\n    render() {\n        const { data, date, currentMonth } = this.state\n        if (data) {\n            return (\n                <CalendarView \n                    resetData={() => this.resetData()}\n                    data={data}\n                    date={date} />\n            )\n        } else {\n            return (\n                <div className='calendar'>\n                    <CalendarHeader \n                        currentMonth={currentMonth}\n                        nextMonth={() => this.nextMonth()}\n                        prevMonth={() => this.prevMonth()}\n                        />\n                    <div className='calendar-weekdays'>\n                        <div className='weekday'>\n                            Sunday\n                        </div>\n                        <div className='weekday'>\n                            Monday\n                        </div>\n                        <div className='weekday'>\n                            Tuesday\n                        </div>\n                        <div className='weekday'>\n                            Wednesday\n                        </div>\n                        <div className='weekday'>\n                            Thursday\n                        </div>\n                        <div className='weekday'>\n                            Friday\n                        </div>\n                        <div className='weekday'>\n                            Saturday\n                        </div>\n                    </div>\n                    <CalendarDays\n                        openData={(date) => this.openData(date)}\n                        currentMonth={currentMonth}\n                        />\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default Calendar;","import React from 'react';\nimport './CalendarPage.css';\nimport Calendar from '../../components/Calendar/Calendar';\n\nclass CalendarPage extends React.Component {\n    render() {\n        return (\n            <section className='calendar-page'>\n                <Calendar />\n            </section>\n        )\n    }\n}\n\nexport default CalendarPage;","import React from 'react';\n// import ReminderDate from './ReminderDate/ReminderDate';\n// import ReminderTime from './ReminderTime/ReminderTime';\nimport './Reminder.css';\n\nclass Reminder extends React.Component {\n    state={\n        modal: false,\n        reminder: { title: '', id: null },\n    }\n    componentDidMount() {\n        const { reminder } = this.props\n        if (reminder) {\n            this.setState({ reminder })\n        }\n    }\n    handleClick() {\n        const { modal } = this.state\n        this.setState({ modal: !modal })\n    }\n    render() {\n        const { reminder } = this.state\n        return (\n            <div \n                onClick={() => {\n                    this.props.activateReminder(reminder.id)\n                    this.props.toggleForm()\n                }}\n                className='reminder'\n                >\n                <div className='reminder-title'>\n                    { reminder.title }\n                </div>\n                <div className='reminder-details'>\n                    { 'reminder id: ' + reminder.id }\n                    { 'reminder '}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Reminder;","import React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n    // border: 1px solid lightgrey;\n    border-radius: 3px;\n    padding: 8px;\n    margin-bottom: 8px;\n    background-color: ${props => (props.isDragging ? 'black': '#00FFFF')};\n    color: ${props => (props.isDragging ? 'white': 'black')};\n    display: flex;\n    transition: .3s ease;\n`\n\nconst Handle = styled.div `\n    width: 20px;\n    height: 20px;\n    background-color: orange;\n    border-radius: 4px;\n    margin-right: 8px;\n`;\n\nclass Task extends React.Component {\n    render() {\n        return (\n            <Draggable draggableId={this.props.task.id} index={this.props.index}>\n                {(provided, snapshot) => (\n                    <Container\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}\n                    >\n                        <Handle {...provided.dragHandleProps} />\n                        {this.props.task.content}\n                    </Container>\n                )}\n            </Draggable>\n            \n        );\n    }\n}\n\nexport default Task;","import React from 'react';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    width: 220px;\n\n    display: flex;\n    flex-direction: column;\n`;\n// const Title = styled.h3`\n//     padding: 8px;\n// `;\nconst TaskList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => (props.isDraggingOver ? 'tan': 'white')}\n    flex-grow: 1;\n    min-height: 100px;\n`;\n\nclass Column extends React.Component {\n    render() {\n        return (\n            <Container className={this.props.column.title}>\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <TaskList\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                        >\n                            {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\n                            {provided.placeholder}\n                        </TaskList>\n                    )}\n                </Droppable>\n\n            </Container>\n        )\n    }\n}\n\nexport default Column;","import React from 'react';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nconst Container = styled.div`\n    margin: 8px;\n    border: 1px solid lightgrey;\n    border-radius: 2px;\n    width: 220px;\n\n    display: flex;\n    flex-direction: column;\n`;\nconst TaskList = styled.div`\n    padding: 8px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => (props.isDraggingOver ? 'tan': 'white')}\n    flex-grow: 1;\n    min-height: 100px;\n`;\n\nclass TrashColumn extends React.Component {\n    render() {\n        return (\n            <Container className={'trash-column ' + this.props.column.title}>\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <TaskList\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                        >\n                            {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\n                            {provided.placeholder}\n                        </TaskList>\n                    )}\n                </Droppable>\n\n            </Container>\n        )\n    }\n}\n\nexport default TrashColumn;","import React from 'react';\nimport Column from './Column';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './ReminderTools.css'\nimport styled from 'styled-components';\nimport YesNo from '../Blocks/YesNo/YesNo';\nimport Count from '../Blocks/Count/Count';\nimport Notes from '../Blocks/Notes/Notes';\nimport Text from '../Blocks/Text/Text';\nimport CheckList from '../Blocks/CheckList/CheckList';\nimport Trash from '../Blocks/Trash/Trash';\nimport Weekly from '../Blocks/Weekly/Weekly';\nimport Clock from '../Blocks/Clock/Clock';\nimport CountDown from '../Blocks/CountDown/CountDown';\nimport Date from '../Blocks/Date/Date';\nimport TrashColumn from './TrashColumn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faToolbox } from '@fortawesome/free-solid-svg-icons';\nimport Title from '../Blocks/Title/Title';\n\n// tasks.content is where I could store individual component blocks\nconst initialData = {\n    tasks: { \n        'task-1': { id: 'task-1', content: <Title />},\n        'task-2': { id: 'task-2', content: <Clock /> },\n        'task-3': { id: 'task-3', content: <YesNo />},\n        'task-4': { id: 'task-4', content: <Count value={({ num: '', den: '', units: ''})} /> },\n        'task-5': { id: 'task-5', content: <Notes /> },\n        'task-6': { id: 'task-6', content: <Text /> },\n        'task-7': { id: 'task-7', content: <CheckList /> },\n        'task-8': { id: 'task-8', content: <Weekly /> },\n        'task-9': { id: 'task-9', content: <CountDown /> },\n        'task-10': { id: 'task-10', content: <Date value={({ date: new Date() })}/> },\n        'task-12': { id: 'task-12', content: <Trash /> },\n    },\n    columns: {\n        'column-reminder': {\n            id: 'column-reminder',\n            title: 'Reminder',\n            taskIds: ['task-1']\n        },\n        'column-toolbox': {\n            id: 'column-toolbox',\n            title: 'Toolbox',\n            // taskIds: ['task-1', 'task-2', 'task-3', 'task-4']\n            taskIds: ['task-2', 'task-3', 'task-4','task-5', 'task-6', 'task-7', 'task-8', 'task-9', 'task-10']\n        },\n        'column-trash': {\n            id: 'column-trash',\n            title: 'Trash',\n            // taskIds: ['task-1', 'task-2', 'task-3', 'task-4']\n            taskIds: []\n        }\n    },\n    columnOrder: ['column-reminder', 'column-toolbox', 'column-trash'],\n    toolboxSequence: ['task-2', 'task-3', 'task-4','task-5', 'task-6', 'task-7', 'task-8', 'task-9', 'task-10']\n}\n\nconst Container = styled.div `\n    display: flex;\n\n`\n\nclass ReminderTools extends React.Component {\n    state = initialData;\n\n    onDragStart = () => {\n        document.body.style.color = 'orange';\n    }\n\n    onDragpUpdate = update => {\n        const { destination } = update;\n        const opacity = destination\n            ? destination.index / Object.keys(this.state.tasks).length\n            : 0;\n        document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n    }\n\n    onDragEnd = result => {\n        document.body.style.color = 'inherit';\n        document.body.style.backgroundColor = 'inherit'\n\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return\n        }\n\n        const start = this.state.columns[source.droppableId];\n        const finish = this.state.columns[destination.droppableId];\n\n        if (start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId)\n\n            const newColumn = {\n                ...this.state,\n                taskIds: newTaskIds,\n            }\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn,\n                },\n            };\n            this.setState(newState)\n            return\n        }\n        \n        // Moving from one list to another\n        const startTaskIds = Array.from(start.taskIds);\n        startTaskIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            taskIds: startTaskIds,\n        };\n\n        const finishTaskIds = Array.from(finish.taskIds);\n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            taskIds: finishTaskIds,\n        };\n        \n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            },\n        };\n        this.setState(newState)\n    };\n    render() {\n        const columns = this.state.columnOrder.map(columnId => {\n            const column = this.state.columns[columnId]\n            console.log(column.id)\n            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId])\n            if (column.id === 'column-trash') {\n                return <TrashColumn column={column} tasks={([])} type={column.id} />\n            }\n            if (column.id === 'column-toolbox') {\n                const tasks = this.state.toolboxSequence.map(task => this.state.tasks[task])\n                return <Column key={column.id} column={column} tasks={tasks} type={column.id} />    \n            }\n            return <Column key={column.id} column={column} tasks={tasks} type={column.id} />\n        })\n        return (\n            <div className='reminder-tools'>\n                <DragDropContext\n                    onDragStart={this.onDragStart}\n                    onDragEnd={this.onDragEnd}\n                >\n                    <Container>\n                        <div className='reminder-main'>\n                            {columns[0]}\n                            {columns[2]}\n                        </div>\n                        <div className='reminder-side'>\n                            <FontAwesomeIcon icon={faToolbox} />\n                            {columns[1]}\n                        </div>\n                    </Container>\n                </DragDropContext>\n            </div>\n        )\n    }\n}\n\nexport default ReminderTools;","import React from 'react';\nimport './ReminderForm.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport ReminderTools from '../ToolBox/ReminderTools/ReminderTools';\nimport RemindersService from '../../services/reminders-service';\n\nclass ReminderForm extends React.Component {\n    state = {\n        title: '',\n        error: null,\n        deleteReminderId: null,\n        reminderTitle: null,\n        \n    }\n    componentDidMount() {\n        const title= this.props || ''\n        const deleteReminderId = this.props.reminders[0] ? this.props.reminders[0].id : null\n        this.setState({ title, deleteReminderId })\n        \n    }\n    handleClick(event) {\n        event.preventDefault()\n        this.props.toggleForm()\n    }\n    createReminder = event => {\n        event.preventDefault()\n        const { reminderTitle } = this.state\n        RemindersService.createReminder(reminderTitle)\n            .then(res => this.setState({ reminders: res }))\n            .catch(res => this.setState({ error: res.error }))\n    }\n    deleteReminder = event => {\n        event.preventDefault()\n        const { deleteReminderId } = this.state\n        if (deleteReminderId) {\n            RemindersService.deleteReminder(deleteReminderId)\n                .then(res => this.setState({ reminders: res }))\n                .catch(res => this.setState({ error: res.error }))\n        }\n    }\n    updateDeleteReminder = (event) => {\n        this.setState({ deleteReminderId: event.target.value })\n    }\n    updateReminderTitle = event => {\n        this.setState({ reminderTitle: event.target.value })\n    }\n    render() {\n        const { title, error, } = this.state\n        const { reminders } = this.props\n        const options = reminders ? reminders.map(reminder => {\n            return <option key={reminder.id} \n            value={reminder.id}>\n            {reminder.title}</option>\n        }) : ''\n        return (\n            <div className='reminder-form'>\n                <FontAwesomeIcon \n                    className='entry-back-arrow' \n                    onClick={() => this.props.returnPage()} \n                    icon={faArrowAltCircleLeft} />\n                <div className='reminder-settings'>\n                    <div className='new-reminder'>\n                        {error}\n                        <form\n                            onSubmit={this.createReminder}\n                            >\n                            <legend><h2>Add New Reminder</h2></legend>\n                            <label>Title</label>\n                            <input\n                                value={title} \n                                onChange={this.updateReminderTitle}\n                                />\n                            <button>Add Reminder</button>\n                        </form>\n                    </div>\n                    <div className='delete-reminder'>\n                        <form\n                            onSubmit={this.deleteReminder}\n                            >\n                            <legend><h2>Delete Reminder</h2></legend>\n                            <select\n                                onChange={this.updateDeleteReminder}\n                                >\n                                {options}\n                            </select>\n                            <button>Delete</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ReminderForm;","import React from 'react';\nimport styled from 'styled-components';\nimport BaseBlock from '../../components/ToolBox/Blocks/BaseBlock/BaseBlock';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst sequence = []\n\nconst Item = styled.div`\n    display: flex;\n    user-select: none;\n    padding: 0.5rem;\n    margin: 0 0 0.5rem 0;\n    align-items: flex-start;\n    align-content: flex-start;\n    line-height: 1.5;\n    border-radius: 3px;\n    background: #fff;\n    border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\n`;\n\nconst Notice = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0 0.5rem 0.5rem;\n    border: 1px solid transparent;\n    line-height: 1.5;\n    color: #aaa;\n`;\n\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n\nconst List = styled.div`\n    border: 1px\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\n\nconst Container = styled(List)`\n    margin: 0.5rem 0.5rem 1.5rem;\n`;\n\nclass Sequence extends React.Component {\n    state = {\n        sequence: []\n    }\n    componentDidMount() {\n        // fetch sequence and store in state\n        this.setState({ sequence })\n    }\n    render() {\n        const { provided, snapshot, list } = this.props\n        return (\n            <Container\n                className='block-saved-list'\n                ref={provided.innerRef}\n                isDraggingOver={snapshot.isDraggingOver}>\n                {list && list.length\n                    ? list.map(\n                        (item, index) => (\n                            <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}>\n                                {(provided, snapshot) => (\n                                    <Item\n                                        className='block-container-saved'\n                                        ref={\n                                            provided.innerRef\n                                        }\n                                        {...provided.draggableProps}\n                                        isDragging={\n                                            snapshot.isDragging\n                                        }\n                                        style={\n                                            provided\n                                                .draggableProps\n                                                .style\n                                        }>\n                                        <Handle\n                                            {...provided.dragHandleProps}>\n                                            <svg\n                                                width=\"24\"\n                                                height=\"24\"\n                                                viewBox=\"0 0 24 24\">\n                                                <path\n                                                    fill=\"currentColor\"\n                                                    d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                />\n                                            </svg>\n                                        </Handle>\n                                        <BaseBlock block={item} />\n                                    </Item>\n                                )}\n                            </Draggable>\n                        )\n                    )\n                    : !provided.placeholder && (\n                        <Notice>Drop items here</Notice>\n                    )}\n                {provided.placeholder}\n            </Container>\n        )\n    }\n}\n\nexport default Sequence;","import React, { Component } from 'react';\nimport uuid from 'uuid/v4';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './BlocksPage.css';\nimport BlocksService from '../../services/blocks-service';\nimport Title from '../../components/ToolBox/Blocks/Title/Title';\nimport Count from '../../components/ToolBox/Blocks/Count/Count';\nimport Notes from '../../components/ToolBox/Blocks/Notes/Notes';\nimport CheckList from '../../components/ToolBox/Blocks/CheckList/CheckList';\nimport Text from '../../components/ToolBox/Blocks/Text/Text';\nimport Weekly from '../../components/ToolBox/Blocks/Weekly/Weekly';\nimport CountDown from '../../components/ToolBox/Blocks/CountDown/CountDown';\nimport Date from '../../components/ToolBox/Blocks/Date/Date';\nimport BaseBlock from '../../components/ToolBox/Blocks/BaseBlock/BaseBlock';\nimport Sequence from './Sequence';\nimport Trash from '../../components/ToolBox/Blocks/Trash/Trash';\n\nconst Content = styled.div`\n    width: calc(100% - 250px);\n`;\n\nconst List = styled.div`\n    border: 1px\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\n\nconst Kiosk = styled(List)`\n    box-sizing: border-box;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 250px;\n`;\n\nconst Item = styled.div`\n    display: flex;\n    user-select: none;\n    padding: 0.5rem;\n    margin: 0 0 0.5rem 0;\n    align-items: flex-start;\n    align-content: flex-start;\n    line-height: 1.5;\n    border-radius: 3px;\n    background: #fff;\n    border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\n`;\n\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n\nconst Container = styled(List)`\n    margin: 0.5rem 0.5rem 1.5rem;\n`;\n\nconst Notice = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0 0.5rem 0.5rem;\n    border: 1px solid transparent;\n    line-height: 1.5;\n    color: #aaa;\n`;\n\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    margin: 0.5rem;\n    padding: 0.5rem;\n    color: #000;\n    border: 1px solid #ddd;\n    background: #fff;\n    border-radius: 3px;\n    font-size: 1rem;\n    cursor: pointer;\n`;\n\nconst ButtonText = styled.div`\n    margin: 0 1rem;\n`;\n\n// // ITEMS holds all the sidebar template blocks on the right\nconst SIDEBAR_ITEMS = [\n    {\n        id: uuid(),\n        type: 'title'\n    },\n    {\n        id: uuid(),\n        type: 'count',\n    },\n    {\n        id: uuid(),\n        type: 'notes',\n    },\n    {\n        id: uuid(),\n        type: 'text',\n    },\n    {\n        id: uuid(),\n        type: 'checklist'\n    },\n    {\n        id: uuid(),\n        type: 'weekly',\n    },\n    {\n        id: uuid(),\n        type: 'countdown',\n    },\n    {\n        id: uuid(),\n        type: 'date',\n    },\n];\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    console.log(list, startIndex, endIndex)\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    if (endIndex < 0) {\n        return result\n    }\n    result.splice(endIndex, 0, removed);\n    \n    return result;\n};\n/**\n * Moves an item from one list to another list.\n */\nconst copy = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const item = sourceClone[droppableSource.index];\n\n    destClone.splice(droppableDestination.index, 0, { ...item, id: uuid() });\n    return destClone;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nclass BlocksPage extends Component {\n    state = {\n        columns: {\n            blocks: [],\n            trash: [],\n        },\n        originalSequence: [],\n        error: null,\n        type: null,\n        id: null,\n        goal: null,\n        reminder: null,\n    };\n    componentDidMount() {\n        // Determines if block form is goal or reminder\n        // then it fetches <Block /> components based on blockId\n        const columns = {}\n        const { goal, reminder } = this.props\n        \n        if (goal) {\n            const blockSeq = goal.block_sequence ? goal.block_sequence : []\n            console.log('BLOCK SEQUENCE ', blockSeq)\n            BlocksService.getBlocksByIds(blockSeq)\n                .then(blocks => {\n                    \n                    columns.blocks = blocks\n                    this.setState({ \n                        columns, \n                        id: goal.id,\n                        originalSequence: blocks, \n                        type: 'goal' \n                    })\n                })\n                .catch(err => this.setState({ error: err.error }))\n        }\n\n        if (reminder) {\n            const blockSeq = reminder.block_sequence ? reminder.block_sequence : []\n            BlocksService.getBlocksByIds(blockSeq)\n                .then(blocks => {\n                    columns.blocks = blocks\n                    this.setState({ \n                        columns, \n                        id: reminder.id,\n                        originalSequence: blocks, \n                        type: 'reminder' \n                    })\n                })\n                .catch(err => this.setState({ error: err.error }))\n        }\n        this.setState({ type: 'goal'})\n    }\n    componentWillUnmount() {\n        const { columns, id, originalSequence, type } = this.state\n        if (JSON.stringify(originalSequence) !== JSON.stringify(columns.blocks)) {\n            console.log(JSON.stringify(originalSequence))\n            console.log(JSON.stringify(columns.blocks))\n            let Sequence = []\n            columns.blocks.forEach((block, index) => {\n                if (!Number.isInteger(block.id)) {\n                    // make new block and push id to sequence array\n\n                } else {\n                    Sequence.push(block.id)\n                }\n            })\n            BlocksService.updateBlockSequence(Sequence, type, id)\n                .then(updatedBlocks => {\n                    \n                    if (type === 'goal') {\n                        this.setState({ goal: updatedBlocks })\n                    } else if (type === 'reminder') {\n                        this.setState({ reminder: updatedBlocks })\n                    }\n                })\n        }\n    }\n    onDragEnd = result => {\n        const { source, destination } = result;\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n        switch (source.droppableId) {\n            // this is for reordering within an array\n            // if source matches destination\n            case destination.droppableId:\n                this.setState({\n                    columns: {\n                        blocks: reorder(\n                        this.state.columns.blocks,\n                        source.index,\n                        destination.index\n                    )}\n                });\n                break;\n            // in case the Tile comes from sidebar \n            // if destination is trash, we ignore\n            // if destination is main block, we update blocks with copy\n            case 'ITEMS':\n                if (destination.droppableId !== 69) {\n                    this.setState({\n                        columns: {\n                            blocks: copy(\n                            SIDEBAR_ITEMS,\n                            this.state.columns.blocks,\n                            source,\n                            destination\n                        )}\n                    });\n                }\n                break;\n            case 'active-blocks':\n                console.log('main blocks dont cry')\n                if (destination.droppableId === 69) {\n                    const blocks = this.state.columns.blocks.filter( (block, index) => index !== source.index )\n                    this.setState({ columns: { blocks } })\n                }\n                break;\n            default:\n                this.setState(\n                    move(\n                        this.state.columns[source.droppableId],\n                        this.state.columns[destination.droppableId],\n                        source,\n                        destination\n                    )\n                );\n                break;\n        }\n    };\n\n    addList = e => {\n        this.setState({ [uuid()]: [] });\n    };\n\n    // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    render() {\n        const activeBlocks = (\n            <Droppable key={96} droppableId='active-blocks'>\n                {(provided, snapshot) => <Sequence provided={provided} snapshot={snapshot} list={this.state.columns.blocks} />}\n            </Droppable>\n        )\n        const trashBar = (\n            <Droppable key={69} droppableId={69}>\n                {(provided, snapshot) => <Trash provided={provided} snapshot={snapshot} list={[]} />}\n            </Droppable>\n        )\n        const { goal, reminder } = this.state\n        \n        let title = 'Title'\n\n        if (this.props.goal) {\n            title = this.props.goal.title\n        } else if (this.props.reminder) {\n            title = this.props.reminder.title\n        }\n        \n        return (\n            <section className='blocks-page'>\n                {this.state.error}\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <Droppable droppableId=\"ITEMS\" isDropDisabled={true}>\n                        {(provided, snapshot) => (\n                            <Kiosk\n                                className='toolbox-list'\n                                ref={provided.innerRef}\n                                isDraggingOver={snapshot.isDraggingOver}>\n                                {SIDEBAR_ITEMS.map((item, index) => (\n                                    <Draggable\n                                        key={item.id}\n                                        draggableId={item.id}\n                                        index={index}>\n                                        {(provided, snapshot) => (\n                                            <Item\n                                                className='block-container-saved'\n                                                ref={\n                                                    provided.innerRef\n                                                }\n                                                {...provided.draggableProps}\n                                                isDragging={\n                                                    snapshot.isDragging\n                                                }\n                                                style={\n                                                    provided\n                                                        .draggableProps\n                                                        .style\n                                                }>\n                                                <Handle\n                                                    {...provided.dragHandleProps}>\n                                                    <svg\n                                                        width=\"24\"\n                                                        height=\"24\"\n                                                        viewBox=\"0 0 24 24\">\n                                                        <path\n                                                            fill=\"currentColor\"\n                                                            d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                        />\n                                                    </svg>\n                                                </Handle>\n                                                <BaseBlock block={({ type: item.type, value: {value: null} })} />\n                                            </Item>\n                                        )}\n                                    </Draggable>\n                                ))}\n                            </Kiosk>\n                        )}\n                    </Droppable>\n                    <Content className='blocks-main'>\n                        <div className='blocks-page-header'>\n                            <Button onClick={() => this.props.toggleForm()} >\n                                <FontAwesomeIcon \n                                    className='reminder-toggle' \n                                    icon={faArrowAltCircleLeft} />\n                                <ButtonText>Return</ButtonText>\n                            </Button>\n                            <Title value={({ title })} />\n                        </div>\n                        <div className='blocks-saved'>\n                            {activeBlocks}\n                            {trashBar}\n                        </div>\n                        \n                    </Content>\n                </DragDropContext>\n            </section>\n            \n        );\n    }\n}\n\nexport default BlocksPage","import React from 'react';\nimport Reminder from '../../components/Reminder/Reminder';\nimport ReminderForm from '../../components/ReminderForm/ReminderForm';\nimport RemindersService from '../../services/reminders-service';\nimport './ReminderPage.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools } from '@fortawesome/free-solid-svg-icons';\nimport BlocksPage from '../BlocksPage/BlocksPage';\n\nclass RemindersPage extends React.Component {\n    state = {\n        activeReminder: null,\n        unscheduledReminders: [],\n        upcomingReminders: [],\n        recurringReminders: [],\n        formActive: false,\n        settingsActive: false,\n    }\n    componentDidMount() {\n        RemindersService.getReminders() \n            .then(reminders => {\n                let recurringReminders = reminders.filter(reminder => reminder.schedule && reminder.schedule.schedule)\n                let upcomingReminders = reminders.filter(reminder => reminder.schedule && reminder.schedule.date)\n                let unscheduledReminders = reminders.filter(reminder => !!!reminder.schedule)\n                this.setState({ reminders, recurringReminders, unscheduledReminders, upcomingReminders })\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    toggleForm() {\n        const { formActive } = this.state\n        this.setState({\n            formActive: !formActive\n        })\n    }\n    toggleSettings() {\n        const { settingsActive } = this.state\n        this.setState({\n            settingsActive: !settingsActive\n        })\n    }\n    activateForm(reminderId) {\n        const { upcomingReminders, recurringReminders, unscheduledReminders } = this.state\n        const activeReminder = [...upcomingReminders, ...unscheduledReminders, ...recurringReminders]\n            .find(reminder => reminder.id === reminderId)\n        this.setState({ activeReminder })\n    }\n    render() {\n        const { reminders } = this.props\n        const { formActive, activeReminder, recurringReminders, settingsActive,  unscheduledReminders, upcomingReminders} = this.state\n        if (formActive) {\n            return (\n                <section className='reminders-page'>\n                    <BlocksPage \n                        reminder={activeReminder}\n                        blockSequence={activeReminder.block_sequence}  \n                        toggleForm={() => this.toggleForm()} />\n                </section>\n            )\n        }\n        \n        if (settingsActive) {\n            return (\n                <section className='reminders-page'>\n                    <ReminderForm reminders={[...recurringReminders, ...upcomingReminders, ...unscheduledReminders]} returnPage={() => this.setState({ formActive: false })} />\n                </section>\n            )\n        }\n\n        let recurringReminderComponents = recurringReminders.map((reminder) => {\n            return <Reminder \n                        title={reminder.title}\n                        activateReminder={(id) => this.activateForm(id)}\n                        reminder={reminder} \n                        key={reminder.id} \n                        schedule={reminder.schedule}\n                        toggleForm={() => this.toggleForm()} />\n        })\n        let upcomingReminderComponents = upcomingReminders.map((reminder) => {\n            return <Reminder \n                        title={reminder.title}\n                        activateReminder={(id) => this.activateForm(id)}\n                        reminder={reminder} \n                        key={reminder.id} \n                        schedule={reminder.schedule}\n                        toggleForm={() => this.toggleForm()} />\n        })\n        let unscheduledReminderComponents = unscheduledReminders.map((reminder) => {\n            return <Reminder \n                        title={reminder.title}\n                        activateReminder={(id) => this.activateForm(id)}\n                        reminder={reminder} \n                        key={reminder.id} \n                        schedule={reminder.schedule}\n                        toggleForm={() => this.toggleForm()} /> \n        })\n        \n        return (\n            <section className='reminders-page'>\n                <div className='reminder-header'>\n                    <h2>Upcoming</h2>\n                </div>\n                {upcomingReminderComponents}\n                <div className='reminder-header'>\n                    <h2>Recurring</h2>\n                </div>\n                {recurringReminderComponents}\n                <div className='reminder-header'>\n                    <h2>Unscheduled</h2>\n                </div>\n                {unscheduledReminderComponents}\n                <button\n                    className='add-reminder'\n                    onClick={() => this.toggleSettings()}\n                    >\n                    <FontAwesomeIcon icon={faTools} />\n                </button>\n            </section>\n        )\n    }\n}\n\nexport default RemindersPage;","import config from '../config'\nimport TokenService from './token-service';\n\nconst ActionsService = {\n    deleteAction(actionId) {\n        return fetch(`${config.API_ENDPOINT}/actions/${actionId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n    getActions() {\n        return fetch(`${config.API_ENDPOINT}/actions`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    createAction(title) {\n        return fetch(`${config.API_ENDPOINT}/actions`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({title})\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    postGoal(goal) {\n        return fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(goal)\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalById(id) {\n        return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    deleteGoal(goalId) {\n        return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    }\n}\n\nexport default ActionsService","import React from 'react';\nimport './Goal.css';\nimport moment from 'moment';\n\nclass Goal extends React.Component {\n    state={\n        modal: false,\n        goal: {},\n    }\n    componentDidMount() {\n        const { goal } = this.props\n        if (goal) {\n            this.setState({ goal })\n        }\n    }\n    handleClick() {\n        const { modal } = this.state\n        this.setState({ modal: !modal })\n    }\n    render() {\n        const { goal } = this.state\n        return (\n            <div \n                onClick={() => {\n                    this.props.activateForm(goal.id)\n                    this.props.toggleForm()\n                }}\n                className='goal'\n                >\n                <div className='goal-title'>\n                    { goal.title }\n                </div>\n                <div className='goal-details'>\n                    {/* { 'goal id: ' + goal.id }\n                    { 'action id: ' + goal.action_id } */}\n                    { `Last Logged: ${moment(goal.last_logged).format('MM-DD-YY')}`}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Goal;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport './GoalForm.css';\nimport ActionsService from '../../services/actions-service';\nimport GoalsService from '../../services/goals-service';\n\nclass GoalForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            actionTitle: '',\n            deleteActionTitle: '',\n            goalTitle: '',\n            deleteGoalTitle: '',\n            actionId: null,\n            error: null,\n            success: false,\n        }\n    }\n    componentDidMount() {\n        let actionTitle = this.props.actions[0] ? this.props.actions[0].title : ''\n        this.setState({ actionTitle })\n    }\n    createAction(event) {\n        const { actionTitle } = this.state\n        event.preventDefault()\n        ActionsService.createAction(actionTitle)\n            .then(res => {\n                this.setState({ reload: true })\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    createGoal(event) {\n        event.preventDefault()\n        const { goalTitle, actionId } = this.state\n        if (!actionId) {\n            return this.setState({ error: 'Must specify action type'})\n        }\n        GoalsService.createGoal(goalTitle, actionId)\n            .then(res => {\n                this.setState({ reload: true })\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    updateActionTitle = event => {\n        this.setState({ actionTitle: event.target.value })\n    }\n    updateDeleteAction = event => {\n        this.setState({ deleteActionTitle: event.target.value })\n    }\n    updateGoalTitle = event => {\n        this.setState({ goalTitle: event.target.value })\n    }\n    updateDeleteGoal = event => {\n        this.setState({ deleteGoalTitle: event.target.value })\n    }\n    deleteAction = event => {\n        const { deleteActionTitle } = this.state\n        ActionsService.deleteAction(deleteActionTitle)\n            .then(res => this.setState({ actions: res.actions }))\n            .catch(res => this.setState({ error: res.error }))\n    }\n    deleteGoal = event => {\n        const { deleteGoalTitle } = this.state\n        GoalsService.deleteGoal(deleteGoalTitle)\n            .then(res => this.setState({ goals: res.goals }))\n            .catch(res => this.setState({ error: res.error }))\n    }\n    render() {\n        const { error } = this.state\n        const { actions, goals } = this.props\n        const options = [ {title: '--Choose an action', value: null }, ...actions].map((action, index) => <option \n                key={index} \n                value={action.id}>\n                {action.title}\n                </option>)\n        const goalOptions = goals.map(goal => <option\n            key={goal.id} \n            value={goal.id}>\n            {goal.title}\n            </option>)\n        return (\n            <div className='goal-form'>\n                <FontAwesomeIcon \n                    className='entry-back-arrow' \n                    onClick={() => this.props.addGoal()} \n                    icon={faArrowAltCircleLeft} />\n                <div className='goal-settings'>\n                    <div className='new-goal'>\n                        {error}\n                        <form\n                            onSubmit={(e) => this.createAction(e)}\n                            >\n                            <legend><h2>Add New Action</h2></legend>\n                            <label>Title</label>\n                            <input \n                                onChange={this.updateActionTitle}\n                                />\n                            <button>Add Action</button>\n                        </form>\n                        <form\n                            onSubmit={(e) => this.createGoal(e)}\n                            >\n                            <legend><h2>Add New Goal</h2></legend>\n                            <label>Action Type:</label>\n                            <select\n                                onChange={(event) => this.setState({ actionId: event.target.value })}\n                                >\n                                {options}\n                            </select>\n                            <br/>\n                            <label>Title</label>\n                            <input onChange={this.updateGoalTitle} />\n                            <button>Add Goal</button>\n                        </form>\n                    </div>\n                    <div className='delete-goal'>\n                        <form\n                            onSubmit={(e) => this.deleteAction(e)}\n                            >\n                            <legend><h2>Delete Action</h2></legend>\n                            <select\n                                onChange={this.updateDeleteAction}\n                                >\n                                {options}\n                            </select>\n                            <button>Delete</button>\n                        </form>\n                        <form\n                            onSubmit={(e) => this.deleteGoal(e)}\n                            >\n                            <legend><h2>Delete Goal</h2></legend>\n                                <select\n                                    onChange={this.updateDeleteGoal}\n                                    >\n                                    {goalOptions}\n                                </select>\n                            <button>Delete</button>\n                        </form>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n    \n}\n\nexport default GoalForm;","import React from 'react';\nimport './ActionsPage.css';\nimport BlocksPage from '../BlocksPage/BlocksPage';\nimport ActionsService from '../../services/actions-service';\nimport GoalsService from '../../services/goals-service';\nimport Goal from '../../components/Goal/Goal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools } from '@fortawesome/free-solid-svg-icons';\nimport GoalForm from '../../components/GoalForm/GoalForm';\n\nclass ActionsPage extends React.Component {\n    state = {\n        activeGoal: null,\n        newGoal: false,\n        actions: [],\n        goals: [],\n        formActive: false,\n        error: false,\n        loading: false,\n    }\n    componentDidMount() {\n        ActionsService.getActions()\n            .then(actions => {\n                this.setState({ actions })\n                GoalsService.getGoals()\n                    .then(goals => this.setState({ goals }))\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    activateForm(goalId) {\n        const { goals } = this.state\n        const activeGoal = goals.find(goal => goal.id === goalId)\n        this.setState({ activeGoal })\n    }\n    toggleForm() {\n        const { formActive } = this.state\n        this.setState({\n            formActive: !formActive\n        })\n    }\n    addGoal() {\n        const { newGoal } = this.state\n        this.setState({ newGoal: !newGoal })\n    }\n    render() {\n        const { activeGoal, formActive, actions, goals, newGoal } = this.state\n        if (formActive) {\n            return (\n                <section className='actions-page'>\n                    <BlocksPage \n                        goal={activeGoal}\n                        blockSequence={activeGoal.block_sequence}  \n                        toggleForm={() => this.toggleForm()} />\n                </section>\n            )\n        }\n\n        if (newGoal) {\n            return <GoalForm actions={actions} goals={goals} addGoal={() => this.addGoal()} />\n        }\n\n        let actionList = actions.map(action => {\n            const goalList = goals.filter(goal => goal.action_id === action.id).map(\n                goal => <div \n                        key={goal.id}\n                        className='goal-container'>\n                        <Goal \n                            goal={goal} \n                            activateForm={(id) => this.activateForm(id)} \n                            toggleForm={() => this.toggleForm()} />\n                    </div> \n            )\n            return (\n                <div \n                    key={action.id}\n                    className='action'>\n                    <div className='action-header'>\n                        <h2>{action.title}</h2>\n                    </div>\n                    {goalList}\n                </div>\n                )\n            })\n        return (\n            <section className='reminders-page'>\n                <div className='actions'>\n                    {actionList}\n                </div>\n                <button\n                    className='add-reminder'\n                    onClick={() => this.addGoal()}\n                    >\n                    <FontAwesomeIcon icon={faTools} />\n                </button>\n            </section>\n        )\n    }\n}\n\nexport default ActionsPage;","import React from 'react';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport MissingPage from '../../routes/MissingPage/MissingPage';\nimport './User.css'\nimport HomePage from '../../routes/HomePage/HomePage';\nimport SearchPage from '../../routes/SearchPage/SearchPage';\nimport SideBar from '../../components/SideBar/SideBar';\nimport SavedPage from '../../routes/SavedPage/SavedPage';\nimport CalendarPage from '../../routes/CalendarPage/CalendarPage';\nimport RemindersPage from '../../routes/RemindersPage/RemindersPage';\nimport ActionsPage from '../../routes/ActionsPage/ActionsPage';\nimport BlocksPage from '../../routes/BlocksPage/BlocksPage';\nimport LogView from '../../routes/LogView/LogView';\n\nclass User extends React.Component {\n    state = {\n        view: 'Home'\n    }\n    updateView = (view) => {\n        this.setState({ view })\n    }\n    render() {\n        return (\n            <section className='user view'>\n                <SideBar logout={() => this.props.logout()}/>\n                <main>\n                    <Switch>\n                        <Route exact path='/' \n                            component={HomePage} />\n                        <Route path='/login' render={() => <Redirect to='/'/>} />\n                        <Route path='/calendar'\n                            component={CalendarPage} />\n                        <Route path='/actions'\n                            component={ActionsPage} />\n                        <Route path='/reminders'\n                            component={RemindersPage} />\n                        <Route path='/blocks'\n                            component={BlocksPage} />\n                        <Route path='/logs/:logdate'\n                            component={LogView} />\n                        <Route component={MissingPage} />\n                    </Switch>\n                </main>\n            </section>\n            \n        )\n    }\n}\n\nexport default User;","import React from 'react';\nimport './LandingPage.css';\n\nclass LandingPage extends React.Component {\n    render() {\n        return (\n            <section className='landing-page'>\n                <div className='landing-desc'>\n                    <p>A private journal integrated with goal and reminder tracking.</p>\n                    <p>Keep track of your life while writing out your narrative.</p>\n                    <button>Check it out</button>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default LandingPage;","import config from '../config'\n\nconst AuthApiService = {\n    postLogin({ username, password }) {\n        return fetch(`${config.API_ENDPOINT}/auth`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({ username, password })\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    postUser(user) {\n        return fetch(`${config.API_ENDPOINT}/users`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    }\n}\n\nexport default AuthApiService","import React, { Component } from 'react'\nimport AuthApiService from '../../services/auth-api-service';\nimport TokenService from '../../services/token-service';\nimport './LoginForm.css';\n\nclass LoginForm extends Component {\n  static defaultProps = {\n    onLoginSuccess: () => {}\n  }\n\n  state = { error: null }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    this.setState({ error: null })\n    const { username, password } = event.target\n    \n    AuthApiService.postLogin({\n      username: username.value,\n      password: password.value\n    })\n      .then(res => {\n        username.value = ''\n        password.value = ''\n        TokenService.saveAuthToken(res.authToken)\n        this.props.onLoginSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.message })\n      })\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form\n        className='LoginForm'\n        autoComplete='off'\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <div role='alert'>\n          {error && <p className='red'>{error}</p>}\n        </div>\n        <div className='user_name'>\n          <label htmlFor='LoginForm__user_name'>\n            User name\n          </label>\n          <input\n            required\n            name='username'\n            placeholder='username'\n            id='LoginForm__user_name'/>\n        </div>\n        <div className='password'>\n          <label htmlFor='LoginForm__password'>\n            Password\n          </label>\n          <input\n            required\n            name='password'\n            type='password'\n            placeholder='password'\n            id='LoginForm__password'/>\n        </div>\n        <button type='submit'>\n          Login\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react'\nimport LoginForm from '../../components/LoginForm/LoginForm'\n\nexport default class LoginPage extends Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => {},\n    },\n  }\n  state = {\n    login: false\n  }\n  handleLoginSuccess = () => {\n\n    this.props.login()\n  }\n\n  render() {\n    return (\n      <section className='LoginPage'>\n        <h2>Login</h2>\n        <LoginForm\n          onLoginSuccess={this.handleLoginSuccess}\n        />\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport AuthApiService from '../../services/auth-api-service';\nimport './RegistrationForm.css';\n\nclass RegistrationForm extends Component {\n  static defaultProps = {\n    onRegistrationSuccess: () => {}\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const { name, username, password } = event.target\n    \n    this.setState({ error: null })\n\n    AuthApiService.postUser({\n      username: username.value,\n      name: name.value,\n      password: password.value\n    })\n      .then(user => {\n        name.value = ''\n        password.value = ''\n        username.value = ''\n        this.props.onRegistrationSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form\n        className='RegistrationForm'\n        onSubmit={(event) => this.handleSubmit(event)}\n      >\n        <div role='alert'>\n          {error && <p className='red'>{error}</p>}\n        </div>\n        <div className='reg-name'>\n          <label htmlFor='registration-name'>\n            Name\n          </label>\n          <input\n            name='name'\n            type='text'\n            required\n            id='registration-name'>\n          </input>\n        </div>\n        <div className='reg-username'>\n          <label htmlFor='registration-username'>\n            Username\n          </label>\n          <input\n            name='username'\n            type='text'\n            required\n            id='registration-username'>\n          </input>\n        </div>\n        <div className='reg-password'>\n          <label htmlFor='registration-password'>\n            Password\n          </label>\n          <input\n            name='password'\n            type='password'\n            required\n            id='registration-password'>\n          </input>\n        </div>\n        <button type='submit'>\n          Register\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default RegistrationForm;","import React, { Component } from 'react'\nimport RegistrationForm from '../../components/RegistrationForm/RegistrationForm'\n\nclass RegistrationPage extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {},\n    },\n  }\n\n  handleRegistrationSuccess = user => {\n    const { history } = this.props\n    history.push('/login')\n  }\n\n  render() {\n    return (\n      <section className='RegistrationPage'>\n        <h2>Register</h2>\n        <RegistrationForm\n          onRegistrationSuccess={this.handleRegistrationSuccess}\n        />\n      </section>\n    )\n  }\n}\n\nexport default RegistrationPage;","import React from 'react'\nimport { Switch, Link, Route } from 'react-router-dom'\nimport LandingPage from '../../routes/LandingPage/LandingPage'\nimport LoginPage from '../../routes/LoginPage/LoginPage'\nimport RegistrationPage from '../../routes/RegistrationPage/RegistrationPage';\nimport MissingPage from '../../routes/MissingPage/MissingPage';\nimport './NonUser.css';\n\nclass NonUser extends React.Component {\n    render() {\n        return (\n            <section className='new-user view'>\n                <nav>\n                    <Link to='/'>\n                        <span className='logo'>\n                            Goala\n                        </span>\n                    </Link>\n                    <div className='new-user-links'>\n                        <Link to='/register'>Register</Link>\n                        <Link to='/login'>Login</Link>\n                    </div>\n                    \n                </nav>\n                <main>\n                    <Switch>\n                        <Route exact path='/' component={LandingPage}/>\n                        <Route exact path='/login' render={() => <LoginPage login={() => this.props.login()}/>}/>\n                        <Route exact path='/register' component={RegistrationPage}/>\n                        <Route component={MissingPage}/>\n                    </Switch>\n                </main>\n            </section>\n        )\n    }\n}\n\nexport default NonUser;","import config from '../config'\nimport TokenService from './token-service';\n\nconst ChatService = {\n    postMessage(goalId, msg='new goal') {\n        return fetch(`${config.API_ENDPOINT}/chat/${goalId}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify({\n                msg\n            })\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n    // gets entire conversation for the day\n    getChat(goalId) {\n        return fetch(`${config.API_ENDPOINT}/chat/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            },\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    }\n}\n\nexport default ChatService","import React from 'react'\nimport ChatService from '../services/chat-service'\n\nconst nullGoal = {\n    id: null,\n    title: '',\n    motivations: [],\n    duration: null,\n    user_id: null,\n}\n\nconst nullGoals = {\n    goal_0: nullGoal\n}\n\nconst nullChats = {\n}\n\nconst GoalContext = React.createContext({\n    goals: nullGoals,\n    chats: nullChats,\n    error: null,\n    setError: () => {},\n    clearError: () => {},\n    deleteGoal: () => {},\n    setGoal: () => {},\n    setChat: () => {},\n    updateChatClient: () => {},\n    updateChatServer: () => {},\n})\n\nclass GoalProvider extends React.Component {\n    state = {\n        goals: nullGoals,\n        chats: nullChats,\n        error: null,\n    }\n    // arrow functions for binding, oh yeah\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    clearError = () => {\n        this.setState({ error: null })\n    }\n\n    setGoal = (goal) => {\n        const id = goal.id\n        const { goals } = this.state\n        goals[`goal_${id}`] = goal\n        this.setState({ goals })\n    }\n\n    setChat = (goalId, chat) => {\n        const { chats } = this.state\n\n        chats[`chat_${goalId}`] = chat\n        this.setState({ chats })\n    }\n\n    updateChatClient = (message, goalId) => {\n        const { chats } = this.state\n\n        const msg = {\n            message,\n            user_id: 1 \n        }\n        chats[`chat_${goalId}`].push(msg)\n        this.setState({ chats })\n\n        // After updating chat context, pass new msg from client to server\n        ChatService.postMessage(goalId, message)\n            .then(res => {\n                console.log('RES', res)\n                this.updateChatServer(res.msg, goalId)\n            })\n            .catch(res => {\n                this.setState({ error: res.error })\n            })\n    }\n\n    updateChatServer = (message, goalId) => {\n        const { chats } = this.state\n        const msg = {\n            message,\n            user_id: 0\n        }\n\n        chats[`chat_${goalId}`].push(msg)\n        this.setState({ chats })\n    }\n\n    render() {\n        const value = {\n            goals: this.state.goals,\n            chats: this.state.chats,\n            error: this.state.error,\n            setError: this.setError,\n            clearError: this.clearError,\n            setGoal: this.setGoal,\n            setChat: this.setChat,\n            updateChatClient: this.updateChatClient,\n            updateChatServer: this.updateChatServer,\n        }\n        return (\n            <GoalContext.Provider value={value}>\n                {this.props.children}\n            </GoalContext.Provider>\n        )\n    }\n}\n\nexport {\n    nullGoal,\n    GoalContext,\n    GoalProvider\n}","import React from 'react';\nimport User from './views/User/User';\nimport NonUser from './views/NonUser/NonUser';\nimport './App.css';\nimport TokenService from './services/token-service';\nimport { GoalContext } from './context/GoalContext';\n\nclass App extends React.Component {\n  state = {\n    user: false\n  }\n  login() {\n    this.setState({ user: true })\n  }\n  logout() {\n    TokenService.clearAuthToken()\n    this.setState({ user: false })\n  }\n  render() {\n    const currentView = TokenService.hasAuthToken() ? <User logout={() => this.logout()}/> : <NonUser login={() => this.login()}/>\n    return (\n      <div className=\"App\">\n        {currentView}\n      </div>\n    );\n  }\n}\n\nApp.contextType = GoalContext;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { GoalProvider } from './context/GoalContext';\n\nReactDOM.render(\n    <BrowserRouter>\n        <GoalProvider>\n            <App />\n        </GoalProvider>\n    </BrowserRouter>, \n    document.getElementById('root'));\n"],"sourceRoot":""}
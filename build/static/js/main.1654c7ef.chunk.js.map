{"version":3,"sources":["routes/MissingPage/MissingPage.js","components/Spinner/Spinner.js","components/Card/Date/Date.js","components/Card/Card.js","components/CardList/CardList.js","components/SearchBar/SearchBar.js","config.js","services/token-service.js","services/entries-service.js","services/goals-service.js","components/EntryBar/EntryStamp/EntryStamp.js","services/reminders-service.js","components/EntryBar/EntryBar.js","components/Tile/Tile.js","services/logs-service.js","services/blocks-service.js","components/ToolBox/Blocks/Weekly/Weekly.js","components/ToolBox/Blocks/CheckList/CheckList.js","components/ToolBox/Blocks/Clock/Clock.js","components/ToolBox/Blocks/Count/Count.js","components/ToolBox/Blocks/CountDown/CountDown.js","components/ToolBox/Blocks/Date/Date.js","components/ToolBox/Blocks/Notes/Notes.js","components/ToolBox/Blocks/Text/Text.js","components/ToolBox/Blocks/Trash/Trash.js","components/ToolBox/Blocks/Title/Title.js","components/ToolBox/Blocks/YesNo/YesNo.js","components/ToolBox/Blocks/BaseBlock/BlockMap.js","routes/LogView/LogView.js","routes/EntryPage/EntryPage.js","routes/HomePage/HomePage.js","components/SideBar/SideBar.js","components/Calendar/CalendarHeader/CalendarHeader.js","components/Calendar/CalendarCell/CalendarCell.js","components/Calendar/CalendarDays/CalendarDays.js","components/Calendar/CalendarView/CalendarView.js","components/Calendar/Calendar.js","routes/CalendarPage/CalendarPage.js","components/Reminder/Reminder.js","components/ReminderForm/ReminderForm.js","components/ToolBox/Blocks/BaseBlock/BaseBlock.js","routes/BlocksPage/Sequence.js","routes/BlocksPage/BlocksPage.js","routes/RemindersPage/RemindersPage.js","services/actions-service.js","components/Goal/Goal.js","components/GoalForm/GoalForm.js","routes/ActionsPage/ActionsPage.js","views/User/User.js","routes/LandingPage/LandingPage.js","services/auth-api-service.js","components/LoginForm/LoginForm.js","routes/LoginPage/LoginPage.js","components/RegistrationForm/RegistrationForm.js","routes/RegistrationPage/RegistrationPage.js","routes/DemoView/DemoBike.js","routes/DemoView/DemoEntry.js","routes/DemoView/DemoView.js","routes/DemoView/DemoBlood.js","routes/DemoView/DemoReading.js","routes/DemoView/DemoGroceries.js","views/NonUser/NonUser.js","services/chat-service.js","context/GoalContext.js","App.js","index.js"],"names":["MissingPage","message","this","props","className","alt","src","React","Component","override","css","Spinner","state","loading","sizeUnit","size","color","Date","date","moment","toDate","getDate","toLocaleString","weekday","month","getFullYear","Card","saved","text","title","highlight","replace","setState","onClick","upDate","innerRef","ContentEditable","html","disabled","icon","faBookmark","CardList","cardsList","cards","map","card","key","id","actions","reminders","keyword","defaultProps","SearchBar","event","preventDefault","search","onSubmit","e","submitSearch","faSearch","placeholder","onChange","updateKeyword","target","value","config","API_ENDPOINT","TOKEN_KEY","process","REACT_APP_API_KEY","TokenService","saveAuthToken","token","window","sessionStorage","setItem","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","EntriesService","createNewEntry","fetch","method","headers","body","JSON","stringify","format","blocks","then","res","ok","json","Promise","reject","getEntryByDate","getEntriesById","getEntriesByKeyword","getEntriesByMonth","monthString","updateEntryText","updateEntryTitle","GoalsService","createGoal","action_id","getGoalsByDay","day","getGoalByGoalId","goalId","getGoals","postGoal","goal","getGoalById","deleteGoal","EntryStamp","tile","type","reminder","addTile","RemindersService","createReminder","deleteReminder","reminderId","getReminders","getRemindersByDate","getRemindersByDay","getReminderByReminderId","EntryBar","goals","dateFormatted","currentReminders","goalsTiles","remindersTiles","Tile","logId","logDate","LogsService","getLogByIdDate","createLog","updateLogValue","blockId","values","getWeeklyRatings","getDailyRatings","getGoalStats","BlocksService","createBlock","dimension","goal_id","reminder_id","newBlock","getBlocksByIds","ids","updateBlock","updateBlockSequence","sequence","console","log","block_sequence","Weekly","Su","M","Tu","W","Th","F","Sa","original","days","Object","keys","forEach","includes","val","toggleDay","propTypes","exact","bool","CheckList","checked","updateText","k2y","log_id","toggleCheck","object","Clock","hour","minute","meridiem","error","Math","floor","time","Boolean","number","startsWith","updateHour","updateMinute","toggleMeridiem","Count","num","den","units","CountDown","count","year","handleDay","handleMonth","handleYear","Notes","content","updateContent","Text","handleChange","Item","styled","div","isDragging","Notice","Handle","List","isDraggingOver","Container","Trash","provided","snapshot","list","ref","faTrashAlt","length","item","index","draggableId","draggableProps","style","dragHandleProps","width","height","viewBox","fill","d","Title","updateTitle","YesNo","yes","toggleButton","BlockMap","LogView","originalBlocks","redirect","logdate","match","params","split","catch","logs","block","to","EntryPage","saveButton","originalText","data","logView","handleTitle","handleText","originalTitle","newLog","push","activateLog","resetDate","faArrowAltCircleLeft","saveChanges","HomePage","page","itemCount","entries","searchActive","searchEntries","addNewEntries","reverse","element","scrollHeight","scrollTop","clientHeight","find","entry","searchJournal","onScroll","handleScroll","SideBar","currentView","setCurrentNav","undefined","faHome","faCalendar","faCheckSquare","faBell","logout","faSignOutAlt","rotation","months","CalendarHeader","prevMonth","faChevronLeft","currentMonth","nextMonth","faChevronRight","CalendarCell","openData","CalendarDays","activeDays","refresh","offset","renderCells","prevProps","array","Number","isInteger","monthOffset","startOf","monthLength","daysInMonth","cells","i","addCell","CalendarView","resetData","Calendar","getMonth","selectedDate","newMonth","CalendarPage","Reminder","modal","activateReminder","toggleForm","ReminderForm","deleteReminderId","reminderTitle","updateDeleteReminder","updateReminderTitle","options","returnPage","BaseBlock","Block","Sequence","Content","Kiosk","Button","button","ButtonText","SIDEBAR_ITEMS","uuid","reorder","startIndex","endIndex","result","Array","from","splice","removed","copy","source","destination","droppableSource","droppableDestination","sourceClone","destClone","move","droppableId","BlocksPage","columns","trash","originalSequence","onDragEnd","filter","addList","blockSeq","err","newBlocks","activeBlocks","trashBar","isDropDisabled","RemindersPage","activeReminder","unscheduledReminders","upcomingReminders","recurringReminders","formActive","settingsActive","newUser","schedule","blockSequence","toggleSettings","recurringReminderComponents","activateForm","upcomingReminderComponents","unscheduledReminderComponents","reminderView","faTools","ActionsService","deleteAction","actionId","getActions","createAction","Goal","last_logged","GoalForm","updateActionTitle","actionTitle","updateDeleteAction","deleteActionTitle","updateGoalTitle","goalTitle","updateDeleteGoal","deleteGoalTitle","success","reload","action","goalOptions","addGoal","ActionsPage","activeGoal","newGoal","actionList","goalList","newbie","User","view","updateView","path","component","render","LandingPage","AuthApiService","postLogin","username","password","postUser","user","LoginForm","authToken","onLoginSuccess","autoComplete","handleSubmit","role","htmlFor","required","name","LoginPage","login","handleLoginSuccess","location","history","RegistrationForm","onRegistrationSuccess","RegistrationPage","handleRegistrationSuccess","DemoBike","faArrowCircleLeft","DemoEntry","readOnly","DemoView","DemoBlood","DemoReading","DemoGroceries","NonUser","ChatService","postMessage","msg","getChat","nullGoals","goal_0","motivations","duration","user_id","nullChats","GoalContext","createContext","chats","setError","clearError","setGoal","setChat","updateChatClient","updateChatServer","GoalProvider","chat","Provider","children","App","contextType","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1654c7ef.chunk.js","sourcesContent":["import React from 'react';\nimport './MissingPage.css';\n\nclass MissingPage extends React.Component {\n    render() {\n        const { message } = this.props\n        return (\n            <div className='missing-page'>\n                <img \n                    alt='missing koala'\n                    src='https://images.unsplash.com/photo-1556811431-ec33c663aa89?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80' />\n                <h2>Sorry bud, I'm missing</h2>\n                { message }\n            </div>\n        )\n    }\n}\n\nexport default MissingPage;","import React from 'react';\nimport { css } from '@emotion/core';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport './Spinner.css';\n \n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n`;\n \nclass Spinner extends React.Component {\n    constructor(props) {\n        super(props);\n            this.state = {\n                loading: true\n        }\n    }\n    render() {\n    return (\n        <div className='sweet-loading'>\n            <ClipLoader\n                css={override}\n                sizeUnit={\"px\"}\n                size={150}\n                color={'#123abc'}\n                loading={this.state.loading}\n            />\n        </div> \n    )\n    }\n}\n\nexport default Spinner","import React from 'react';\nimport moment from 'moment'\nimport './Date.css';\n\nclass Date extends React.Component {\n    render() {\n        let { date } = this.props\n        date = moment(date).toDate()\n        return (\n            <div className='entry-date'>\n                <div className='entry-date-number'>\n                    {date.getDate()}\n                </div>\n                <div className='entry-date-block'>\n                    <div className='entry-date-day'>\n                        {date.toLocaleString('default', { weekday: 'long' })}\n                    </div>  \n                    <div className='entry-date-month'>\n                        {date.toLocaleString('default', { month: 'long' })} {date.getFullYear()}\n                    </div> \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Date;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookmark } from '@fortawesome/free-solid-svg-icons';\nimport './Card.css';\nimport Date from './Date/Date';\nimport ContentEditable from 'react-contenteditable';\n\nclass Card extends React.Component {\n    state = {\n        date: null, \n        saved: null, \n        text: '', \n        title: null,\n        highlight: null,\n    }\n    componentDidMount() {\n        let { date, highlight, saved, text, title, } = this.props\n        text = text || ''\n        date = date || new Date()\n\n        if (highlight) {\n            text = text.replace(highlight, `<span class='highlight-baby'>${highlight}</span>`)\n        }\n        this.setState({ date, highlight, saved, text, title })\n    }\n    render() {\n        let { date, saved, text, title } = this.state\n        return (\n            <div\n                onClick={() => this.props.upDate(date)}\n                className='entry-card'>\n                <div className='entry-card-header'>\n                    {date && <Date date={date}/>}\n                    <h3>\n                        {title}\n                    </h3>\n                </div>\n                <div className='entry-card-body'>\n                    <ContentEditable\n                        innerRef={this.ContentEditable}\n                        html={text}\n                        disabled={true}\n                        />\n                </div>\n                \n                <div \n                    // onClick={ saved = !saved }\n                    className={ saved ? 'entry-bookmark' : 'entry-bookmark active-mark' }>\n                    <FontAwesomeIcon icon={faBookmark} />\n                </div>\n            </div>\n        )\n    }\n}\n\nCard.propTypes = {\n    id: PropTypes.number,\n    date: PropTypes.object,\n    saved: PropTypes.bool,\n    actions: PropTypes.array,\n    reminders: PropTypes.array,\n    upDate: PropTypes.func,\n}\n\nexport default Card;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../Card/Card';\nimport './CardList.css';\n\nclass CardList extends React.Component {\n    // we're going to pass down props (card data) conditional on view:\n    // home feed -> fetch all cards\n    // saved feed -> fetch saved cards\n    // search feed -> fetch queried cards\n    static defaultProps = {\n        cards: []\n    }\n    render() {\n        const cardsList = this.props.cards.map(card => \n            <Card \n                upDate={(date) => this.props.upDate(date)}\n                key={card.id}\n                id={card.id}\n                date={card.date}\n                saved={card.saved}\n                actions={card.actions}\n                reminders={card.reminders}\n                text={card.text}\n                title={card.title}\n                keyword={this.props.keyword}\n                />\n        )\n        return (\n            <div className='card-list'>\n                {cardsList}\n            </div>\n        )\n    }\n}\n\nCardList.propTypes = {\n    cards: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.number,\n        date: PropTypes.instanceOf(Date),\n        saved: PropTypes.bool,\n        actions: PropTypes.array,\n        reminders: PropTypes.array,\n        text: PropTypes.string,\n    }))\n}\n\nexport default CardList;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n    submitSearch(event) {\n        event.preventDefault()\n        this.props.search()\n    }\n    render() {\n        return (\n            <div className='searchbar'>\n                <form\n                    onSubmit={ (e) => this.submitSearch(e) }\n                    >\n                    <button >\n                        <FontAwesomeIcon icon={faSearch} />\n                    </button>\n                    <input\n                        placeholder='Search through past entries'\n                        onChange={ (e) => this.props.updateKeyword(e.target.value) }\n                        />\n                </form>\n            </div>\n        )\n    }\n}\n\n\n\nexport default SearchBar","const config = {\n    // API_ENDPOINT: 'https://floating-dawn-57438.herokuapp.com/api',\n    API_ENDPOINT: 'http://localhost:8000/api',\n    TOKEN_KEY: process.env.REACT_APP_API_KEY || 'goala-client-auth-token',\n}\n\nexport default config","import config from '../config'\n\nconst TokenService = {\n    saveAuthToken(token) {\n        window.sessionStorage.setItem(config.TOKEN_KEY, token)\n    },\n    getAuthToken() {\n        return window.sessionStorage.getItem(config.TOKEN_KEY)\n    },\n    clearAuthToken() {\n        window.sessionStorage.removeItem(config.TOKEN_KEY)\n    },\n    hasAuthToken() {\n        return !!TokenService.getAuthToken()\n    },\n}\n\nexport default TokenService","import config from '../config'\nimport TokenService from './token-service';\nimport moment from 'moment';\n\nconst EntriesService = {\n    createNewEntry() {\n        return fetch(`${config.API_ENDPOINT}/entries/`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({\n                title: 'New Title',\n                date: moment(new Date()).format('YYYY-MM-DD'),\n                text: 'Start your entry for today...',\n                blocks: null,\n                saved: false,\n            })\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getEntryByDate(date) {\n        return fetch(`${config.API_ENDPOINT}/entries/date/${date}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getEntriesById() {\n        return fetch(`${config.API_ENDPOINT}/entries/`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n    getEntriesByKeyword(keyword) {\n        return fetch(`${config.API_ENDPOINT}/entries/search/${keyword}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n    getEntriesByMonth(month) {\n        const monthString = moment(month + 1, 'MM').format('YYYY-MM-DD')\n        return fetch(`${config.API_ENDPOINT}/entries/month/${monthString}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n    updateEntryText(id, text) {\n        return fetch(`${config.API_ENDPOINT}/entries/text/${id}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify({text: text})\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n    updateEntryTitle(id, title) {\n        return fetch(`${config.API_ENDPOINT}/entries/title/${id}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({title})\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )       \n    },\n\n    // postGoal(goal) {\n    //     return fetch(`${config.API_ENDPOINT}/goals`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //         body: JSON.stringify(goal)\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // getGoalById(id) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // deleteGoal(goalId) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         }\n    //     })\n    //     .then(res =>\n    //         (!res.ok)\n    //             ? res.json().then(e => Promise.reject(e))\n    //             : res.json()\n    //     )\n    // }\n}\n\nexport default EntriesService","import config from '../config'\nimport TokenService from './token-service';\n\nconst GoalsService = {\n    createGoal(title, action_id) {\n        return fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ title, action_id })\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalsByDay(day) {\n        return fetch(`${config.API_ENDPOINT}/goals/day/${day}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalByGoalId(goalId) {\n        return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoals() {\n        return fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n\n    postGoal(goal) {\n        return fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(goal)\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalById(id) {\n        return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    deleteGoal(goalId) {\n        return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n}\n\nexport default GoalsService","import React from 'react';\nimport './EntryStamp.css';\n\nclass EntryStamp extends React.Component {\n    state = {\n        tile: {type: null}\n    }\n    componentDidMount() {\n        const { goal, reminder } = this.props\n\n        if (goal) {\n            this.setState({ \n                tile: { ...goal, type: 'goal' },\n            })\n        }\n\n        if (reminder) {\n            this.setState({ \n                tile: { ...reminder, type: 'reminder' },\n            })\n        }\n    }\n    render() {\n        const { title } = this.props\n    \n        return (\n            <div\n                onClick={() => this.props.addTile(this.state.tile)} \n                className='entry-stamp'>\n                {title}\n            </div>\n        )\n    }\n}\n\nexport default EntryStamp;","import config from '../config'\nimport TokenService from './token-service';\nimport moment from 'moment';\n\nconst RemindersService = {\n    createReminder(title) {\n        return fetch(`${config.API_ENDPOINT}/reminders/`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ date: moment(new Date()).format('YYYY-MM-DD'), title })\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n    deleteReminder(reminderId) {\n        return fetch(`${config.API_ENDPOINT}/reminders/${reminderId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n    getReminders() {\n        return fetch(`${config.API_ENDPOINT}/reminders`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getRemindersByDate(date) {\n        return fetch(`${config.API_ENDPOINT}/reminders/date/${date}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getRemindersByDay(day) {\n        return fetch(`${config.API_ENDPOINT}/reminders/day/${day}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getReminderByReminderId(reminderId) {\n        return fetch(`${config.API_ENDPOINT}/reminders/${reminderId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    }\n\n    // postGoal(goal) {\n    //     return fetch(`${config.API_ENDPOINT}/goals`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //         body: JSON.stringify(goal)\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // getGoalById(id) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // }\n}\n\nexport default RemindersService","import React from 'react';\nimport './EntryBar.css';\nimport GoalsService from '../../services/goals-service';\nimport moment from 'moment';\nimport EntryStamp from './EntryStamp/EntryStamp';\nimport RemindersService from '../../services/reminders-service';\n\nclass EntryBar extends React.Component {\n    state = {\n        goals: [],\n        reminders: []\n    }\n    componentDidMount() {\n        const weekdays = ['Su', 'M', 'Tu', 'W', 'Th', 'F', 'Sa']\n        const { date } = this.props\n        if (date) {\n            const day = weekdays[moment(date).day()]\n            const dateFormatted = moment(date).format('MMM-DD-YYYY')\n            GoalsService.getGoalsByDay(day)\n                .then(goals => this.setState({ goals }))\n\n            RemindersService.getRemindersByDate(dateFormatted)\n                .then(reminders => this.setState({ reminders }))\n            \n            RemindersService.getRemindersByDay(day)\n                .then(reminders => {\n                    const currentReminders = [...this.state.reminders, ...reminders]\n                    this.setState({ reminders: currentReminders })\n                })\n        }\n    }\n    render() {\n        const { date } = this.props\n        const { goals, reminders } =  this.state\n        const goalsTiles = goals.map((goal) => \n            <EntryStamp \n                date={date}\n                key={`goal-${goal.id}`}\n                addTile={(goal) => this.props.addTile(goal, date)} \n                title={goal.title} \n                goal={goal} />)\n        const remindersTiles = reminders.map((reminder) => \n            <EntryStamp \n                date={date}\n                key={`reminder-${reminder.id}`} \n                addTile={(reminder) => this.props.addTile(reminder, date)} \n                title={reminder.title}\n                reminder={reminder} />\n        )\n        return (\n            <div className='entry-bar'>\n                <div className='entry-bar-section entry-bar-goals'>\n                    <h4>Goals</h4>\n                    <div className='entry-tiles'>\n                        {goalsTiles}\n                    </div>\n                </div>\n                <span className='entry-bar-split' />\n                <div className='entry-bar-section entry-bar-reminders'>\n                    <h4>Reminders</h4>\n                    <div className='entry-tiles'>\n                        {remindersTiles}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EntryBar;","import './Tile.css';\nimport moment from 'moment';\n\nfunction Tile(tile, date) {\n    const { type, id, title, } = tile;\n\n    // STORING the blocks with type and value for BLOCKMAP\n    // tileBlocks returns an array of objects that contain goal_id/reminder_id possibly null\n    // the type and value !important\n    // \n    // let tileBlocks\n    // BlocksService.getBlocksByIds(block_sequence)\n    //             .then(blocks => {\n    //                 tileBlocks = blocks\n    //             })\n    //             .catch()\n    let logId\n    let logDate = moment(date).format('MM-DD-YYYY')\n\n    if (type === 'goal') {\n        logId = `g-${id}=${logDate}`\n    } else if (type === 'reminder') {\n        logId = `r-${id}=${logDate}`\n    }\n\n    return `<a href='/logs/${logId}' contentEditable='false' class='text-stamp-container'> <button class='entry-text-stamp'> ${title} </button><div class='stamp-hidden'>Hide me</div> </a>`\n}\n\nexport default Tile;","import config from '../config';\nimport TokenService from './token-service';\nimport moment from 'moment';\n\nconst LogsService = {\n    getLogByIdDate(logId, date) {\n        return fetch(`${config.API_ENDPOINT}/logs/log/${logId}/${date}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    createLog(logId, date) {\n        return fetch(`${config.API_ENDPOINT}/logs/log/${logId}/${date}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    updateLogValue(blockId, date, logId, value) {\n        let dateFormatted = moment(date).format('MM-DD-YYYY')\n        return fetch(`${config.API_ENDPOINT}/logs/log/${logId}/${dateFormatted}`, {\n            method: 'PUT',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ values: { [blockId]: value } })\n\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n\n\n    getWeeklyRatings(goalId) {\n        return fetch(`${config.API_ENDPOINT}/logs/weekly/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getDailyRatings(goalId) {\n        return fetch(`${config.API_ENDPOINT}/logs/daily/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalStats(goalId) {\n        return fetch(`${config.API_ENDPOINT}/logs/stats/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    }\n}\n\nexport default LogsService","import config from '../config'\nimport TokenService from './token-service';\n\nconst BlocksService = {\n    async createBlock(type, value, dimension, goal_id, reminder_id) {\n        const newBlock = { type, value, dimension, goal_id, reminder_id }\n        return await fetch(`${config.API_ENDPOINT}/blocks/new`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(newBlock)\n        })\n            .then(res =>{\n                return (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n                })\n    },\n    async getBlocksByIds(ids) {\n        return await fetch(`${config.API_ENDPOINT}/blocks`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(ids)\n        })\n            .then(res =>{\n                return (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n                })\n    },\n    updateBlock(id, value) {\n        return fetch(`${config.API_ENDPOINT}/blocks/block/${id}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ value })\n        })\n            .then(res => {\n                return (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n                })\n    },\n    updateBlockSequence(sequence, type, id) {\n        console.log(`Type, type, reading all about it ${ type }`)\n        return fetch(`${config.API_ENDPOINT}/blocks/${type}/${id}`, {\n            method: 'PATCH',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({ block_sequence: sequence })\n        })\n            .then(res => {\n                return (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n                })\n    }\n\n    // getActions() {\n    //     return fetch(`${config.API_ENDPOINT}/actions`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n\n    // postGoal(goal) {\n    //     return fetch(`${config.API_ENDPOINT}/goals`, {\n    //         method: 'POST',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //         body: JSON.stringify(goal)\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // getGoalById(id) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n    //         method: 'GET',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         },\n    //     })\n    //         .then(res =>\n    //             (!res.ok)\n    //                 ? res.json().then(e => Promise.reject(e))\n    //                 : res.json()\n    //         )\n    // },\n    // deleteGoal(goalId) {\n    //     return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'content-type': 'application/json',\n    //             'authorization': `bearer ${TokenService.getAuthToken()}`\n    //         }\n    //     })\n    //     .then(res =>\n    //         (!res.ok)\n    //             ? res.json().then(e => Promise.reject(e))\n    //             : res.json()\n    //     )\n    // }\n}\n\nexport default BlocksService","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Weekly.css';\n\nclass Weekly extends React.Component {\n    state = {\n        Su: false,\n        M: false,\n        Tu: false,\n        W: false,\n        Th: false,\n        F: false,\n        Sa: false,\n        original: {}\n    }\n    componentDidMount() {\n        if (this.props.value.days) {\n            const days = this.props.value.days\n            const state = {}\n            const original = {}\n            Object.keys(this.state).forEach(key => {\n                console.log(key, days)\n                if (days.includes(key)) {\n                    state[key] = true\n                    original[key] = true\n                }\n            })\n\n            this.setState(state)\n        }\n    }\n    componentWillUnmount() {\n        \n    }\n    toggleDay(day) {\n        const val = this.state[day]\n        this.setState({ [day]: !val })\n    }\n    render() {\n        return (\n            <div className='block block-weekly'>\n                <h3>Weekly Schedule</h3>\n                <div className='weekly-board'>\n                    <div className={'weekly-day weekly-day-left ' + (this.state.Su && 'day-active')}\n                        onClick={() => this.toggleDay('Su')}\n                        >\n                        Su\n                    </div>\n                    <div className={'weekly-day ' + (this.state.M && 'day-active')}\n                        onClick={() => this.toggleDay('M')}\n                        >\n                        M\n                    </div>\n                    <div className={'weekly-day ' + (this.state.Tu && 'day-active')}\n                        onClick={() => this.toggleDay('Tu')}\n                        >\n                        Tu\n                    </div>\n                    <div className={'weekly-day ' + (this.state.W && 'day-active')}\n                        onClick={() => this.toggleDay('W')}\n                        >\n                        W\n                    </div>\n                    <div className={'weekly-day ' + (this.state.Th && 'day-active')}\n                        onClick={() => this.toggleDay('Th')}\n                        >\n                        Th\n                    </div>\n                    <div className={'weekly-day ' + (this.state.F && 'day-active')}\n                        onClick={() => this.toggleDay('F')}\n                        >\n                        F\n                    </div>\n                    <div className={'weekly-day weekly-day-right ' + (this.state.Sa && 'day-active')}\n                        onClick={() => this.toggleDay('Sa')}\n                        >\n                        Sa\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nWeekly.defaultProps = {\n    value: propTypes.exact({\n        Su: propTypes.bool,\n        M: propTypes.bool,\n        Tu: propTypes.bool,\n        W: propTypes.bool,\n        Th: propTypes.bool,\n        F: propTypes.bool,\n        Sa: propTypes.bool,\n    })\n}\n\nexport default Weekly;","import React from 'react';\nimport propTypes from 'prop-types';\nimport './CheckList.css';\nimport LogsService from '../../../../services/logs-service';\n\nclass CheckList extends React.Component {\n    //TODO probably should sanitize this later\n    state = {\n        text: 'checklist',\n        checked: false,\n    }\n    componentDidMount() {\n        const { log, value } = this.props\n        if (log && log.value) {\n            Object.keys(log.value).forEach(key => {\n                Object.keys(log.value[key]).forEach(k2y => {\n                    this.setState({ [`${k2y}`]: log.value[key][k2y] })\n                })\n            })\n        }\n        else if (value) {\n            let checked = value.checked\n            let text = value.text ? value.text : value.value\n            this.setState({ checked, text })\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.log && JSON.stringify(this.props.value) !== JSON.stringify(this.state)) {\n            LogsService.updateLogValue(this.props.log.blockId, this.props.log.date, this.props.log.log_id, this.state)\n        }\n    }\n    updateText = event => {\n        this.setState({ text: event.target.value})\n    }\n    toggleCheck() {\n        const { checked } = this.state\n        this.setState({ checked: !checked })\n    }\n    render() {\n        const { text, checked } = this.state\n        return (\n            <div className='block block-checklist'>\n                <input\n                    onChange={this.updateText}\n                    value={text}\n                    />\n                <input\n                    onChange={() => this.toggleCheck()}\n                    checked={checked}\n                    type='checkbox'\n                    />\n            </div>\n        )\n    }\n}\n\nCheckList.defaultProps = {\n    value: propTypes.object\n}\n\nexport default CheckList;","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Clock.css';\n\nclass Clock extends React.Component {\n    state = {\n        hour: 0,\n        minute: 0,\n        meridiem: true,\n        error: ''\n    }\n    componentDidMount() {\n        let hour, minute, meridiem\n        const { value } = this.props\n        hour = Math.floor(value.time / 100) % 12\n        minute = value.time % 100\n        meridiem = Boolean(Math.floor(value.time / 100) < 12)\n\n        this.setState({ hour, minute, meridiem })\n    }\n    toggleMeridiem() {\n        const { meridiem } = this.state\n        this.setState({ meridiem: !meridiem })\n    }\n    updateHour(event) {\n        event.preventDefault()\n        let error = ''\n        const number = event.target.value\n        if (number < 0) {\n            error = 'value must be greater than or equal to 0'\n        } else if (number > 12) {\n            error = 'value must be less than or equal to 12'\n        } else if ((number + 'a').startsWith('-')) {\n            error = 'value cant start with negative'\n        }\n        if (error) {\n            this.setState({ error })\n        } else {\n            this.setState({ hour: number })\n        }\n    }\n    updateMinute(event) {\n        event.preventDefault()\n        let error = ''\n        const number = event.target.value\n        if (number < 0) {\n            error = 'value must be greater than or equal to 0'\n        } else if (number > 59) {\n            error = 'value must be less than or equal to 59'\n        } else if ((number + 'a').startsWith('-')) {\n            error = 'value cant start with negative'\n        }\n        if (error) {\n            this.setState({ error })\n        } else {\n            this.setState({ minute: number })\n        }\n    }\n    render() {\n        const { meridiem, hour, minute, error } = this.state\n        return (\n            <div className='block block-clock'>\n                <h2>Clock</h2>\n                <div className='clock-block block-main'>\n                    <input onChange={(e) => this.updateHour(e)} type='number' value={hour || 0} />\n                    :\n                    <input onChange={(e) => this.updateMinute(e)} type='number' value={minute || 0}/>\n                    <div className='meridiem' onClick={() => this.toggleMeridiem()}>\n                        {meridiem ? 'am' : 'pm'}\n                    </div>\n                </div>\n                {error}\n            </div>\n        )\n    }\n}\n\nClock.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Clock;","import React from 'react';\nimport './Count.css';\nimport LogsService from '../../../../services/logs-service';\n\nclass Count extends React.Component {\n    state = {\n        num: '',\n        den: '',\n        units: 'units'\n    }\n    componentDidMount() {\n        if (this.props.value) {\n            const { num, den, units } = this.props.value\n            this.setState({ num, den, units})\n        }\n\n    }\n    onChange(type, event) {\n        event.preventDefault()\n        this.setState({ [type]: event.target.value })\n    }\n    componentWillUnmount() {\n        if (this.props.log && JSON.stringify(this.props.value) !== JSON.stringify(this.state)) {\n            LogsService.updateLogValue(this.props.log.blockId, this.props.log.date, this.props.log.log_id, this.state)\n        }\n    }\n    render() {\n        const { num, den, units } = this.state\n        return (\n            <div className='block block-count'>\n                <h2>Count</h2>\n                <div className='block-count-input'>\n                    <input\n                        className='number'\n                        type='number'\n                        placeholder='#'\n                        onChange={(e) => this.onChange('num', e)}\n                        value={num}\n                        />\n                    /\n                    <input\n                        type='number'\n                        placeholder='count'\n                        onChange={(e) => this.onChange('den', e)}\n                        value={den}\n                        />\n                    <input\n                        className='units'\n                        placeholder='units'\n                        onChange={(e) => this.onChange('units', e)}\n                        value={units}\n                        />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Count;","import React from 'react';\nimport propTypes from 'prop-types';\nimport './CountDown.css';\n\nclass CountDown extends React.Component {\n    state = {\n        count: 99\n    }\n    componentDidMount() {\n        const { value } = this.props\n        if (value.count) {\n            this.setState({ count: value.count })\n        }\n    }\n    onChange = event => {\n        this.setState({ count: event.target.value })\n    }\n    render() {\n        const { count } = this.state\n        return (\n            <div className='block block-countdown'>\n                <h2>Countdown</h2>\n                <input\n                    onChange={this.onChange}\n                    type='number'\n                    value={count}\n                    />\n                days\n            </div>\n        )\n    }\n}\n\nCountDown.defaultProps = {\n    value: propTypes.object\n}\n\nexport default CountDown;","import React from 'react';\nimport moment from 'moment';\nimport propTypes from 'prop-types';\nimport './Date.css';\n\nclass Date extends React.Component {\n    state = {\n        date: null,\n        day: 1,\n        month: 1,\n        year: 1,\n    }\n    componentDidMount() {\n        const { value } = this.props\n        const date = value.date || new Date()\n        const day = moment(date).format('DD')\n        const month = moment(date).format('MMMM')\n        const year = moment(date).format('YYYY')\n\n        this.setState({ date, day, month, year })\n    }\n    handleDay = event => {\n        this.setState({ day: event.target.value })\n    }\n    handleMonth = event => {\n        this.setState({ month: event.target.value })\n    }\n    handleYear = event => {\n        this.setState({ year: event.target.value })\n    }\n    render() {\n        const { day, month, year } = this.state\n        return (\n            <div className='block block-date'>\n                <input\n                    onChange={this.handleMonth}\n                    className='block-date-month'\n                    value={month}\n                    />\n                <input\n                    onChange={this.handleMonth}\n                    className='block-date-day'\n                    value={day}\n                    />\n                <input\n                    onChange={this.handleMonth}\n                    className='block-date-year'\n                    value={year}\n                    />\n            </div>\n        )\n    }\n}\n\nDate.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Date;","import React from 'react';\nimport './Notes.css';\nimport ContentEditable from 'react-contenteditable';\n\nclass Notes extends React.Component {\n    state = {\n        content: 'Sticky Note'\n    }\n    componentDidMount() {\n        const { value } = this.props;\n        if (value) {\n            let content = value.content ? value.content : value.text || 'Sticky Note'\n            this.setState({ content })\n        }\n    }\n    updateContent(event) {\n        event.preventDefault()\n        this.setState({ content: event.target.value })\n    }\n    render() {\n        const { content } = this.state\n        return (\n            <div className='block block-notes'>\n                <ContentEditable\n                    innerRef={this.ContentEditable}\n                    html={content}\n                    disabled={false}\n                    onChange={this.updateContent}\n                    />\n            </div>\n        )\n    }\n}\n\nexport default Notes","import React from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport propTypes from 'prop-types';\nimport './Text.css';\n\nclass Text extends React.Component {\n    state = {\n        text: 'Text'\n    }\n    handleChange = event => {\n        this.setState({ text: event.target.value })\n    }\n    render() {\n        const text = this.props.value.text ? this.props.value.text : this.state.text\n        return (\n            <div className='block block-text'>\n                <ContentEditable\n                    innerRef={this.ContentEditable}\n                    html={text}\n                    disabled={false}\n                    onChange={this.handleChange}\n                    />\n            </div>\n        )\n    }\n}\n\nText.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Text;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, } from '@fortawesome/free-solid-svg-icons';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './Trash.css';\n\nconst sequence = []\n\nconst Item = styled.div`\n    display: flex;\n    user-select: none;\n    padding: 0.5rem;\n    margin: 0 0 0.5rem 0;\n    align-items: flex-start;\n    align-content: flex-start;\n    line-height: 1.5;\n    border-radius: 3px;\n    background: #fff;\n    border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\n`;\n\nconst Notice = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0 0.5rem 0.5rem;\n    border: 1px solid transparent;\n    line-height: 1.5;\n    color: #aaa;\n`;\n\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n\nconst List = styled.div`\n    border: 1px\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\n\nconst Container = styled(List)`\n    margin: 0.5rem 0.5rem 1.5rem;\n`;\n\nclass Trash extends React.Component {\n    state = {\n        sequence: []\n    }\n    componentDidMount() {\n        // fetch sequence and store in state\n        this.setState({ sequence })\n    }\n    render() {\n        const { provided, snapshot, list } = this.props\n        return (\n            <Container\n                className='block-trash'\n                ref={provided.innerRef}\n                isDraggingOver={snapshot.isDraggingOver}>\n                <FontAwesomeIcon icon={faTrashAlt} />\n                {list.length\n                    ? list.map(\n                        (item, index) => (\n                            <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}>\n                                {(provided, snapshot) => (\n                                    <Item\n                                        className='block-container-saved'\n                                        ref={\n                                            provided.innerRef\n                                        }\n                                        {...provided.draggableProps}\n                                        isDragging={\n                                            snapshot.isDragging\n                                        }\n                                        style={\n                                            provided\n                                                .draggableProps\n                                                .style\n                                        }>\n                                        <Handle\n                                            {...provided.dragHandleProps}>\n                                            <svg\n                                                width=\"24\"\n                                                height=\"24\"\n                                                viewBox=\"0 0 24 24\">\n                                                <path\n                                                    fill=\"currentColor\"\n                                                    d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                />\n                                            </svg>\n                                        </Handle>\n                                        {item.content}\n                                    </Item>\n                                )}\n                            </Draggable>\n                        )\n                    )\n                    : !provided.placeholder && (\n                        <Notice>Drop items here</Notice>\n                    )}\n                {provided.placeholder}\n            </Container>\n        )\n    }\n}\n\nTrash.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Trash;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport './Title.css';\n\nclass Title extends React.Component {\n    state = {\n        title: 'Subtitle'\n    }\n    componentDidMount() {\n        const { value } = this.props\n        if (value && value.title) {\n            this.setState({ title: value.title})\n        }\n    }\n    updateTitle(event) {\n        event.preventDefault()\n        this.setState({ title: event.target.value })\n    }\n    render() {\n        const { title } = this.state \n        return (\n            <div className='block block-title'>\n                <input\n                    onChange={(e) => this.updateTitle(e)}\n                    value={title}\n                    />\n            </div>\n        )\n    }\n}\n\nTitle.defaultProps = {\n    value: propTypes.object\n}\n\nexport default Title;","import React from 'react';\nimport './YesNo.css';\nimport LogsService from '../../../../services/logs-service';\n\nclass YesNo extends React.Component {\n    state = {\n        yes: null,\n    }\n    componentDidMount() {\n        const yes = this.props.value ? this.props.value.yes : false\n        this.setState({ yes })\n    }\n    componentWillUnmount() {\n        if (this.props.log && JSON.stringify(this.props.value) !== JSON.stringify(this.state)) {\n            LogsService.updateLogValue(this.props.log.blockId, this.props.log.date, this.props.log.log_id, this.state)\n        }\n    }\n    toggleButton() {\n        const { yes } = this.state\n        this.setState({ yes: !yes })\n    }\n    render() {\n        const { yes } = this.state\n        return (\n            <div className='yes-no'>\n                <div \n                    onClick={() => this.toggleButton()}\n                    className={'block-bool ' + (yes && 'bool-active')}>\n                    Yes\n                </div>\n                <div \n                    onClick={() => this.toggleButton()}\n                    className={'block-bool ' + (!yes && 'bool-active')}>\n                    No\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default YesNo;","import React from 'react';\nimport Weekly from \"../Weekly/Weekly\";\nimport CheckList from '../CheckList/CheckList';\nimport Clock from '../Clock/Clock';\nimport Count from '../Count/Count';\nimport CountDown from '../CountDown/CountDown';\nimport Date from '../Date/Date';\nimport Notes from '../Notes/Notes';\nimport Text from '../Text/Text';\nimport Trash from '../Trash/Trash';\nimport Title from '../Title/Title';\nimport YesNo from '../YesNo/YesNo';\n// key: block-type, value: block component\n\nfunction BlockMap(type, value, log) {\n    switch(type) {\n        case 'checklist':\n            return <CheckList value={value} log={log} />\n        case 'clock':\n            return <Clock value={value} log={log} />\n        case 'count':\n            return <Count value={value} log={log} />\n        case 'countdown':\n            return <CountDown value={value} log={log} />\n        case 'date':\n            return <Date value={value} log={log} />\n        case 'notes':\n            return <Notes value={value} log={log} />\n        case 'text':\n            return <Text value={value} log={log} />\n        case 'title':\n            return <Title value={value} log={log} />\n        case 'trash':\n                return <Trash value={value} log={log} />\n        case 'weekly':\n            return <Weekly value={value} log={log} />\n        case 'yesno':\n            return <YesNo value={value} log={log} />\n        default:\n            return null\n    }\n}\n\nexport default BlockMap","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './LogView.css';\nimport MissingPage from '../MissingPage/MissingPage';\nimport Spinner from '../../components/Spinner/Spinner';\nimport LogsService from '../../services/logs-service';\nimport GoalsService from '../../services/goals-service';\nimport RemindersService from '../../services/reminders-service';\nimport BlocksService from '../../services/blocks-service';\nimport BlockMap from '../../components/ToolBox/Blocks/BaseBlock/BlockMap';\n\nclass LogView extends React.Component {\n    state = {\n        blocks: null,\n        error: null,\n        loading: true,\n        log: null,\n        originalBlocks: null,\n        reminder: null,\n        goal: null,\n        block_sequence: null,\n        redirect: false, \n        values: {},\n    }\n    componentDidMount() {\n        let logdate = this.props.match ? this.props.match.params.logdate : null;\n        \n        if (logdate) {\n            const logId = logdate.split('=')[0]\n        const date = logdate.split('=')[1]\n\n        if (!logId) {\n            this.setState({ error: 'log id is missing'})\n        }\n        if (!date) {\n            this.setState({ error: 'date is missing'})\n        }\n\n        LogsService.getLogByIdDate(logId, date)\n            .then(log => {\n                // if no log, create. else set log.\n                if (!log.length) {\n                    LogsService.createLog(logId, date)\n                        .then(log => {\n                            this.setState({ log:log[0] })\n                        })\n                }\n                this.setState({ log: log[0] })\n\n                // find if reminder or goal and get value\n                const { goal_id, reminder_id } = log[0]\n                if (goal_id) {\n                    GoalsService.getGoalByGoalId(goal_id)\n                        .then(goal => {\n                            this.setState({ goal: goal[0], sequence: goal[0].block_sequence })\n                            BlocksService.getBlocksByIds(goal[0].block_sequence)\n                                .then(blocks => this.setState({ blocks, originalBlocks: blocks }))\n                        })\n                }\n                if (reminder_id) {\n                    RemindersService.getReminderByReminderId(reminder_id)\n                        .then(reminder => {\n                            this.setState({ reminder: reminder[0], sequence: reminder[0].block_sequence })\n                            BlocksService.getBlocksByIds(reminder[0].block_sequence)\n                                .then(blocks => this.setState({ blocks, originalBlocks: blocks }))\n                        })\n                }\n\n                const { value } = log[0]\n                this.setState({ values: value })\n            })\n            .catch(res => this.setState({ error: res.error }))\n        }\n        this.setState({ loading: false })\n    }\n    componentWillUnmount() {\n        \n    }\n    resetDate(){\n        const { log } = this.state\n        log.date = null\n        this.setState({ log })\n    }\n    render() {\n        const { blocks, values, loading, log, error, redirect } = this.state\n        let logs = blocks && blocks.map(block => {\n            let { type, value } = block\n\n            if (value && values && values[block.id]) {\n                value = values[block.id]\n            }\n            return <div key={block.id} className='log-block'>{BlockMap(type, value, {...log, blockId: block.id})}</div>\n        })\n\n        if ( loading ) {\n            return <Spinner />\n        }\n        if ( error ) {\n            return <MissingPage message={error} />\n        }\n        if (redirect) {\n            return <Redirect to='/' />\n            // return <EntryPage resetDate={() => this.resetDate()} date={log.date} />\n        }\n        return (\n            <section className='log-view'>\n                <button onClick={() => this.setState({ redirect: true })}>Take Me Back</button>\n                <div className='logs-list'>\n                    {logs}\n                </div>\n            </section>\n        )\n        // const { blocks } = this.state\n        // const { logs } = this.props\n        // return (\n        //     <div className='log-view'>\n        //         {logs.title}\n        //         {blocks}\n        //     </div>\n        // )\n    }\n}\n\nexport default LogView","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookmark, faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport Date from '../../components/Card/Date/Date';\nimport './EntryPage.css';\nimport ContentEditable from 'react-contenteditable';\nimport moment from 'moment';\nimport EntriesService from '../../services/entries-service';\nimport EntryBar from '../../components/EntryBar/EntryBar';\nimport Tile from '../../components/Tile/Tile';\nimport LogView from '../LogView/LogView';\n\nclass EntryPage extends React.Component {\n    state = {\n        saveButton: true,\n        saved: false,\n        date: new Date(), \n        id: null, \n        originalText: 'Original Text for Comparison',\n        text: 'Text', \n        title: 'Title',\n        loading: true,\n        logs: [],\n        data: null,\n        logView: false,\n        error: null\n    }\n    componentDidMount() {\n        let { date, data } = this.props\n\n        if (date) {\n            EntriesService.getEntryByDate(date)\n                .then(res => {\n                    const {id, text, title, saved} = res\n                    date = moment(date).format('YYYY-MM-DD')\n                    this.setState({ id, text, title, saved, date, originalText: text, originalTitle: title })\n                })\n                .catch(res => this.setState({ error: res.error }))\n        }\n\n        if (data) {\n            date = moment(data.date).format('YYYY-MM-DD')\n            const id = data.id\n            const text = data.text\n            const title = data.title\n            const saved = data.saved\n            this.setState({ date, id, text, title, saved, originalText: text, originalTitle: title })\n        }\n        this.setState({ loading: false })\n    }\n    componentWillUnmount() {\n        const { id, originalText, originalTitle, text, title } = this.state\n        if (originalText !== text) {\n            EntriesService.updateEntryText(id, text)\n                .then(res => res)\n                .catch(res => this.setState({ error: res.error }))\n        }\n        if (originalTitle !== title) {\n            EntriesService.updateEntryTitle(id, title)\n                .then(res => res)\n                .catch(res => this.setState({ error: res.error }))\n        }\n    }\n    handleTitle = event => {\n        this.setState({ title: event.target.value })\n    }\n    handleText = event => {\n        this.setState({ text: event.target.value })\n    }\n    addTile = (tile, date) => {\n        let { text } = this.state\n        text += Tile(tile, date)\n        console.log('tiled')\n        this.setState({ text })\n    }\n    updateLog(newLog) {\n        const { logs } = this.state\n        logs.push(newLog)\n        this.setState({ logs })\n    }\n    activateLog() {\n        this.setState({ activateLog: true })\n    }\n    saveChanges() {\n        const { id, originalText, originalTitle, text, title } = this.state\n        if (originalText !== text) {\n            EntriesService.updateEntryText(id, text)\n                .then(res => this.setState({ originalText: text }))\n                .catch(res => this.setState({ error: res.error }))\n        }\n        if (originalTitle !== title) {\n            EntriesService.updateEntryTitle(id, title)\n                .then(res => this.setState({ originalTitle: title }))\n                .catch(res => this.setState({ error: res.error }))\n        }\n        this.setState({saveButton: false})\n    }\n    render() {\n        const { originalText, originalTitle, loading, error, date, logs, saved, text, title, logView, saveButton } = this.state\n        \n        if (loading) {\n            return (\n                <section className='entry-page'>\n                    Loading \n                </section>\n            )\n        }\n\n        if (logs.length && logView) {\n            return (\n                <LogView logs={logs} />\n            )\n        }\n\n        return (\n            <section className='entry-page'>\n                {error}\n                <div \t                \n                    className={ saved ? 'entry-page-bookmark active-mark' : 'entry-page-bookmark' }>\n                    <FontAwesomeIcon icon={faBookmark} />\t\n                </div>\n                <FontAwesomeIcon \n                        className='entry-back-arrow' \n                        onClick={() => this.props.resetDate()} \n                        icon={faArrowAltCircleLeft} />\n                <div className='entry-body'>\n                    <div className='entry-header'>\n                        <Date date={date} />\n                        <input\n                            className='entry-title'\n                            onChange={this.handleTitle}\n                            value={title} />\n                        {((originalText !== text || originalTitle !== title) && saveButton) && <button onClick={() => this.saveChanges()}>Save Changes</button>}\n                    </div>\n                    <ContentEditable\n                        className='entry-text'\n                        innerRef={this.ContentEditable}\n                        html={text}\n                        disabled={false}\n                        onChange={this.handleText}\n                        />\n                </div>   \n                <EntryBar addTile={(tile) => this.addTile(tile, date)} date={date} /> \n            </section>\n        )\n    }\n}\n\nexport default EntryPage;","import React from 'react';\nimport './HomePage.css';\nimport Spinner from '../../components/Spinner/Spinner';\nimport CardList from '../../components/CardList/CardList';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport EntryPage from '../EntryPage/EntryPage';\nimport EntriesService from '../../services/entries-service';\nimport moment from 'moment';\n\nclass HomePage extends React.Component {\n    state = {\n        page: 0,\n        itemCount: 5,\n        entries: [],\n        error: null,\n        loading: true,\n        keyword: '',\n        date: null,\n        searchActive: false,\n        searchEntries: [],\n    }\n    componentDidMount() {\n        this.addNewEntries()\n            .then(entries => {\n                // check if today's entry exists and creates\n                if ((entries && !entries.length) || (entries && entries.length && moment(entries[0].date).format('MM-DD-YYYY') !== moment(new Date()).format('MM-DD-YYYY'))) {\n                    EntriesService.createNewEntry()\n                        .then(entries => this.setState({ entries }))\n                        .catch(res => this.setState({ error: res.message }))\n                } \n            })\n        \n    }\n    addNewEntries() {\n        let { entries, page, } = this.state\n\n        return EntriesService.getEntriesById()\n            .then(res => {\n                entries = [...entries, ...res]\n                entries = entries.reverse()\n                this.setState({\n                    entries,\n                    loading: false,\n                    page: page + 1\n                })\n                return entries\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    handleScroll(e) {\n        const element = e.target\n        if (element.scrollHeight - element.scrollTop === element.clientHeight) {\n            console.log('reached')\n        }\n    }\n    resetDate() {\n        this.setState({ date: null })\n    }\n    upDate(date) {\n        this.setState({ date })\n    }\n    updateKeyword(keyword) {\n        this.setState({ keyword })\n    }\n    searchJournal() {\n        // here we'll get request /entries/:keyword\n        // saved returned cards in state\n        const { keyword } = this.state\n        if (!keyword) {\n            this.setState({ searchActive: false })\n        } else {\n            EntriesService.getEntriesByKeyword(keyword)\n                .then(searchEntries => {\n                    console.log(searchEntries)\n                    this.setState({\n                        searchEntries,\n                        searchActive: true,\n                    })\n                })\n                .catch(res => this.setState({ error: res.error }))\n            this.setState({ searchActive: true })\n        }\n    }\n    render() {\n        const { error, entries, date, keyword, searchActive, searchEntries, } = this.state\n        if (date) {\n            const data = entries.find(entry => entry.date === date)\n            return (\n                <section className='home-page'>\n                    <EntryPage data={data} resetDate={() => this.resetDate()} />\n                </section>\n            )\n        }\n        if (searchActive) {\n            return (\n                <section className='home-page'>\n                    <SearchBar \n                    updateKeyword={ (keyword) => this.updateKeyword(keyword) }\n                    search={() => this.searchJournal() }\n                    />\n                    Hello Active \n                    <div className='journal-feed'>\n                        <CardList upDate={(date) => this.upDate(date)} cards={searchEntries} highlight={keyword} />\n                    </div>\n                </section>\n            )\n        }\n        return (\n            <section className='home-page'>\n                <SearchBar \n                    updateKeyword={ (keyword) => this.updateKeyword(keyword) }\n                    search={() => this.searchJournal() }\n                    />\n                { error }\n                <div className='journal-feed'\n                    onScroll={(e) => this.handleScroll(e)}\n                    >\n                    <CardList upDate={(date) => this.upDate(date)} cards={entries} />\n                </div>\n                {this.state.loading && <Spinner />}\n            </section>\n        )\n    }\n}\n\nexport default HomePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './SideBar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCalendar, faCheckSquare, faBell, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass SideBar extends React.Component {\n    state = {\n        currentView: 'home'\n    }\n    setCurrentNav(currentView) {\n        this.setState({ currentView })\n    }\n    render() {\n        const { currentView } = this.state\n        return (\n            <nav className='sidebar'>\n                <Link to='/'\n                    onClick={() => this.setCurrentNav('home')}\n                    className='nav-logo'>\n                    <span className='logo'>\n                    <img src='https://image.flaticon.com/icons/svg/141/141742.svg' alt='logo Icon made by Freepik from www.flaticon.com' />\n                        Goala\n                    </span>\n                </Link>\n                <Link to='/'\n                    onClick={() => this.setCurrentNav('home')}\n                    className={ currentView === 'home' ? 'nav-active' : undefined }>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faHome} /> \n                    </div>\n                    Home\n                </Link>\n                <Link to='/calendar'\n                    onClick={() => this.setCurrentNav('calendar')}\n                    className={ currentView === 'calendar' ? 'nav-active' : undefined }>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faCalendar} /> \n                    </div>\n                    Calendar\n                </Link>\n                <Link to='/actions'\n                    onClick={() => this.setCurrentNav('actions')}\n                    className={ currentView === 'actions' ? 'nav-active' : undefined }>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faCheckSquare} /> \n                    </div>\n                    Goals\n                </Link>\n                <Link to='/reminders'\n                    onClick={() => this.setCurrentNav('reminders')}\n                    className={ currentView === 'reminders' ? 'nav-active' : undefined }>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faBell} /> \n                    </div>\n                    Reminders\n                </Link>\n                <Link to='/login' \n                    className='nav-end'\n                    onClick={() => this.props.logout()}>\n                    <div className='sidebar-icon'>\n                        <FontAwesomeIcon \n                            icon={faSignOutAlt} rotation={180} />\n                    </div>\n                    Logout\n                </Link>\n            </nav>\n        )\n    }\n}\n\nexport default SideBar","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport './CalendarHeader.css';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nclass CalendarHeader extends React.Component {\n    render() {\n        return (\n            <div className='calendar-header'>\n                <div className=\"\">\n                    <div className=\"calendar-icon icon-left\" onClick={this.props.prevMonth}>\n                        <FontAwesomeIcon icon={faChevronLeft} />\n                    </div>\n                </div>\n                <div className=\"current-month\">\n                    <span className='current-month'>\n                    {months[this.props.currentMonth]}\n                    </span>\n                </div>\n                <div className=\"\" onClick={this.props.nextMonth}>\n                    <div className=\"calendar-icon icon-right\">\n                        <FontAwesomeIcon icon={faChevronRight} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CalendarHeader;","import React from 'react';\nimport './CalendarCell.css';\nimport PropTypes from 'prop-types';\nimport ContentEditable from 'react-contenteditable';\n\nclass CalendarCell extends React.Component {\n    state = {\n\n    }\n    componentDidMount() {\n\n    }\n    render() {\n        return (\n            <div \n                onClick={() => {\n                    const { data } = this.props\n                    this.props.openData(data)\n                }}\n                className={'calendar-cell ' + this.props.type}\n                to='/'>\n                <div className='cell-date'>\n                    {this.props.number || ''}\n                </div>\n                <div className='cell-text'>\n                    {this.props.data && <ContentEditable\n                    innerRef={this.ContentEditable}\n                    html={this.props.data.text}\n                    disabled={true}\n                    />}\n                </div>\n            </div>\n        )\n    }\n}\n\nCalendarCell.propTypes = {\n    moment: PropTypes.object\n}\n\nexport default CalendarCell","import React from 'react';\nimport moment from 'moment';\nimport './CalendarDays.css';\nimport CalendarCell from '../CalendarCell/CalendarCell';\nimport EntriesService from '../../../services/entries-service';\n\nclass CalendarDays extends React.Component {\n    state = {\n        activeDays: {},\n        days: [],\n        entries: [],\n        refresh: false,\n        offset: 0,\n    }\n    componentDidMount() {\n        const { currentMonth } = this.props\n\n        EntriesService.getEntriesByMonth(currentMonth)\n            .then(entries => {\n                let activeDays = {}\n                entries.forEach((entry, index) => {\n                    const day = moment(entry.date).format('DD')\n                    activeDays[day] = index\n                })\n\n                const days = this.renderCells(currentMonth, activeDays, entries)\n                this.setState({ entries, activeDays, days })\n            })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.currentMonth !== prevProps.currentMonth) {\n            EntriesService.getEntriesByMonth(this.props.currentMonth)\n                .then(entries => {\n                    let activeDays = {}\n                    entries.forEach((entry, index) => {\n                        const day = moment(entry.date).format('DD')\n                        activeDays[day] = index\n                    })\n                    const days = this.renderCells(this.props.currentMonth, activeDays, entries)\n                    this.setState({ entries, activeDays, days })\n                })\n        }\n    }\n    addCell(activeDays, entries, array, number) {\n        if (array) {\n            let type = array.length % 7 ? '' : 'left-cell'\n            type += this.state.days.length > 34 ? ' calendar-cell-long' : ''\n            let date = number > 9 ? '' + number : '0' + number\n            let index = number && activeDays[date]\n            let cell = ( number && Number.isInteger(index) ) \n                ? <CalendarCell \n                    data={entries[index]} \n                    openData={(data) => this.props.openData(data)} \n                    key={array.length} \n                    number={number} \n                    type={type} \n                    /> \n                : <CalendarCell \n                    openData={(data) => this.props.openData(data)} \n                    key={array.length} \n                    number={number} \n                    type={type} />\n            return cell \n        }\n    }\n    renderCells(currentMonth, activeDays, entries) {\n        const monthOffset = moment().month(currentMonth).startOf('month').day()\n        const monthLength = moment().month(currentMonth).daysInMonth()\n        let cells = []\n        // add in irrelevant month blocks\n        debugger\n        for (let i = 0; i < monthOffset; i++) {\n            cells.push(this.addCell(activeDays, entries, cells))\n        }\n        // we'll have a fetch request to query all entries with same month, then sort by date\n        // map each day data with calendarcell component\n        // fetch()\n        //     .then(monthData => monthData.forEach(day => days.push(<CalendarCell key={} date={day.date})))\n        for (let i = 1; i <= monthLength; i++) {\n            cells.push(this.addCell(activeDays, entries, cells, i))\n        }\n\n        if (cells.length % 7 !== 0) {\n            const length = cells.length\n            for (let i = 0; i < 7 - length % 7; i++) {\n                cells.push(this.addCell(activeDays, entries, cells))\n            }\n        }\n\n        return cells\n    }\n    render() {\n        let { days } = this.state\n        // if (days.length > 34) {\n        //     days = days.map(day => {\n        //         let type = day.length % 7 ? '' : 'left-cell'\n        //         let date = day.length > 9 ? '' + day.length : '0' + number\n        //         let index = day.length && activeDays[date]\n        //         let cell = day.length && Number.isInteger(index)\n        //             ? <CalendarCell \n        //                 data={entries[index]} \n        //                 openData={(data) => this.props.openData(data)} \n        //                 key={array.length} \n        //                 number={number} \n        //                 type={type} \n        //                 /> \n        //             : <CalendarCell \n        //                 openData={(data) => this.props.openData(data)} \n        //                 key={array.length} \n        //                 number={number} \n        //                 type={type} />\n        //         return cell\n        //     })\n        // }\n\n        return (\n            <div className='calendar-days'>\n                {days}\n            </div>\n        )\n    }\n}\n\nexport default CalendarDays;","import React from 'react';\nimport './CalendarView.css';\nimport EntryPage from '../../../routes/EntryPage/EntryPage';\n\nclass CalendarView extends React.Component {\n    render() {\n        return (\n            <div className='calendar-view'>\n                <EntryPage data={this.props.data} date={this.props.date} resetDate={() => this.props.resetData()} />\n            </div>\n        )\n    }\n}\n\nexport default CalendarView","import React from 'react';\nimport './Calendar.css';\nimport CalendarHeader from './CalendarHeader/CalendarHeader';\nimport CalendarDays from './CalendarDays/CalendarDays';\nimport CalendarView from './CalendarView/CalendarView';\n\nclass Calendar extends React.Component {\n    state = {\n        currentMonth: new Date().getMonth(),\n        selectedDate: new Date(),\n        data: null,\n        date: null,\n        entries: [],\n    }\n    nextMonth() {\n        const { currentMonth } = this.state\n        const newMonth = currentMonth >= 11 ? 0 : currentMonth + 1\n        this.setState({\n            currentMonth: newMonth,\n        })\n    }\n    prevMonth() {\n        const { currentMonth } = this.state\n        const newMonth = currentMonth <= 0 ? 11 : currentMonth - 1\n        this.setState({\n            currentMonth: newMonth,\n        })\n    }\n    resetData() {\n        console.log('reset')\n        this.setState({ data: null })\n    }\n    openData(data) {\n        this.setState({ data })\n    }\n    render() {\n        const { data, date, currentMonth } = this.state\n        if (data) {\n            return (\n                <CalendarView \n                    resetData={() => this.resetData()}\n                    data={data}\n                    date={date} />\n            )\n        } else {\n            return (\n                <div className='calendar'>\n                    <CalendarHeader \n                        currentMonth={currentMonth}\n                        nextMonth={() => this.nextMonth()}\n                        prevMonth={() => this.prevMonth()}\n                        />\n                    <div className='calendar-weekdays'>\n                        <div className='weekday'>\n                            Sunday\n                        </div>\n                        <div className='weekday'>\n                            Monday\n                        </div>\n                        <div className='weekday'>\n                            Tuesday\n                        </div>\n                        <div className='weekday'>\n                            Wednesday\n                        </div>\n                        <div className='weekday'>\n                            Thursday\n                        </div>\n                        <div className='weekday'>\n                            Friday\n                        </div>\n                        <div className='weekday'>\n                            Saturday\n                        </div>\n                    </div>\n                    <CalendarDays\n                        openData={(date) => this.openData(date)}\n                        currentMonth={currentMonth}\n                        />\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default Calendar;","import React from 'react';\nimport './CalendarPage.css';\nimport Calendar from '../../components/Calendar/Calendar';\n\nclass CalendarPage extends React.Component {\n    render() {\n        return (\n            <section className='calendar-page'>\n                <Calendar />\n            </section>\n        )\n    }\n}\n\nexport default CalendarPage;","import React from 'react';\n// import ReminderDate from './ReminderDate/ReminderDate';\n// import ReminderTime from './ReminderTime/ReminderTime';\nimport './Reminder.css';\n\nclass Reminder extends React.Component {\n    state={\n        modal: false,\n        reminder: { title: '', id: null },\n    }\n    componentDidMount() {\n        const { reminder } = this.props\n        if (reminder) {\n            this.setState({ reminder })\n        }\n    }\n    handleClick() {\n        const { modal } = this.state\n        this.setState({ modal: !modal })\n    }\n    render() {\n        const { reminder } = this.state\n        return (\n            <div \n                onClick={() => {\n                    this.props.activateReminder(reminder.id)\n                    this.props.toggleForm()\n                }}\n                className='reminder'\n                >\n                <div className='reminder-title'>\n                    { reminder.title }\n                </div>\n                <div className='reminder-details'>\n                    { 'reminder id: ' + reminder.id }\n                    { 'reminder '}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Reminder;","import React from 'react';\nimport './ReminderForm.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport RemindersService from '../../services/reminders-service';\n\nclass ReminderForm extends React.Component {\n    state = {\n        title: '',\n        error: null,\n        deleteReminderId: null,\n        reminderTitle: null,\n        \n    }\n    componentDidMount() {\n        const title= this.props || ''\n        const deleteReminderId = this.props.reminders[0] ? this.props.reminders[0].id : null\n        this.setState({ title, deleteReminderId })\n        \n    }\n    handleClick(event) {\n        event.preventDefault()\n        this.props.toggleForm()\n    }\n    createReminder = event => {\n        event.preventDefault()\n        const { title } = this.state\n        RemindersService.createReminder(title)\n            .then(res => this.setState({ reminders: res }))\n            .catch(res => this.setState({ error: res.error }))\n    }\n    deleteReminder = event => {\n        event.preventDefault()\n        const { deleteReminderId } = this.state\n        if (deleteReminderId) {\n            RemindersService.deleteReminder(deleteReminderId)\n                .then(res => this.setState({ reminders: res }))\n                .catch(res => this.setState({ error: res.error }))\n        }\n    }\n    updateDeleteReminder = (event) => {\n        this.setState({ deleteReminderId: event.target.value })\n    }\n    updateReminderTitle = event => {\n        this.setState({ title: event.target.value })\n    }\n    render() {\n        const { title, error, } = this.state\n        const { reminders } = this.props\n        const options = reminders ? reminders.map(reminder => {\n            return <option key={reminder.id} \n            value={reminder.id}>\n            {reminder.title}</option>\n        }) : ''\n        return (\n            <div className='reminder-form'>\n                <FontAwesomeIcon \n                    className='entry-back-arrow' \n                    onClick={() => this.props.returnPage()} \n                    icon={faArrowAltCircleLeft} />\n                <div className='reminder-settings'>\n                    <div className='new-reminder'>\n                        {error}\n                        <form\n                            onSubmit={this.createReminder}\n                            >\n                            <legend><h2>Add New Reminder</h2></legend>\n                            <label>Title</label>\n                            <input\n                                value={title} \n                                onChange={this.updateReminderTitle}\n                                />\n                            <button>Add Reminder</button>\n                        </form>\n                    </div>\n                    <div className='delete-reminder'>\n                        <form\n                            onSubmit={this.deleteReminder}\n                            >\n                            <legend><h2>Delete Reminder</h2></legend>\n                            <select\n                                onChange={this.updateDeleteReminder}\n                                >\n                                {options}\n                            </select>\n                            <button>Delete</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ReminderForm;","import React from 'react';\nimport propTypes from 'prop-types';\nimport './BaseBlock.css';\nimport BlockMap from './BlockMap';\n\n// Prototype for different Blocks\n// also where we figure out size (TODO)\nclass BaseBlock extends React.Component {\n    state = {\n        size: null,\n    }\n    componentDidMount() {\n        const { dimension } = this.props\n        this.setState({ size: dimension })\n    }\n    render() {\n        const { block } = this.props\n        const Block = BlockMap(block.type, block.value)\n        return (\n            <div className='Base-Block'>\n                {Block}\n            </div>\n        )\n    }\n}\n\nBaseBlock.defaultProps = {\n    value: propTypes.object\n}\n\nexport default BaseBlock;","import React from 'react';\nimport styled from 'styled-components';\nimport BaseBlock from '../../components/ToolBox/Blocks/BaseBlock/BaseBlock';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst sequence = []\n\nconst Item = styled.div`\n    display: flex;\n    user-select: none;\n    padding: 0.5rem;\n    margin: 0 0 0.5rem 0;\n    align-items: flex-start;\n    align-content: flex-start;\n    line-height: 1.5;\n    border-radius: 3px;\n    background: #fff;\n    border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\n`;\n\nconst Notice = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0 0.5rem 0.5rem;\n    border: 1px solid transparent;\n    line-height: 1.5;\n    color: #aaa;\n`;\n\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n\nconst List = styled.div`\n    border: 1px\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\n\nconst Container = styled(List)`\n    margin: 0.5rem 0.5rem 1.5rem;\n`;\n\nclass Sequence extends React.Component {\n    state = {\n        sequence: []\n    }\n    componentDidMount() {\n        // fetch sequence and store in state\n        this.setState({ sequence })\n    }\n    render() {\n        const { provided, snapshot, list } = this.props\n        return (\n            <Container\n                className='block-saved-list'\n                ref={provided.innerRef}\n                isDraggingOver={snapshot.isDraggingOver}>\n                {list && list.length\n                    ? list.map(\n                        (item, index) => (\n                            <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}>\n                                {(provided, snapshot) => (\n                                    <Item\n                                        className='block-container-saved'\n                                        ref={\n                                            provided.innerRef\n                                        }\n                                        {...provided.draggableProps}\n                                        isDragging={\n                                            snapshot.isDragging\n                                        }\n                                        style={\n                                            provided\n                                                .draggableProps\n                                                .style\n                                        }>\n                                        <Handle\n                                            {...provided.dragHandleProps}>\n                                            <svg\n                                                width=\"24\"\n                                                height=\"24\"\n                                                viewBox=\"0 0 24 24\">\n                                                <path\n                                                    fill=\"currentColor\"\n                                                    d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                />\n                                            </svg>\n                                        </Handle>\n                                        <BaseBlock block={item} />\n                                    </Item>\n                                )}\n                            </Draggable>\n                        )\n                    )\n                    : !provided.placeholder && (\n                        <Notice>Drop items here</Notice>\n                    )}\n                {provided.placeholder}\n            </Container>\n        )\n    }\n}\n\nexport default Sequence;","import React, { Component } from 'react';\nimport uuid from 'uuid/v4';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './BlocksPage.css';\nimport BlocksService from '../../services/blocks-service';\nimport Title from '../../components/ToolBox/Blocks/Title/Title';\nimport BaseBlock from '../../components/ToolBox/Blocks/BaseBlock/BaseBlock';\nimport Sequence from './Sequence';\nimport Trash from '../../components/ToolBox/Blocks/Trash/Trash';\n\nconst Content = styled.div`\n    width: calc(100% - 250px);\n`;\n\nconst List = styled.div`\n    border: 1px\n        ${props => (props.isDraggingOver ? 'dashed #000' : 'solid #ddd')};\n    background: #fff;\n    padding: 0.5rem 0.5rem 0;\n    border-radius: 3px;\n    flex: 0 0 150px;\n    font-family: sans-serif;\n`;\n\nconst Kiosk = styled(List)`\n    box-sizing: border-box;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 250px;\n`;\n\nconst Item = styled.div`\n    display: flex;\n    user-select: none;\n    padding: 0.5rem;\n    margin: 0 0 0.5rem 0;\n    align-items: flex-start;\n    align-content: flex-start;\n    line-height: 1.5;\n    border-radius: 3px;\n    background: #fff;\n    border: 1px ${props => (props.isDragging ? 'dashed #000' : 'solid #ddd')};\n`;\n\nconst Handle = styled.div`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    user-select: none;\n    margin: -0.5rem 0.5rem -0.5rem -0.5rem;\n    padding: 0.5rem;\n    line-height: 1.5;\n    border-radius: 3px 0 0 3px;\n    background: #fff;\n    border-right: 1px solid #ddd;\n    color: #000;\n`;\n\nconst Button = styled.button`\n    display: flex;\n    align-items: center;\n    align-content: center;\n    justify-content: center;\n    margin: 0.5rem;\n    padding: 0.5rem;\n    color: #000;\n    border: 1px solid #ddd;\n    background: #fff;\n    border-radius: 3px;\n    font-size: 1rem;\n    cursor: pointer;\n`;\n\nconst ButtonText = styled.div`\n    margin: 0 1rem;\n`;\n\n// // ITEMS holds all the sidebar template blocks on the right\nconst SIDEBAR_ITEMS = [\n    {\n        id: uuid(),\n        type: 'title'\n    },\n    {\n        id: uuid(),\n        type: 'count',\n    },\n    {\n        id: uuid(),\n        type: 'notes',\n    },\n    {\n        id: uuid(),\n        type: 'text',\n    },\n    {\n        id: uuid(),\n        type: 'checklist'\n    },\n    {\n        id: uuid(),\n        type: 'weekly',\n    },\n    {\n        id: uuid(),\n        type: 'countdown',\n    },\n    {\n        id: uuid(),\n        type: 'date',\n    },\n];\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    console.log(list, startIndex, endIndex)\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    if (endIndex < 0) {\n        return result\n    }\n    result.splice(endIndex, 0, removed);\n    \n    return result;\n};\n/**\n * Moves an item from one list to another list.\n */\nconst copy = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const item = sourceClone[droppableSource.index];\n\n    destClone.splice(droppableDestination.index, 0, { ...item, id: uuid() });\n    return destClone;\n};\n\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nclass BlocksPage extends Component {\n    state = {\n        columns: {\n            blocks: [],\n            trash: [],\n        },\n        originalSequence: [],\n        error: null,\n        type: null,\n        id: null,\n        goal: null,\n        reminder: null,\n    };\n    componentDidMount() {\n        // Determines if block form is goal or reminder\n        // then it fetches <Block /> components based on blockId\n        const columns = {}\n        const { goal, reminder } = this.props\n        \n        if (goal) {\n            const blockSeq = goal.block_sequence ? goal.block_sequence : []\n            console.log('BLOCK SEQUENCE ', blockSeq)\n            BlocksService.getBlocksByIds(blockSeq)\n                .then(blocks => {\n                    columns.blocks = blocks\n                    this.setState({ \n                        columns, \n                        id: goal.id,\n                        originalSequence: blocks, \n                        type: 'goal' \n                    })\n                })\n                .catch(err => this.setState({ error: err.error }))\n        }\n\n        if (reminder) {\n            const blockSeq = reminder.block_sequence ? reminder.block_sequence : []\n            BlocksService.getBlocksByIds(blockSeq)\n                .then(blocks => {\n                    columns.blocks = blocks\n                    this.setState({ \n                        columns, \n                        id: reminder.id,\n                        originalSequence: blocks, \n                        type: 'reminder' \n                    })\n                })\n                .catch(err => this.setState({ error: err.error }))\n        }\n        this.setState({ type: 'goal'})\n    }\n    async componentWillUnmount() {\n        const { columns, id, originalSequence, type } = this.state\n        if (JSON.stringify(originalSequence) !== JSON.stringify(columns.blocks)) {\n            let newBlocks = []\n            columns.blocks.forEach((block, index) => {\n                if (!Number.isInteger(block.id)) {\n                    let goalId = type === 'goal' ? id : null\n                    let reminderId = type === 'reminder' ? id : null\n                    let dimension = 'col-12'\n                    let value = block.value ? block.value : {}\n                    \n                    let newBlock = BlocksService.createBlock(block.type, value, dimension, goalId, reminderId)\n                        .then(res => res)\n                        .catch(res => this.setState({ error: res.error || res.message }))\n                    newBlocks.push(newBlock)\n                } else {\n                    debugger\n                    let newBlock = BlocksService.updateBlock(block.id, block.value)\n                        .then(res => res)\n                        .catch(res => this.setState({ error: res.error || res.message }))\n                    newBlocks.push(newBlock)\n                }\n                debugger\n            })\n            // BlocksService.updateBlockSequence(columns.blocks, type, id)\n            //     .then(updatedBlocks => {\n            //         if (type === 'goal') {\n            //             this.setState({ goal: updatedBlocks })\n            //         } else if (type === 'reminder') {\n            //             this.setState({ reminder: updatedBlocks })\n            //         }\n            //     })\n            //     .catch(res => this.setState({ error: res.error || res.message }))\n        }\n    }\n    onDragEnd = result => {\n        const { source, destination } = result;\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n        switch (source.droppableId) {\n            // this is for reordering within an array\n            // if source matches destination\n            case destination.droppableId:\n                this.setState({\n                    columns: {\n                        blocks: reorder(\n                        this.state.columns.blocks,\n                        source.index,\n                        destination.index\n                    )}\n                });\n                break;\n            // in case the Tile comes from sidebar \n            // if destination is trash, we ignore\n            // if destination is main block, we update blocks with copy\n            case 'ITEMS':\n                if (destination.droppableId !== 69) {\n                    this.setState({\n                        columns: {\n                            blocks: copy(\n                            SIDEBAR_ITEMS,\n                            this.state.columns.blocks,\n                            source,\n                            destination\n                        )}\n                    });\n                }\n                break;\n            case 'active-blocks':\n                console.log('main blocks dont cry')\n                if (destination.droppableId === 69) {\n                    const blocks = this.state.columns.blocks.filter( (block, index) => index !== source.index )\n                    this.setState({ columns: { blocks } })\n                }\n                break;\n            default:\n                this.setState(\n                    move(\n                        this.state.columns[source.droppableId],\n                        this.state.columns[destination.droppableId],\n                        source,\n                        destination\n                    )\n                );\n                break;\n        }\n    };\n\n    addList = e => {\n        this.setState({ [uuid()]: [] });\n    };\n\n    // Normally you would want to split things out into separate components.\n    // But in this example everything is just done in one place for simplicity\n    render() {\n        const activeBlocks = (\n            <Droppable key={96} droppableId='active-blocks'>\n                {(provided, snapshot) => <Sequence provided={provided} snapshot={snapshot} list={this.state.columns.blocks} />}\n            </Droppable>\n        )\n        const trashBar = (\n            <Droppable key={69} droppableId={69}>\n                {(provided, snapshot) => <Trash provided={provided} snapshot={snapshot} list={[]} />}\n            </Droppable>\n        )\n        let title = 'Title'\n\n        if (this.props.goal) {\n            title = this.props.goal.title\n        } else if (this.props.reminder) {\n            title = this.props.reminder.title\n        }\n        \n        return (\n            <section className='blocks-page'>\n                {this.state.error}\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <Droppable droppableId=\"ITEMS\" isDropDisabled={true}>\n                        {(provided, snapshot) => (\n                            <Kiosk\n                                className='toolbox-list'\n                                ref={provided.innerRef}\n                                isDraggingOver={snapshot.isDraggingOver}>\n                                {SIDEBAR_ITEMS.map((item, index) => (\n                                    <Draggable\n                                        key={item.id}\n                                        draggableId={item.id}\n                                        index={index}>\n                                        {(provided, snapshot) => (\n                                            <Item\n                                                className='block-container-saved'\n                                                ref={\n                                                    provided.innerRef\n                                                }\n                                                {...provided.draggableProps}\n                                                isDragging={\n                                                    snapshot.isDragging\n                                                }\n                                                style={\n                                                    provided\n                                                        .draggableProps\n                                                        .style\n                                                }>\n                                                <Handle\n                                                    {...provided.dragHandleProps}>\n                                                    <svg\n                                                        width=\"24\"\n                                                        height=\"24\"\n                                                        viewBox=\"0 0 24 24\">\n                                                        <path\n                                                            fill=\"currentColor\"\n                                                            d=\"M3,15H21V13H3V15M3,19H21V17H3V19M3,11H21V9H3V11M3,5V7H21V5H3Z\"\n                                                        />\n                                                    </svg>\n                                                </Handle>\n                                                <BaseBlock block={({ type: item.type, value: {value: null} })} />\n                                            </Item>\n                                        )}\n                                    </Draggable>\n                                ))}\n                            </Kiosk>\n                        )}\n                    </Droppable>\n                    <Content className='blocks-main'>\n                        <div className='blocks-page-header'>\n                            <Button onClick={() => this.props.toggleForm()} >\n                                <FontAwesomeIcon \n                                    className='reminder-toggle' \n                                    icon={faArrowAltCircleLeft} />\n                                <ButtonText>Return</ButtonText>\n                            </Button>\n                            <Title value={({ title })} />\n                        </div>\n                        <div className='blocks-saved'>\n                            {activeBlocks}\n                            {trashBar}\n                        </div>\n                        \n                    </Content>\n                </DragDropContext>\n            </section>\n            \n        );\n    }\n}\n\nexport default BlocksPage","import React from 'react';\nimport Reminder from '../../components/Reminder/Reminder';\nimport ReminderForm from '../../components/ReminderForm/ReminderForm';\nimport RemindersService from '../../services/reminders-service';\nimport './ReminderPage.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools } from '@fortawesome/free-solid-svg-icons';\nimport BlocksPage from '../BlocksPage/BlocksPage';\n\nclass RemindersPage extends React.Component {\n    state = {\n        activeReminder: null,\n        unscheduledReminders: [],\n        upcomingReminders: [],\n        recurringReminders: [],\n        formActive: false,\n        settingsActive: false,\n        newUser: false,\n        loading: true,\n    }\n    componentDidMount() {\n        RemindersService.getReminders() \n            .then(reminders => {\n                let recurringReminders = reminders.filter(reminder => reminder.schedule && reminder.schedule.schedule)\n                let upcomingReminders = reminders.filter(reminder => reminder.schedule && reminder.schedule.date)\n                let unscheduledReminders = reminders.filter(reminder => !!!reminder.schedule)\n                let newUser = reminders.length === 0\n                this.setState({ reminders, recurringReminders, unscheduledReminders, upcomingReminders, newUser, loading: false })\n            })\n            .catch(res => this.setState({ error: res.error, loading: false }))\n    }\n    toggleForm() {\n        const { formActive } = this.state\n        this.setState({\n            formActive: !formActive\n        })\n    }\n    toggleSettings() {\n        const { settingsActive } = this.state\n        this.setState({\n            settingsActive: !settingsActive\n        })\n    }\n    activateForm(reminderId) {\n        const { upcomingReminders, recurringReminders, unscheduledReminders } = this.state\n        const activeReminder = [...upcomingReminders, ...unscheduledReminders, ...recurringReminders]\n            .find(reminder => reminder.id === reminderId)\n        this.setState({ activeReminder })\n    }\n    render() {\n        const { loading, newUser, formActive, activeReminder, recurringReminders, settingsActive,  unscheduledReminders, upcomingReminders} = this.state\n        if (formActive) {\n            return (\n                <section className='reminders-page'>\n                    <BlocksPage \n                        reminder={activeReminder}\n                        blockSequence={activeReminder.block_sequence}  \n                        toggleForm={() => this.toggleForm()} />\n                </section>\n            )\n        }\n\n        if (loading) {\n            return (\n                <section className='reminders-page'>\n                    <div className='reminders-newbie'>\n                        Please sir be patient I am loading \n                    </div>\n                </section>\n            )\n        }\n        \n        if (settingsActive) {\n            return (\n                <section className='reminders-page'>\n                    <ReminderForm reminders={[...recurringReminders, ...upcomingReminders, ...unscheduledReminders]} returnPage={() => this.toggleSettings()} />\n                </section>\n            )\n        }\n\n        let recurringReminderComponents = recurringReminders.map((reminder) => {\n            return <Reminder \n                        title={reminder.title}\n                        activateReminder={(id) => this.activateForm(id)}\n                        reminder={reminder} \n                        key={reminder.id} \n                        schedule={reminder.schedule}\n                        toggleForm={() => this.toggleForm()} />\n        })\n        let upcomingReminderComponents = upcomingReminders.map((reminder) => {\n            return <Reminder \n                        title={reminder.title}\n                        activateReminder={(id) => this.activateForm(id)}\n                        reminder={reminder} \n                        key={reminder.id} \n                        schedule={reminder.schedule}\n                        toggleForm={() => this.toggleForm()} />\n        })\n        let unscheduledReminderComponents = unscheduledReminders.map((reminder) => {\n            return <Reminder \n                        title={reminder.title}\n                        activateReminder={(id) => this.activateForm(id)}\n                        reminder={reminder} \n                        key={reminder.id} \n                        schedule={reminder.schedule}\n                        toggleForm={() => this.toggleForm()} /> \n        })\n        let reminderView = newUser ? \n            (<div className='reminders-newbie'>\n                <p>\n                    Hey there, user!\n                    <br />\n                    Feel free to add a reminder below\n                </p>\n                <p>\n                    You can keep track of it in your journal.\n                </p>\n                <div className='settings-arrow'>\n                    &#8595;\n                </div>\n            </div>)\n            :\n            (<div className='reminders-list'>\n                <div className='reminder-header'>\n                    <h2>Upcoming</h2>\n                </div>\n                {upcomingReminderComponents}\n                <div className='reminder-header'>\n                    <h2>Recurring</h2>\n                </div>\n                {recurringReminderComponents}\n                <div className='reminder-header'>\n                    <h2>Unscheduled</h2>\n                </div>\n                {unscheduledReminderComponents}\n            </div>)\n            \n        \n        return (\n            <section className='reminders-page'>\n                {reminderView}\n                <button\n                    className='add-reminder'\n                    onClick={() => this.toggleSettings()}\n                    >\n                    <FontAwesomeIcon icon={faTools} />\n                </button>\n            </section>\n        )\n    }\n}\n\nexport default RemindersPage;","import config from '../config'\nimport TokenService from './token-service';\n\nconst ActionsService = {\n    deleteAction(actionId) {\n        return fetch(`${config.API_ENDPOINT}/actions/${actionId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n    getActions() {\n        return fetch(`${config.API_ENDPOINT}/actions`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    createAction(title) {\n        return fetch(`${config.API_ENDPOINT}/actions`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({title})\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    postGoal(goal) {\n        return fetch(`${config.API_ENDPOINT}/goals`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(goal)\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getGoalById(id) {\n        return fetch(`${config.API_ENDPOINT}/goals/${id}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    deleteGoal(goalId) {\n        return fetch(`${config.API_ENDPOINT}/goals/${goalId}`, {\n            method: 'DELETE',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            }\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    }\n}\n\nexport default ActionsService","import React from 'react';\nimport './Goal.css';\nimport moment from 'moment';\n\nclass Goal extends React.Component {\n    state={\n        modal: false,\n        goal: {},\n    }\n    componentDidMount() {\n        const { goal } = this.props\n        if (goal) {\n            this.setState({ goal })\n        }\n    }\n    handleClick() {\n        const { modal } = this.state\n        this.setState({ modal: !modal })\n    }\n    render() {\n        const { goal } = this.state\n        return (\n            <div \n                onClick={() => {\n                    this.props.activateForm(goal.id)\n                    this.props.toggleForm()\n                }}\n                className='goal'\n                >\n                <div className='goal-title'>\n                    { goal.title }\n                </div>\n                <div className='goal-details'>\n                    {/* { 'goal id: ' + goal.id }\n                    { 'action id: ' + goal.action_id } */}\n                    { `Last Logged: ${moment(goal.last_logged).format('MM-DD-YY')}`}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Goal;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport './GoalForm.css';\nimport ActionsService from '../../services/actions-service';\nimport GoalsService from '../../services/goals-service';\n\nclass GoalForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            actionTitle: '',\n            deleteActionTitle: '',\n            goalTitle: '',\n            deleteGoalTitle: '',\n            actionId: null,\n            error: null,\n            success: false,\n        }\n    }\n    componentDidMount() {\n        let actionTitle = this.props.actions[0] ? this.props.actions[0].title : ''\n        this.setState({ actionTitle })\n    }\n    createAction(event) {\n        const { actionTitle } = this.state\n        event.preventDefault()\n        ActionsService.createAction(actionTitle)\n            .then(res => {\n                this.setState({ reload: true })\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    createGoal(event) {\n        event.preventDefault()\n        const { goalTitle, actionId } = this.state\n        if (!actionId) {\n            return this.setState({ error: 'Must specify goal category first'})\n        }\n        GoalsService.createGoal(goalTitle, actionId)\n            .then(res => {\n                this.setState({ reload: true })\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    updateActionTitle = event => {\n        this.setState({ actionTitle: event.target.value })\n    }\n    updateDeleteAction = event => {\n        this.setState({ deleteActionTitle: event.target.value })\n    }\n    updateGoalTitle = event => {\n        this.setState({ goalTitle: event.target.value })\n    }\n    updateDeleteGoal = event => {\n        this.setState({ deleteGoalTitle: event.target.value })\n    }\n    deleteAction = event => {\n        const { deleteActionTitle } = this.state\n        ActionsService.deleteAction(deleteActionTitle)\n            .then(res => this.setState({ actions: res.actions }))\n            .catch(res => this.setState({ error: res.error }))\n    }\n    deleteGoal = event => {\n        const { deleteGoalTitle } = this.state\n        GoalsService.deleteGoal(deleteGoalTitle)\n            .then(res => this.setState({ goals: res.goals }))\n            .catch(res => this.setState({ error: res.error }))\n    }\n    render() {\n        const { error } = this.state\n        const { actions, goals } = this.props\n        const options = [ {title: '--Choose a goal category', value: null }, ...actions].map((action, index) => <option \n                key={index} \n                value={action.id}>\n                {action.title}\n                </option>)\n        const goalOptions = goals.map(goal => <option\n            key={goal.id} \n            value={goal.id}>\n            {goal.title}\n            </option>)\n        return (\n            <div className='goal-form'>\n                <FontAwesomeIcon \n                    className='entry-back-arrow' \n                    onClick={() => this.props.addGoal()} \n                    icon={faArrowAltCircleLeft} />\n                <div className='goal-settings'>\n                    <div className='new-goal'>\n                        {error}\n                        <form\n                            onSubmit={(e) => this.createAction(e)}\n                            >\n                            <legend><h2>Add New Goal Category</h2></legend>\n                            <label>Title</label>\n                            <input \n                                onChange={this.updateActionTitle}\n                                />\n                            <button>Add Category</button>\n                        </form>\n                        <form\n                            onSubmit={(e) => this.createGoal(e)}\n                            >\n                            <legend><h2>Add New Goal</h2></legend>\n                            <label>Category Type:</label>\n                            <select\n                                onChange={(event) => this.setState({ actionId: event.target.value })}\n                                >\n                                {options}\n                            </select>\n                            <br/>\n                            <label>Title</label>\n                            <input onChange={this.updateGoalTitle} />\n                            <button>Add Goal</button>\n                        </form>\n                    </div>\n                    <div className='delete-goal'>\n                        <form\n                            onSubmit={(e) => this.deleteAction(e)}\n                            >\n                            <legend><h2>Delete Goal Category</h2></legend>\n                            <select\n                                onChange={this.updateDeleteAction}\n                                >\n                                {options}\n                            </select>\n                            <button>Delete</button>\n                        </form>\n                        <form\n                            onSubmit={(e) => this.deleteGoal(e)}\n                            >\n                            <legend><h2>Delete Goal</h2></legend>\n                                <select\n                                    onChange={this.updateDeleteGoal}\n                                    >\n                                    {goalOptions}\n                                </select>\n                            <button>Delete</button>\n                        </form>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n    \n}\n\nexport default GoalForm;","import React from 'react';\nimport './ActionsPage.css';\nimport BlocksPage from '../BlocksPage/BlocksPage';\nimport ActionsService from '../../services/actions-service';\nimport GoalsService from '../../services/goals-service';\nimport Goal from '../../components/Goal/Goal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTools } from '@fortawesome/free-solid-svg-icons';\nimport GoalForm from '../../components/GoalForm/GoalForm';\n\nclass ActionsPage extends React.Component {\n    state = {\n        activeGoal: null,\n        newGoal: false,\n        actions: [],\n        goals: [],\n        formActive: false,\n        error: false,\n        loading: false,\n    }\n    componentDidMount() {\n        ActionsService.getActions()\n            .then(actions => {\n                this.setState({ actions })\n                GoalsService.getGoals()\n                    .then(goals => this.setState({ goals }))\n            })\n            .catch(res => this.setState({ error: res.error }))\n    }\n    activateForm(goalId) {\n        const { goals } = this.state\n        const activeGoal = goals.find(goal => goal.id === goalId)\n        this.setState({ activeGoal })\n    }\n    toggleForm() {\n        const { formActive } = this.state\n        this.setState({\n            formActive: !formActive\n        })\n    }\n    addGoal() {\n        const { newGoal } = this.state\n        this.setState({ newGoal: !newGoal })\n    }\n    render() {\n        const { activeGoal, formActive, actions, goals, newGoal } = this.state\n        if (formActive) {\n            return (\n                <section className='actions-page'>\n                    <BlocksPage \n                        goal={activeGoal}\n                        blockSequence={activeGoal.block_sequence}  \n                        toggleForm={() => this.toggleForm()} />\n                </section>\n            )\n        }\n\n        if (newGoal) {\n            return <GoalForm actions={actions} goals={goals} addGoal={() => this.addGoal()} />\n        }\n\n        let actionList = actions.map(action => {\n            const goalList = goals.filter(goal => goal.action_id === action.id).map(\n                goal => <div \n                        key={goal.id}\n                        className='goal-container'>\n                        <Goal \n                            goal={goal} \n                            activateForm={(id) => this.activateForm(id)} \n                            toggleForm={() => this.toggleForm()} />\n                    </div> \n            )\n            return (\n                <div \n                    key={action.id}\n                    className='action'>\n                    <div className='action-header'>\n                        <h2>{action.title}</h2>\n                    </div>\n                    {goalList}\n                </div>\n                )\n            })\n\n        const newbie = actions.length === 0 &&\n        <div className='actions-newbie'>\n            <p>\n                Hey there, user!\n                <br/>\n                Feel free to add a goal below.\n            </p>\n            <p>\n                You can keep track of it in your journal. \n            </p>\n            <div className='settings-arrow'>\n                &#8595;\n            </div>\n        </div>\n        return (\n            <section className='reminders-page'>\n                <div className='actions'>\n                    {actionList}\n                </div>\n                {newbie}\n                <button\n                    className='add-reminder'\n                    onClick={() => this.addGoal()}\n                    >\n                    <FontAwesomeIcon icon={faTools} />\n                </button>\n            </section>\n        )\n    }\n}\n\nexport default ActionsPage;","import React from 'react';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport MissingPage from '../../routes/MissingPage/MissingPage';\nimport './User.css'\nimport HomePage from '../../routes/HomePage/HomePage';\nimport SideBar from '../../components/SideBar/SideBar';\nimport CalendarPage from '../../routes/CalendarPage/CalendarPage';\nimport RemindersPage from '../../routes/RemindersPage/RemindersPage';\nimport ActionsPage from '../../routes/ActionsPage/ActionsPage';\nimport BlocksPage from '../../routes/BlocksPage/BlocksPage';\nimport LogView from '../../routes/LogView/LogView';\n\nclass User extends React.Component {\n    state = {\n        view: 'Home'\n    }\n    updateView = (view) => {\n        this.setState({ view })\n    }\n    render() {\n        return (\n            <section className='user view'>\n                <SideBar logout={() => this.props.logout()}/>\n                <main>\n                    <Switch>\n                        <Route exact path='/' \n                            component={HomePage} />\n                        <Route path='/login' render={() => <Redirect to='/'/>} />\n                        <Route path='/calendar'\n                            component={CalendarPage} />\n                        <Route path='/actions'\n                            component={ActionsPage} />\n                        <Route path='/reminders'\n                            component={RemindersPage} />\n                        <Route path='/blocks'\n                            component={BlocksPage} />\n                        <Route path='/logs/:logdate'\n                            component={LogView} />\n                        <Route component={MissingPage} />\n                    </Switch>\n                </main>\n            </section>\n            \n        )\n    }\n}\n\nexport default User;","import React from 'react';\nimport './LandingPage.css';\nimport { Link } from 'react-router-dom';\n\nclass LandingPage extends React.Component {\n    render() {\n        return (\n            <section className='landing-page'>\n                <div className='landing-desc'>\n                    <p>Goala is a personal journal with goal and reminder tracking.</p>\n                    <p>Keep track of your life while writing your narrative.</p>\n                </div>\n                <Link to='/demo' className='demo-button'>\n                    Demo Journal\n                </Link>\n            </section>\n        )\n    }\n}\n\nexport default LandingPage;","import config from '../config'\n\nconst AuthApiService = {\n    postLogin({ username, password }) {\n        return fetch(`${config.API_ENDPOINT}/auth`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({ username, password })\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    postUser(user) {\n        return fetch(`${config.API_ENDPOINT}/users`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    }\n}\n\nexport default AuthApiService","import React, { Component } from 'react'\nimport AuthApiService from '../../services/auth-api-service';\nimport TokenService from '../../services/token-service';\nimport './LoginForm.css';\n\nclass LoginForm extends Component {\n  static defaultProps = {\n    onLoginSuccess: () => {}\n  }\n\n  state = { error: null }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    this.setState({ error: null })\n    const { username, password } = event.target\n    \n    AuthApiService.postLogin({\n      username: username.value,\n      password: password.value\n    })\n      .then(res => {\n        username.value = ''\n        password.value = ''\n        TokenService.saveAuthToken(res.authToken)\n        this.props.onLoginSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.message })\n      })\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form\n        className='LoginForm'\n        autoComplete='off'\n        onSubmit={e => this.handleSubmit(e)}\n      >\n        <div role='alert'>\n          {error && <p className='red'>{error}</p>}\n        </div>\n        <div className='user_name'>\n          <label htmlFor='LoginForm__user_name'>\n            User name\n          </label>\n          <input\n            required\n            name='username'\n            placeholder='username'\n            id='LoginForm__user_name'/>\n        </div>\n        <div className='password'>\n          <label htmlFor='LoginForm__password'>\n            Password\n          </label>\n          <input\n            required\n            name='password'\n            type='password'\n            placeholder='password'\n            id='LoginForm__password'/>\n        </div>\n        <button type='submit'>\n          Login\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react'\nimport LoginForm from '../../components/LoginForm/LoginForm'\n\nexport default class LoginPage extends Component {\n  static defaultProps = {\n    location: {},\n    history: {\n      push: () => {},\n    },\n  }\n  state = {\n    login: false\n  }\n  handleLoginSuccess = () => {\n\n    this.props.login()\n  }\n\n  render() {\n    return (\n      <section className='LoginPage'>\n        <h2>Login</h2>\n        <LoginForm\n          onLoginSuccess={this.handleLoginSuccess}\n        />\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport AuthApiService from '../../services/auth-api-service';\nimport './RegistrationForm.css';\n\nclass RegistrationForm extends Component {\n  static defaultProps = {\n    onRegistrationSuccess: () => {}\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const { name, username, password } = event.target\n    \n    this.setState({ error: null })\n\n    AuthApiService.postUser({\n      username: username.value,\n      name: name.value,\n      password: password.value\n    })\n      .then(user => {\n        name.value = ''\n        password.value = ''\n        username.value = ''\n        this.props.onRegistrationSuccess()\n      })\n      .catch(res => {\n        this.setState({ error: res.error })\n      })\n  }\n\n  render() {\n    const { error } = this.state\n    return (\n      <form\n        className='RegistrationForm'\n        onSubmit={(event) => this.handleSubmit(event)}\n      >\n        <div role='alert'>\n          {error && <p className='red'>{error}</p>}\n        </div>\n        <div className='reg-name'>\n          <label htmlFor='registration-name'>\n            Name\n          </label>\n          <input\n            name='name'\n            type='text'\n            required\n            id='registration-name'>\n          </input>\n        </div>\n        <div className='reg-username'>\n          <label htmlFor='registration-username'>\n            Username\n          </label>\n          <input\n            name='username'\n            type='text'\n            required\n            id='registration-username'>\n          </input>\n        </div>\n        <div className='reg-password'>\n          <label htmlFor='registration-password'>\n            Password\n          </label>\n          <input\n            name='password'\n            type='password'\n            required\n            id='registration-password'>\n          </input>\n        </div>\n        <button type='submit'>\n          Register\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default RegistrationForm;","import React, { Component } from 'react'\nimport RegistrationForm from '../../components/RegistrationForm/RegistrationForm'\n\nclass RegistrationPage extends Component {\n  static defaultProps = {\n    history: {\n      push: () => {},\n    },\n  }\n\n  handleRegistrationSuccess = user => {\n    const { history } = this.props\n    history.push('/login')\n  }\n\n  render() {\n    return (\n      <section className='RegistrationPage'>\n        <h2>Register</h2>\n        <RegistrationForm\n          onRegistrationSuccess={this.handleRegistrationSuccess}\n        />\n      </section>\n    )\n  }\n}\n\nexport default RegistrationPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CheckList from '../../components/ToolBox/Blocks/CheckList/CheckList';\nimport Date from '../../components/ToolBox/Blocks/Date/Date';\nimport Text from '../../components/ToolBox/Blocks/Text/Text';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport Clock from '../../components/ToolBox/Blocks/Clock/Clock';\n\nclass DemoBike extends React.Component {\n    render() {\n        return (\n            <section className='demo-entry-log demo-bike'>\n                <Link to='/demo'>\n                    <FontAwesomeIcon \n                        className='entry-back-arrow' \n                        icon={faArrowCircleLeft} />\n                </Link>\n                <div className='demo-entry-log-body'>\n                    <Date />\n                    <Text value={({ text: 'Go to Cedar Rock Trail' })}/>\n                    <Clock value={({ time: 832 })} />\n                    <CheckList value={({ checked: true, text: 'ride 3 miles' })} />\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default DemoBike","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport Date from '../../components/Card/Date/Date';\nimport ContentEditable from 'react-contenteditable';\nimport EntryStamp from '../../components/EntryBar/EntryStamp/EntryStamp';\n\nclass DemoEntry extends React.Component {\n    render() {\n        const text = \"What a great day. I went <a href=\\\"/demo/bike\\\" contenteditable=\\\"false\\\" class=\\\"text-stamp-container\\\"> <button class=\\\"entry-text-stamp\\\"> bike riding </button><div class=\\\"stamp-hidden\\\">Hide me</div> </a><div>in the mountains. It was great getting some fresh air and pumping them legs.</div><div><br></div><div>Afterwards, I picked up some <a href=\\\"demo/groceries\\\" contenteditable=\\\"false\\\" class=\\\"text-stamp-container\\\"> <button class=\\\"entry-text-stamp\\\"> groceries </button><div class=\\\"stamp-hidden\\\">Hide me</div> </a> and while I was there, </div><div>I went to the blood bank nearby to <a href=\\\"demo/blood\\\" contenteditable=\\\"false\\\" class=\\\"text-stamp-container\\\"> <button class=\\\"entry-text-stamp\\\"> donate blood </button><div class=\\\"stamp-hidden\\\">Hide me</div> </a>.</div><br></div>Well, it's currently nighttime, and I'm <a href=\\\"demo/reading\\\" contenteditable=\\\"false\\\" class=\\\"text-stamp-container\\\"> <button class=\\\"entry-text-stamp\\\"> reading </button><div class=\\\"stamp-hidden\\\">Hide me</div> </a>, trying to get to bed. Goodnight.\"    \n        const goals = ['eating healthy', 'bike riding', 'reading'].map((goal, index) => <EntryStamp addTile={() => {}} key={index} title={goal} />)\n        const reminders = ['groceries','donate blood'].map((goal, index) => <EntryStamp addTile={() => {}} key={index} title={goal} />)\n        return (\n            <div className='demo-entry'>\n                <Link to='/'>\n                    <FontAwesomeIcon \n                        className='entry-back-arrow' \n                        icon={faArrowCircleLeft} />\n                </Link>\n                <div className='demo-entry-body'>\n                    <div className='entry-header'>\n                        <Date date={new Date()} />\n                        <input\n                            className='entry-title'\n                            readOnly\n                            value={'A Day Well Spent'} />\n                    </div>\n                    <ContentEditable\n                        className='entry-text'\n                        innerRef={this.ContentEditable}\n                        html={text}\n                        disabled={false}\n                        />\n                </div>   \n                <div className='demo-entry-bar'>\n                    <div className='entry-bar-section entry-bar-goals'>\n                        <h4>Goals</h4>\n                        <div className='entry-tiles'>\n                            {goals}\n                        </div>\n                    </div>\n                    <span className='entry-bar-split' />\n                    <div className='entry-bar-section entry-bar-reminders'>\n                        <h4>Reminders</h4>\n                        <div className='entry-tiles'>\n                            {reminders}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DemoEntry","import React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport HomePage from '../HomePage/HomePage';\nimport './DemoView.css';\nimport EntryPage from '../EntryPage/EntryPage';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport Date from '../../components/Card/Date/Date';\nimport ContentEditable from 'react-contenteditable';\nimport DemoBike from './DemoBike';\nimport DemoEntry from './DemoEntry';\n\n\nclass DemoView extends React.Component {\n    render() {\n        return (\n            <section className='demo-view'>\n                <div className='entry-demo'>\n                    <section className='entry-page'>\n                        <Route path='/demo' component={DemoEntry} />\n                    </section>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default DemoView;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Date from '../../components/ToolBox/Blocks/Date/Date';\nimport Text from '../../components/ToolBox/Blocks/Text/Text';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport Clock from '../../components/ToolBox/Blocks/Clock/Clock';\n\nclass DemoBlood extends React.Component {\n    render() {\n        return (\n            <section className='demo-entry-log demo-blood'>\n                <Link to='/demo'>\n                    <FontAwesomeIcon \n                        className='entry-back-arrow' \n                        icon={faArrowCircleLeft} />\n                </Link>\n                <div className='demo-entry-log-body'>\n                    <Date />\n                    <Clock value={{ time: 1430 }} />\n                    <Text value={({ text: 'Go to LA Hospital' })}/>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default DemoBlood","import React from 'react';\nimport CheckList from '../../components/ToolBox/Blocks/CheckList/CheckList';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport Title from '../../components/ToolBox/Blocks/Title/Title';\n\nclass DemoReading extends React.Component {\n    render() {\n        return (\n            <section className='demo-entry-log demo-reading'>\n                <Link to='/demo'>\n                    <FontAwesomeIcon \n                        className='entry-back-arrow' \n                        icon={faArrowCircleLeft} />\n                </Link>\n                <div className='demo-entry-log-body'>\n                    <Title value={({title: 'Moby Dick'})} />\n                    <CheckList value={({ checked: true, text: '2 Chapters' })} />\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default DemoReading","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport CheckList from '../../components/ToolBox/Blocks/CheckList/CheckList';\nimport Date from '../../components/ToolBox/Blocks/Date/Date';\n\nclass DemoGroceries extends React.Component {\n    render() {\n        return (\n            <section className='demo-entry-log demo-groceries'>\n                <Link to='/demo'>\n                    <FontAwesomeIcon \n                        className='entry-back-arrow' \n                        icon={faArrowCircleLeft} />\n                </Link>\n                <div className='demo-entry-log-body'>\n                    <Date />\n                    <CheckList value={({ checked: true, text: 'Ranch' })} />\n                    <CheckList value={({ checked: true, text: 'Eggs' })} />\n                    <CheckList value={({ checked: true, text: 'Lemons' })} />\n                    <CheckList value={({ checked: true, text: 'Olive Oil' })} />\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default DemoGroceries","import React from 'react'\nimport { Switch, Link, Route } from 'react-router-dom'\nimport LandingPage from '../../routes/LandingPage/LandingPage'\nimport LoginPage from '../../routes/LoginPage/LoginPage'\nimport RegistrationPage from '../../routes/RegistrationPage/RegistrationPage';\nimport MissingPage from '../../routes/MissingPage/MissingPage';\nimport './NonUser.css';\nimport DemoView from '../../routes/DemoView/DemoView';\nimport DemoBike from '../../routes/DemoView/DemoBike';\nimport DemoBlood from '../../routes/DemoView/DemoBlood';\nimport DemoReading from '../../routes/DemoView/DemoReading';\nimport DemoGroceries from '../../routes/DemoView/DemoGroceries';\n\nclass NonUser extends React.Component {\n    render() {\n        return (\n            <section className='new-user view'>\n                <nav>\n                    <Link to='/'>\n                        <span className='logo'>\n                            Goala\n                        </span>\n                    </Link>\n                    <div className='new-user-links'>\n                        <Link to='/register'>Register</Link>\n                        <Link to='/login'>Login</Link>\n                    </div>\n                    \n                </nav>\n                <main>\n                    <Switch>\n                        <Route exact path='/' component={LandingPage} />\n                        <Route exact path='/login' render={() => <LoginPage login={() => this.props.login()}/>} />\n                        <Route exact path='/register' component={RegistrationPage} />\n                        <Route exact path='/demo' component={DemoView} />\n                        <Route path='/demo/bike' component={DemoBike} />\n                        <Route path='/demo/groceries' component={DemoGroceries} />\n                        <Route path='/demo/reading' component={DemoReading} />\n                        <Route path='/demo/blood' component={DemoBlood} />\n                        <Route component={MissingPage}/>\n                    </Switch>\n                </main>\n            </section>\n        )\n    }\n}\n\nexport default NonUser;","import config from '../config'\nimport TokenService from './token-service';\n\nconst ChatService = {\n    postMessage(goalId, msg='new goal') {\n        return fetch(`${config.API_ENDPOINT}/chat/${goalId}`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            },\n            body: JSON.stringify({\n                msg\n            })\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    },\n    // gets entire conversation for the day\n    getChat(goalId) {\n        return fetch(`${config.API_ENDPOINT}/chat/${goalId}`, {\n            method: 'GET',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`,\n            },\n        })\n        .then(res =>\n            (!res.ok)\n                ? res.json().then(e => Promise.reject(e))\n                : res.json()\n        )\n    }\n}\n\nexport default ChatService","import React from 'react'\nimport ChatService from '../services/chat-service'\n\nconst nullGoal = {\n    id: null,\n    title: '',\n    motivations: [],\n    duration: null,\n    user_id: null,\n}\n\nconst nullGoals = {\n    goal_0: nullGoal\n}\n\nconst nullChats = {\n}\n\nconst GoalContext = React.createContext({\n    goals: nullGoals,\n    chats: nullChats,\n    error: null,\n    setError: () => {},\n    clearError: () => {},\n    deleteGoal: () => {},\n    setGoal: () => {},\n    setChat: () => {},\n    updateChatClient: () => {},\n    updateChatServer: () => {},\n})\n\nclass GoalProvider extends React.Component {\n    state = {\n        goals: nullGoals,\n        chats: nullChats,\n        error: null,\n    }\n    // arrow functions for binding, oh yeah\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    clearError = () => {\n        this.setState({ error: null })\n    }\n\n    setGoal = (goal) => {\n        const id = goal.id\n        const { goals } = this.state\n        goals[`goal_${id}`] = goal\n        this.setState({ goals })\n    }\n\n    setChat = (goalId, chat) => {\n        const { chats } = this.state\n\n        chats[`chat_${goalId}`] = chat\n        this.setState({ chats })\n    }\n\n    updateChatClient = (message, goalId) => {\n        const { chats } = this.state\n\n        const msg = {\n            message,\n            user_id: 1 \n        }\n        chats[`chat_${goalId}`].push(msg)\n        this.setState({ chats })\n\n        // After updating chat context, pass new msg from client to server\n        ChatService.postMessage(goalId, message)\n            .then(res => {\n                console.log('RES', res)\n                this.updateChatServer(res.msg, goalId)\n            })\n            .catch(res => {\n                this.setState({ error: res.error })\n            })\n    }\n\n    updateChatServer = (message, goalId) => {\n        const { chats } = this.state\n        const msg = {\n            message,\n            user_id: 0\n        }\n\n        chats[`chat_${goalId}`].push(msg)\n        this.setState({ chats })\n    }\n\n    render() {\n        const value = {\n            goals: this.state.goals,\n            chats: this.state.chats,\n            error: this.state.error,\n            setError: this.setError,\n            clearError: this.clearError,\n            setGoal: this.setGoal,\n            setChat: this.setChat,\n            updateChatClient: this.updateChatClient,\n            updateChatServer: this.updateChatServer,\n        }\n        return (\n            <GoalContext.Provider value={value}>\n                {this.props.children}\n            </GoalContext.Provider>\n        )\n    }\n}\n\nexport {\n    nullGoal,\n    GoalContext,\n    GoalProvider\n}","import React from 'react';\nimport User from './views/User/User';\nimport NonUser from './views/NonUser/NonUser';\nimport './App.css';\nimport TokenService from './services/token-service';\nimport { GoalContext } from './context/GoalContext';\n\nclass App extends React.Component {\n  state = {\n    user: false\n  }\n  login() {\n    this.setState({ user: true })\n  }\n  logout() {\n    TokenService.clearAuthToken()\n    this.setState({ user: false })\n  }\n  render() {\n    const currentView = TokenService.hasAuthToken() ? <User logout={() => this.logout()}/> : <NonUser login={() => this.login()}/>\n    return (\n      <div className=\"App\">\n        {currentView}\n      </div>\n    );\n  }\n}\n\nApp.contextType = GoalContext;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { GoalProvider } from './context/GoalContext';\n\nReactDOM.render(\n    <BrowserRouter>\n        <GoalProvider>\n            <App />\n        </GoalProvider>\n    </BrowserRouter>, \n    document.getElementById('root'));\n"],"sourceRoot":""}